


﻿УДК 681.3
АЛГОРИТМ ВЗАИМНОГО ИСКЛЮЧЕНИЯ В ПИРИНГОВЫХ СИСТЕМАХ
В.В. Губарев, A.A. Обейдат
Новосибирский государственный технический университет E-mail: atefob@hotmail.com
Предложен алгоритм взаимного исключения одновременного доступа разных процессов к одному и тому же объекту в динамических П2П системах, ориентированный на уменьшение служебного трафика. Основная идея его - передача сообщений между запросными узлами и координатором. Информация n дубликатов объекта R публикуется в n узлах, (в координаторе и его кандидатах). Узлы посылают запрос координатору собственников дубликатов, чтобы получить доступ к объекту. В работе описывается актуальность, существо алгоритма, экспериментально, путем имитации, оценивается его масштабируемость и эффективность.
Ключевые слова:
Распределенные системы, пиринговые системы, взаимное исключение, Интернет-приложения.
1.	Введение и постановка задачи
Одно из последних направлений распределенных информационных систем и сетей - пиринговые сети - переживает в настоящее время активное становление [1-5]. В связи с молодостью и перспективностью в теории их создания и практического применения появляются все новые и новые фундаментальные задачи, требующие неотложного решения. Одной из таких является задача взаимного исключения - устранения возможности одновременного доступа разных пользователей к одному и тому же объекту сети в тех критических ситуациях, когда одновременное выполнение запросов этим объектом не допускается. Хотя эта задача решается в традиционных средствах параллельных вычислений, специфика П2П не всегда позволяет эффективно использовать известные решения. Существующие для аналогичных П2П решения удовлетворяют не всем требованиям П2П-систем.
В связи с этим цель настоящей работы - разработка алгоритма взаимного исключения в П2П, отвечающего требованиям эффективности, надежности и масштабируемости. Для достижения поставленной цели в работе решаются следующие задачи:
1.	Описание модели рассматриваемых систем.
2.	Рассмотрение операций процесса тиражирования дубликатов объекта.
3.	Описание и исследование нового алгоритма взаимного исключения, отличающегося отсутствием недостатков, присущих существующим алгоритмам, и удовлетворяющего требованиям упорядоченности, масштабируемости, децен-трализованности и отказоустойчивости сети.
4.	Имитационное сравнение предложенного алгоритма с существующими алгоритмами по масштабируемости и эффективности.
2.	Модель рассматриваемых систем
Рассматриваемые в данной работе алгоритмы основаны на следующей модели, описывающей динамические пиринговие системы.
1.	Система состоит из равноправных узлов. Обозначим множество узлов через {д,/=0,Ж-1}, где
N - общее количество узлов в системе, а р -узел с идентификатором ¡ё. Каждый узел может быть клиентом (получателем) и в то же время сервером (поставщиком) объектов. Узел, выступающий как сервер, т. е. имеющий дубликат совместно используемого объекта (данных) и готовый представить его в ответ на запрос, назовем серверным узлом (СУ).
2.	Каждому доступному пользователям объекту Щ (реальному файлу данных или вычислительному объекту) соответствует определенный набор узлов, содержащих дубликаты запрашиваемых пользователями объектов. Набор объектов обозначим через П={Щ/= 0,т-1}, где т - количество объектов, а набор дубликатов (реплик) гр соответствующих объекту Щ, обозначим через Г,={гр1=0,п-1}, где п - количество дубликатов. Каждый дубликат , объекта Щ содержится в определенном узле. Мы условно назовем узел, который имеет дубликат I объекта, копией (репликой или дубликатом) I.
3.	Дубликаты всегда доступны, но их внутреннее состояние может быть случайно сброшено вследствие сбоя. После обнаружения сбоя дубликат вновь восстанавливается в сети с прежним значением идентификатора узла ¡ё.
4.	Каждый объект Щ имеет уникальный двоичный т-битный идентификатор (ключ) К, который вычисляется как хэш текстового имени объекта (например, Х). Идентификатор К может быть вычислен с использованием конфликтоустойчивой (не допускающей повторения) хэш-функции (например, SHA-1 [6]), так же, как идентификатор узлов. Узел V, системы с идентификатором, совпадающим с идентификатором К объекта Щ, выступает в качестве координатора набора Г, дубликатов объекта.
3.	Тиражирование дубликатов объекта
Одной из важнейших задач П2П является тиражирование дубликатов, обеспечение их аутентичности. Существующие методы тиражирования дубликатов на все узлы являются громоздкими. Поэ-
тому предлагается новый метод наборного (не поголовного, а востребованного, текущего) тиражирования.
Основная идея метода - тиражировать дубликаты изменяемых объектов не во всех узлах сети, а только в активных, т.е. по мере необходимости обращения узлов к дубликатам. Для этого предлагается организация набора заинтересованных узлов, объединяемых координатором. Предусматривается, что собственники дубликатов некоторого объекта организованы в набор Г,. Каждое множество Г, имеет уникальный идентификатор К]. Идентификатор К, набора присваивается с использованием хеширования имени объекта. В качестве координатора для соответствующего набора выступает узел V, с идентификатором, являющимся численно наиболее близким к идентификатору набора К,.
3.1.	Операции метода
Соединение: чтобы получать обновление дубликата, узел, содержащий дубликат, который надо поддерживать в современном состоянии, инициирует операцию «Соединение» (т. е. присоединения к набору).
Разъединение: если узлу не требуется поддерживать свой дубликата в современном состоянии, он инициирует операцию «разъединение» (т. е. отсоединения от набора), тем самым оставив без внимания текущие модификации дубликата, экономя ресурсы (свои и сети).
Восстановление: при восстановлении и возвращении в систему, узел инициирует операцию «восстановление», по выполнении которой получает современную версию дубликата объекта.
3.1.1.	Операция «^единение». На рис. 1, а, приведена схема операции соединение для собственника дубликата объекта.
Шаг 1. Узел р - собственник дубликата объекта просит оверлей вычислить хешированный идентификатор К его объекта Щ.
Шаг 2. р просит оверлей послать сообщение соединение М=^ё, соединение, К) узлу V, с идентификатором ¡ё, наиболее близким к хешированному идентификатору К .
Шаг 3. р получает ответ от координатора, что он стал членом набора Г,.
При получении координатором сообщения соединение он начнет выполнять следующие шаги (см. рис. 1, б):
Шаг 1. Координатор V, или кандидат получает сообщение М (соединение).
Шаг 2. Координатор V, проверяет, пришло ли это сообщение от собственника дубликата или нет. Если да, он (на Шаге 3) отправляет собственнику ответ, содержащий текущую версию дубликата объекта.
Шаг 4. Координатор V, проверяет, существует ли набор Г с идентификатором К или нет.
Шаг 5. Если набор существует, это означает, что узел V, уже является координатором множества Г,. В этом случае V, добавляет информацию о собственнике дубликата в список собственников и отправляет сообщение соединение узлу V/, чей идентификатор наиболее близок к нему, чтобы этот узел стал новым кандидатом координатора V,,. Число кандидатов вместе с координатором равно числу дубликатов.
С
Начало
К'-ХЭ	ш(Я/)
2 1	Г
Послать М к координатору
3 1	г
Получить ответ
3 ^		г
Послать ответ
—►
^ Конец ^
а. Собственник дубликата
^ Конец ^
б. Координатор
Рис. 1. Схема операции «соединение»
1
5
6
Шаг 6. Если набор не существует, источник сообщения - собственник дубликата осознает, что он является координатором v; для нового набора собственников дубликатов Г;, поэтому должен создать список Г,- и добавить отправителя сообщения в свой список; в противном случае он будет кандидатом vc для координатора.
3.1.2.	Операция «разъединение». Когда узлу pt не требуется поддерживать свой дубликата в современном состоянии, он инициирует операцию разъединения, чтобы выйти из набора. Координатор, получая это сообщение, удаляет информацию о дубликате узла pt из своего списка и информирует об этом своих кандидатов.
3.1.3.	Операция «воссоединение». Шаги операции восстановления следующие.
Шаг 1. Когда любой узел pt желает получить современную версию дубликата объекта, он посылает своему vj сообщение ВОССТАНОВЛЕНИЕ с указанием имеющейся в узле версии дубликата.
Шаг 2. При получении сообщения ВОССТАНОВЛЕНИЕ, v; определяет различие между последней версией дубликата, находящегося в системе, и версией дубликата узла р.
Шаг 3. Если отличия в дубликатах нет, v; включает узел Pi в набор. Если дубликаты отличаются, v; отправляет сообщение ОБНОВЛЕНИЕ узлу р, содержащее список модификаций OPS.
Шаг 4. При получении сообщения ОБНОВЛЕНИЕ узел Pi выполняет модификации в списке OPS и приводит свой дубликат объекта в соответствие с текущей версией объекта. После этого узел pt включается в набор Г,
4.	Алгоритм взаимного исключения одновременного
доступа для изменения объекта
Вторая важная задача - это взаимное исключение доступа к одному и тему же объекту или его дубликатам, когда одновременный доступ недопустим, нежелателен (один узел хочет читать содержимое объекта, другой записывать или изменять его либо оба узла хотят изменить содержимое объекта). Недостатки существующих методов - в трудности их масштабирования.
Предложенный алгоритм основан на организации набора узлов и передаче сообщений только между запросными узлами и координатором. Поэтому назовем его условно алгоритмом узел-координатор (У2К). Запросные узлы посылают запрос координатору, чтобы получить доступ к объекту. При получении запроса на использование объекта R, координатор v; уведомляет об этом всех своих кандидатов и посылает ответ запросному узлу. Ответ содержит информацию о текущем владельце, работающем с объектом, и очереди ожидающих узлов. После завершения работы с объектом узел посылает координатору сообщение ОСВОБ. Когда v; получает сообщение ОСВОБ от текущего владельца объекта, он уведомляет об этом все запросные узлы набора, включая
и кандидатов координатора, и, если только что завершивший работу с объектом узел производил модификацию объекта, сообщает им о новой версии объекта, а при необходимости тиражирует ее.
Полномочие доступа к объекту предоставляется при одновременном соблюдении следующих условий:
a)	Допустимо множество операций чтения в одно и то же время.
b)	Разрешается только одна операция записи в одно то же время.
c)	Отсутствие (запрет) пары или поле операций «чтение - запись» в одно и то же время.
Шаги алгоритма У2К следующие.
Входящими данными алгоритма являются:
¡ё: идентификатор узла ¡;
с/. идентификатор клиента, владеющего объектом Щ; / время получения полномочий (разрешения) на доступ к объекту Щ; 4„: временная отметка, переменная состояния, всегда хранящаяся в р, изначально ноль;
pQ¡. частичный перечень ожидающих запросов, который содержит сведения о запросах всех клиентов, упорядоченных по времени; 2 полная очередь запросов, изначально пустая, используется только координатором;
Т время аренды, полномочие на доступ объекта предоставляется на некоторое время Т. Координатор отслеживает время окончания блокировки и снимает ее, когда время Т истекает;
Я/, идентификатор объекта,;
М: сообщения между узлами, которые обычно содержат: ^ - идентификатор источника сообщения, запросного узла р; 1ео - временная отметка запроса; р2 - частичная очередь запросов; с1- пункт доставки сообщения; (с,/ - текущий собственник и временная отметка; Тип сообщения: (ЗАПРОС, ОСВОБОЖДЕНИЕ (ОСВОБ), ОТВЕТ).
Шаг 1. Когда узел р1 хочет получить доступ к определенному объекту Щ, он посылает координатору сообщение ЗАПРОС(s=id, 4„, ё=К). В качестве координатора рассматривается узел системы с идентификатором, наиболее близким к хешированному идентификатору К, ассоциированного объекта Щ.
Шаг 2. Когда узел V,, который выступает в качестве координатора для набора дубликатов, получает запрос на доступ к объекту Щ от узла р, он определяет, доступен объект Щ или нет. Если да, то он блокирует объект Щ для узла р1 (т. е. с=р, tcj=M•tJ, посылает сообщение ОТВЕТ «Да» запросному узлу и информирует об этом его кандидатов. В противном случае он добавляет запрос в очередь.
Шаг 3. Когда узел р1 получает сообщение ОТВЕТ «да», он проверяет, является ли он сам владельцем объекта или нет. Если да, он может войти в критическую секцию (КС) и начать использовать
объект Щ. Когда он заканчивает свою работу в КС, он посылает V, сообщение ОСВОБ. В противном случае, если он получает сообщение ОТВЕТ «нет», ему требуется ждать в течение определенного времени ожидания ^=1^к, где I - число узлов в очереди р2, 4с - время нахождения узла в КС.
Шаг 4. При получении координатором сообщения ОСВОБ от текущего владельца КС, он проверяет, пуста ли очередь запросов. Если нет, он исключает из очереди нового владелица, посылая ему ОТВЕТ «да», и рассылает сообщение ОСВОБ всем остальным узлам очереди <2. Если координатор не получит от текущего узла сообщение ОСВОБ в течение прогнозного времени (Т), он поймет, что владелец объекта вышел из строя. Тогда он даст полномочие на доступ к объекту следующему узлу в очереди. Если очередь закончилась, координатор ожидает, новые запросы.
Шаг 5. При получении от координатора сообщения ОСВОБ, узел р1 ждет свою очередь. Если узел р1 не получает сообщение ОТВЕТ или ОСВОБ в течение прогнозного времени ^, он вновь (шаг 1) посылает сообщение ЗАПРОС узлу в качестве координатора.
Итак, шаги 1-5 повторяются по мере того, как узлы хотят получить доступ к совместно используемому объекту Щ.
5.	Свойства У2К
Теперь рассмотрим, какие свойства имеет У2К
и,	следовательно, каким требованиям он удовлетворяет.
Первое свойство - упорядоченность. Прежде всего отметим, что У2К соответствует требованию упорядоченности, т. к. запросы удовлетворяются в порядке «первым пришёл, первым обслужен (FCFS)». Действительно, только координатор V , содержит 2 и принимает решение относительно доступа к объекту в соответствии со своей информацией. После получения сообщения (ЗАПРОС или ОСВОБ) координатор проверяет состояние объекта. Если он свободен, V, посылает сообщение «ДА» следующему в очереди узлу. Это сообщение содержит разрешение на использование объекта, доступ в его КС. По его получении запросный узел входит в КС. Только V, может предоставить полномочие на доступ к общему объекту. Таким образом У2К обладает свойством упорядоченности.
Второе важное свойство - степень загрузки сети служебным трафиком. Как нетрудно убедиться, она будет ниже, чем в существующих алгоритмах, поскольку У2К использует меньшее количество операций, чем другие алгоритмы. На самом деле обмен сообщениями в алгоритме осуществляется только между запросными узлами и координатором вместо обмена сообщениями со всеми узлами как в существующих алгоритмах. Например, сообщение ЗАПРОС посылается только координатору, а не всем узлам, хранящим п дубликатов, как в других алгоритмах, основанных на кворуме [7, 8].
Свойство децентрализации. У2К достигает лучших показателей децентрализации и отказоустойчивости, т. к. Qj хранится в v; и его кандидатах, а частичные очереди - во всех запросных узлах. Поэтому все узлы локально определяют следующего владельца объекта при получении сообщения ОСВОБ или по окончании времени аренды объекта. Несмотря на то, что Qj хранится в координаторе и кандидатах, У2К гарантирует взаимное исключение, но с другой стороны У2К отказоустойчив: когда координатор и кандидаты выходят из строя одновременно, запросные узлы могут и узнают об этом, не получая сообщение ОСВОБ от текущего владельца объекта в пределах времени аренды. Это означает, что когда координатор выходит из строя, запросные узлы вновь посылают свои запросы с частичными очередями (pQ) новому координатору. Новый координатор объединит все полученные pQj в одну полную очередь Qj.
Свойство аутентичности. Требование аутентичности удовлетворяется, если в любой момент времени содержимое всех востребованных дубликатов объекта одинаково (т. е. удовлетворяется условие тождественности всех копий одной). Это требование можно обеспечить разными путями. Первый -одновременной заменой всех старых дублей измененного объекта новой редакцией (тиражированием новых дублей) сразу же по окончании изменения объекта до выполнения следующего по очереди запроса. Второй путь, описанный в п. 2, выдачей последней редакции дублей только тем узлам, которые за ними сейчас обращаются. Ясно, что при этом, чтобы обеспечить аутентичность дубликатов последней версии объекта, У2К, использующий метод отслеживания активных дубликатов объекта, в случае остановки, сбоя или тиражирования нового дубликата объекта вначале должен обновить содержимое старого дубликата объекта.
6.	Результаты имитационного моделирования У2К
Для сравнения У2К и других известных [7, 8] алгоритмов взаимного исключения применим подход имитационного экспериментирования с алгоритмами. Программную реализацию предложенного и существующих алгоритмов взаимного исключения выполним на основе системы FreePastry [9, 10]. Разработанная программа, стартуя, создает набор узлов, расставленных согласно сетевой топологии Pastry. Цели моделирования - проверить масштабируемость и загрузку сети служебным трафиком (т. е. определить число сообщений).
Одним из главных качеств алгоритма взаимного исключения является его пригодность к масштабируемости сети, т. е. к увеличению количества узлов сети. Для экспериментального компьютерного исследования масштабируемости У2К по сравнению с другими, хорошими по этому показателю, алгоритмами, выполняем их одинаковую программную реализацию. Для этого следует реализовать на ЭВМ компьютерные модели сетей и запустить на компьютере несколько раундов работы смоделиро-
3000	4000
Ч1СЛО узлов
Рис. 2. Сравнение алгоритмов по среднему количеству сообщений
ванных сетей. Выполняем несколько раундов моделирования (в среднем свыше десяти) и находим средние значения экспериментальных результатов. В каждом раунде каждая сеть (точнее её модель) проделывает весь тот объем работы, который проделывают узлы в реальной сети. При этом от раунда к раунду может меняться число узлов сети, а также число запросов доступа к объектам, посылаемых множеством случайно выбранных узлов. Делается это таким образом, что одинаковые показатели параметров сети остаются неизменными для всех сравниваемых в том же раунде алгоритмов. А именно, в каждом раунде узел наугад освобождает 50 % удерживаемых им объектов. Число объектов, дубликатов и запросов в каждом раунде постоянно и составляет 65, 10 и 20 соответственно.
На рис. 2 представлено сравнение У2К с алгоритмами Sigma [7], E2E [8] и NONE2E [8] по среднему числу сообщений. Как видно из рисунка, все зависимости почти линейны относительно числа узлов. В У2К загрузка сети служебным трафиком в среднем в 2 раза меньше, чем в сквозном Е2Е алгоритме. Следовательно, У2К имеет лучшие свойства
по масштабируемости. В правой части рис. 2 представлены отношения выборочного среднеквадратического отклонение о к среднему х числу сообщений. Как видно из приведенных данных, представленные на рисунке зависимости характеризуются сравнительно малой стохастичностью (отношения О/- - единицы либо один, два десятка %), т. е. близки к функциональным. Это подтверждает справедливость выводов по результатам имитации.
Выводы
Описаны новые алгоритмы тиражирования дубликатов и взаимного исключения в П2П. Обоснована актуальность разработки и приведены модель системы, общее описание алгоритмов, их операции и свойства. Полученные результаты имитации алгоритма взаимного исключения выявили, что он обладает намного лучшей эффективностью, чем существующие алгоритмы, и хорошо масштабируем. Таким образом, алгоритм способен поддерживать большее количество узлов. Предложенные алгоритмы инвариантны к его разной сетевой реализации в структурированных П2П.
СПИСОК ЛИТЕРАТУРЫ
1.	Мартин Дж. Системный анализ передачи данных. - М.: Мир, 1975. - Т. 1. - 256 с.
2.	Обейдат А.А., Губарев В.В. Обзор алгоритмов распределенного взаимного исключения в динамических пиринговых системах // Сб. научных трудов НГТУ. - 2007. - № 2 (48). - С. 63-68.
3.	Ganesan P., Gummadi P.K., Garcia-Molina H. Canon in G major: Designing DHTS with hierarchical structure // ICDCS. - Tokyo, 2004. - P. 263-272.
4.	Kumar A. Hierarchical Quorum Consensus: A New Algorithm for Managing Replicated Data // IEEE Transactions on Computers. -1991. - V. 40. - № 9. - P. 996-1004.
5.	Stoica I., Morris R., Karger D., Kaashoek M.F., Balakrishnan H. Chord: A scalable peer-to-peer lookup service for internet applications // Proc. of ACM SIGCOMM. - 2001 [Электронный ресурс]. - Режим доступа: - URL: http://iptps04.cs.ucsd.edu/ pa-pers/karger-subgroup.pdf/. - 15.05.2007.
6.	FIPS 180-1, «Secure hash standard», Tech. Rep. Publication 180-1, Federal Information Processing Standard (FIPS), National Institu-
te of Standards and Technology, US Department of Commerce, Washington, D.C., April, 1995.
7.	Shiding Lin, Qiao Lian, Ming Chen, Zheng Zhang. A practical distributed mutual exclusion protocol in dynamic peer-to-peer systems // 3rd International Workshop on Peer-to-Peer Systems (IPTPS’04). - San Diego, CA, USA, Feb., 2004. - P. 1-10.
8.	Muhammad M., Cheema A.S., Gupta I. Efficient mutual exclusion in peer-to-peer systems // 6th IEEE/ACM International Conference on Grid Computing. - 2005. - P. 296-299.
9.	Hoye J. Freepastry [Электронный ресурс]. - Режим доступа: http://freepastry.rice.edu/FreePastry/. - 15.01.2007.
10.	Rowstron A., Druschel P. Pastry: Scalable, distributed object location and routing for large-scale peer-to-peer systems // Proceedings of Middleware, Nov. 2001 [Электронный ресурс]. - Режим доступа: research.microsoft.com/~antr/PAST/pastry.pdf. - 15.01.2007.
Поступила 03.04.2009 г.

=====



﻿A = A + A,	(3)
где A - сообщение не содержит атаку, A - сообщение содержит атаку, но она не обнаружена активными элементами межсетевого экрана.
P(А) = І - Pa	(4)
Найдём P( A ) . Для этого надо умножить вероятность того, что сообщение содержит атаку на вероятность того, что эта атака не будет обнаружена активными элементами. Вероятность того, что атака не будет обнаружена равна (1- Py) *
* (1-Pag) * (1-P,ds). Отсюда
P( A) = Pa [(І-Ppf ) * (І-Pag ) * (І- Pids)] ;
P(A) = P(A) + P(A) = І - Pa + Pa [(І - Ppf )] * (І - Pag ) * (І - Plds ) =
0,93224.
Вероятность того, что атака будет обнаружена активными элементами межсетевого экрана P(A) = І - P(A) = 0,06776.
Для сравнения, вероятность обнаружения атаки из заданного множества атак А только при использовании пакетного фильтра составляет 0,022.
Предложенная архитектура межсетевого экрана позволяет создать межсетевой экран, который сочетает в себе функции пакетного фильтра и шлюза прикладного уровня.
Кроме того, отличительной особенностью такого межсетевого экрана является использование интегрированных систем обнаружения вторжений и почтового фильтра, что позволяет обеспечить максимальную безопасность корпоративных сетей при их взаимодействии с публичными и общедоступными сетями.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Олифер В.Г., Олифер Н.А. Компьютерные сети - СПб: Питер, 2001. - 864 с.
2.	Лукацкий А.В. Firewall - не панацея. - http://www.citforum.ru
3.	Польман Н., Кразерс Т. Архитектура брандмауэров для сетей предприятия / Пер. с англ. - М.: Изд. дом «Вильямс». 2003. - 432 с.
4.	Лукацкий А.В. Новые грани обнаружения и отражения угроз. - http://www.citforum.ru
М.К. Климов Россия, г. Ростов-на-Дону, РВИ РВ
ЗАЩИТА ИНФОРМАЦИИ В КРИТИЧЕСКИ ВАЖНЫХ СЕГМЕНТАХ СИСТЕМ АВТОНОМНОГО ЭЛЕКТРОСНАБЖЕНИЯ С КОМПЬЮТЕРИЗИРОВАННЫМ УПРАВЛЕНИЕМ
В настоящее время критически важные сегменты (средства управления) систем автономного электроснабжения с компьютеризированным управлением предназначены для выполнения весьма ответственных задач обеспечения гарантированного электроснабжения объектов и комплексов специального назначения. Сис-
темы автономного электроснабжения состоят из энергетических силовых установок и средств управления ими. Они полностью автоматизированы.
Чтобы обеспечить высокую надежность и более гибкое управление системой автономного электроснабжения осуществляют компьютеризацию средств управления путем внедрения цифровой аппаратуры со специальным программным обеспечением (СПО).
Для того чтобы компьютеризированная система автономного электроснабжения (КСАЭ) функционировала в автоматическом режиме и была управляема, необходимо:
-	контролировать с помощью датчиков параметры КСАЭ, например, напряжение, частоту тока, мощность, время работы;
-	осуществлять сбор и обработку информации, получаемой от датчиков КСАЭ, доставлять эти данные по каналам связи в автоматизированное рабочее место (АРМ) пункта управления;
-	производить сравнение текущих значений параметров КСАЭ с базой данных эталонных значений;
-	вычислять разностный сигнал для автоматизированного оптимального управления КСАЭ.
Схема защиты информации критически важных сегментов перспективных систем автономного электроснабжения с компьютеризированным управлением представлена на рис. 1.
Специфической особенностью критически важных сегментов КСАЭ является то, что информация управления, расчетные программы и микропроцессорные устройства непосредственно управляют электроустановкой в реальном масштабе времени. Наиболее опасной угрозой является несанкционированное включение электроустановки путем использования уязвимостей в тракте сбора, передачи и выдачи информации на пункт управления. Нарушение функционирования КСАЭ можно считать наиболее существенным фактором преднамеренного вывода из строя объектов и комплексов специального назначения.
Объектом защиты в КСАЭ является технологическая информация, включающая:
-	оцифрованные сигналы от датчиков, контролирующих необходимые параметры КСАЭ;
-	базу эталонных параметров КСАЭ;
-	пакеты данных, получаемые с пункта управления КСАЭ и передаваемые на него по проводным и радиоканалам связи, обеспечивающих программное управление функционированием КСАЭ;
-	данные, используемые для цифрового программного управления адаптером, обеспечивающим информационное взаимодействие между датчиками и интерфейсами АРМ со средствами формирования сигналов управления КСАЭ;
-	сведения о нештатных ситуациях в КСАЭ, например, несанкционированное ее включение или выключение.
Нарушение безопасности информации в КСАЭ может произойти путем:
-	внедрения ложных программ и эталонных параметров,
-	программно-технического воздействия (ПТВ) на сигналы управления КСАЭ, передаваемые по различным технологическим каналам.
Все эти воздействия могут привести к частичному либо полному нарушению технологического процесса управления КСАЭ.
Рис. 1. Схема защиты информации критически важных сегментов перспективных систем автономного электроснабжения с компьютерным
управлением
На схеме приняты обозначения:
•—►	- уязвимые места КСАЭ;
О	- критически важные сегменты КСАЭ.
Опасность нарушения функционирования КСАЭ состоит в том, что измеряемые ее параметры не носят строго конфиденциальный характер. Преднамеренное искажение этих значений или деструктивное программно-техническое воздействие на базу эталонных данных и на передаваемую в каналах связи информацию о сигналах управления дезорганизует работу КСАЭ и, как следствие, приводит к полному выводу ее из строя.
При разработке средств защиты информации для инфраструктуры КСАЭ ее уровни защиты от угроз безопасности информации могут реализовываться следующим образом (рис. 1):
-	контролем физического доступа к элементам КСАЭ путем организации технических мероприятий по недопущению посторонних лиц (1 - й уровень);
-	защитой доступа к информации, передаваемой по различным технологическим проводным и радиоканалам связи, установкой в коммуникационном оборудовании программных (программно-технических) средств разграничения доступа к сигналам управления КСАЭ (2 - й уровень);
-	защитой информации в микропроцессорных устройствах и адаптерах с цифровым программным управлением путем специальных проверок микропроцессорных устройств и адаптеров на предмет наличия не декларированных возможностей (3 - й уровень);
-	защитой базы данных эталонных контролируемых параметров и специального программного обеспечения обработки информации о сигналах управления КСАЭ, формируемых в АРМ пункта управления, от несанкционированного доступа (НСД) и ПТВ путем внедрения сертифицированных программных (программно-технических) средств защиты информации (4 - й уровень);
-	защитой информации от НСД, ПТВ и воздействия компьютерных вирусов на уровне общего программного обеспечения АРМ пункта управления путем настройки средств защиты информации операционной системы, системы управления базой данных и установки антивирусных программ (5 - й уровень).
Контролируемыми параметрами (событиями безопасности) при реализации уровней защиты информации в КСАЭ и проверке порядка функционирования являются: время запуска или переключения системы, допустимые значения параметров (напряжение, частоту тока, мощность и т.д.) при переводе системы в различные режимы функционирования и номинальные значения параметров при штатной работе КСАЭ.
Таким образом, к наиболее опасным угрозам нарушения безопасности информации в КСАЭ следует отнести несанкционированное включение, искажение сигналов от датчиков и нарушение проверочных данных. Реализацию защищенного информационного тракта в КСАЭ целесообразно осуществлять на основе комплексного использования средств защиты информации на всех уровнях протоколов передачи данных и разработки специального программного обеспечения в защищенном исполнении и средств защиты информации АРМ пункта управления и КСАЭ.

=====



﻿7.	Kwitt R., Hofmann U. Robust Methods for Unsupervised PCA-based Anomaly Detection. IEEE/IST Workshop on Monitoring, Attack Detection and Mitigation, Tuebingen, Germany, September 28-29, 2006.
8.	Lincoln labs. KDDCup’99. http://kdd.ics.uci.edu/databases/kddcup99/kdd-cup99.html,
2003.
9.	Gu G., Fogla P., Dagon D., Lee W., Skoric B. Measuring Intrusion Detection Capability: An Information-Theoretic Approach. ASIACCS'06, March 21-24, 2006 Taipei, Taiwan.
10.	Levin I. KDD-99 Classifier Learning Contest:	LLSoft’s	Results Overview.	ACM
SIGKDD Explorations 2000, pp. 67-75, January 2000.
11.	Pfahringer B. Winning the KDD99 Classification	Cup:	Bagged	Boosting.	ACM
SIGKDD Explorations 2000, pp. 65-66, January 2000.
12.	Miheev V., Vopilov A., Shabalin I. The MP13 Approach to the KDD’99 Classifier Learning Contes». ACM SIGKDD Explorations 2000. - P. 76-77, January 2000.
13.	. .,	.	.
// -. - . . - / , 2008. 1.
- C. 10-14.
Карайчев Глеб Викторович
Южный федеральный университет.
E-mail: kgv_rostov@mail.ru.
344091, г. Ростов-на-Дону, пр. Стачки, 235/1, кв. 47.
Тел.: +7 (928) 1252607.
Факультет математики, механики и компьютерных наук; кафедра информатики и вычислительного эксперимента; ассистент.
Karaychev Gleb Viktorovich
South Federal University.
E-mail: kgv_rostov@mail.ru.
App. 47, 235/1, prosp. Stachki, Rostov-on-Don, 344091, Russia.
Phone: +7 (928) 1252607.
Faculty of mathematics, mechanics and computer science; Department of informatics and computing experiment; junior member of teaching staff.
УДК 510.6:656.001
Е.А. Пакулова
МОДЕЛЬ СОВРЕМЕННОЙ СИСТЕМЫ МОНИТОРИНГА ПОДВИЖНЫХ
ОБЪЕКТОВ С ГАРАНТИРОВАННОЙ ДОСТАВКОЙ СООБЩЕНИЙ В ГЕТЕРОГЕННОЙ БЕСПРОВОДНОЙ СЕТИ
Основной целью данной статьи являлось построение модели системы мониторинга транспортных средств (ТС) с использованием нескольких беспроводных . : -, -тов, построена модель системы мониторинга ТС, определены события и команды в модели, а также связи между компонентами модели. В заключение статьи выделены дальнейшие планы работы, направленные на разрабютку и реализацию методов рационального управления технологиями беспроводной связи.
Моделирование; теория множеств; беспроводные технологии связи; система мониторинга транспортных средств.
E.A. Pakulova
THE MODEL OF MODERN MONITORING SYSTEM OF MOBILE OBJECTS
WITH ASSURED DELIVERY OF MESSAGES IN HETEROGENEOUS WIRELESS NETWORK
The main subject of this article is development of transport monitoring system model with the usage of wireless technologies. In this connection the following tasks were decided: the research methods were chosen, which are based on the set theory and the finite automata theory, the events and commands were defined in the model, the connections between the components of the model were specified. The future plans of work directed to development and realization of methods of efficient management of wireless technologies were given in the conclusion.
Modeling; set theory; wireless technologies; transport monitoring system.
Сегодня, в условиях современной жизни, в виду террористических угроз, мы все чаще задумываемся о своей безопасности. Правительства различных стран принимают решения о тотальном контроле значимых объектов, транспортных , . -ются уже зарекомендовавшие себя технологии: системы охранного телевидения, системы управления и контроля доступа, охранно-пожарные сигнализации и мно-.
Отдельной задачей становится обеспечение безопасности граждан на транспорте. В августе 2008 года Правительством РФ было принято постановление №641 «Об оснащении транспортных, технических средств и систем аппаратурой спутниковой навигации ГЛОНАСС или ГЛОНАСС/GPS». Согласно данному постановлению оснащению аппаратурой спутниковой навигации ГЛОНАСС или
/GPS	,	,
( ), -
зуемые для перевозки пассажиров, специальных и опасных грузов [1].
На этом фоне получили большое развитие системы мониторинга ТС. Как пра-
, , технических и эксплуатационных характеристик ТС, контроля маршрута передвижения рейсовых ТС, оповещения владельца в случае тревоги через сервисы . -жую архитектуру. В ее состав входят множество бортовых устройств (или треке), , ( ), -мация с подвижных объектов, и где она анализируется. Для осуществления изложенных функций наиболее часто используется следующий набор технологий: GPS/ГЛОНАСС для определения местоположения объекта и GSM/GPRS для обмена информацией между ДП и ТС. При нормальных погодных условиях, а также
GSM	.
, -, . этом случае должна предоставлять резервные работоспособные каналы для пере, .
:
•	инкассаторская служба;
•	;
•	.
В данной статье рассматривается статичная модель системы мониторинга ТС с использованием нескольких альтернативных друг другу беспроводных технологий передачи данных.
, . -ложим, что система мониторинга ТС состоит из следующих компонентов:
•	бортовые устройства или трекеры - устройства, устанавливаемые на подвижных объектах и собирающие информацию о технических и эксплуатационных характеристиках ТС, а также информацию,
GPS	;
•	ретрансляционные станции (PC)	- неподвижные объекты,
устанавливаемые в городе и выполняющие роль ретрансляторов в
;
•	ДП - пункт, выполняющий функции сбора, анализа и хранения
, .
Все перечисленные компоненты находятся в тесной взаимосвязи: трекер собирает информацию со штатных датчиков и диагностических систем ТС, формирует пакет и отправляет его ДП. Если передача данных ДП в силу каких-либо при, -
, . отправленный пакет получила PC, то она, в свою очередь, отправляет его ДП. Если пакет получил другой трекер, что он также пытается отправить его ДП. Если ДП недоступен, то пакет перенаправляется другому трекеру, ближайшему к ДП, .
,
и станций. Также предположим, что в системе функционирует несколько ДП, на, . -му трекеру или PC не зависит от принадлежности трекеров к определенному ДП.
Дадим представление рассматриваемой модели, построенное на теории .
Представим компоненты системы мониторинга ТС как непустое конечное множество KS. Оно состоит из подмножеств, то есть KS = {TU , SU , CU}, где
TU = {tu1, t„2, ..., V} (Tracker Unit) есть непустое конечное множество бортовых устройств (или трекеров) в системе,
SU = {su1,su2,., sus} (Station Unit) - непустое конечное множество PC,
CP= {cu1, cu2, ... , cuc} (Control Point) есть непустое конечное множество ДП в .
.	TU
-	,
свойствами. Для описания свойств всех элементов универсума введем базу переменных P1, P2,..., Pp, характеризующих показатели соответствующих свойств эле-TU
A; = {ac, ab ..., aa}, где i = 1,., e.
, :
•	P1	A1	=	{a11,	a12,	.	,	a1r},
номер конкретного трекера в системе (каждое бортовое устройство имеет определенный идентификатор или номер, по которому его можно
);
•	Р2 есть значение	из множества А2	= {а21, а22 , ...	,	a2w}, обозначающее
принадлежность	ТС, на котором	установлен трекер, к определенной
службе;
•	Р3 есть значение	из множества А3	= {а31, а32 , ...	,	а3у}, определяющее
количество подключаемых к трекеру датчиков ТС	(в	составе каждого ТС
есть штатные датчики, измеряющие все необходимые эксплуатационные параметры, они могут быть дискретными или аналоговыми);
•	Р4 есть значение из множества А4 = {а41, а42 , ... , а4о}, определяющее наличие сетевых средств (Как правило, современные ТС имеют в своей составе различные сетевые среды для передачи сигналов и команд. Они могут использоваться для подключения новых блоков и устройств, не входящих в базовый набор любого ТС [2]);
•	Р5 есть значение из множества А5 = {а51, а52 , ... , a5g}, определяющего наличие диагностической системы на ТС (как правило современные ТС имеют в своем составе системы бортовой диагностики, позволяющие контролировать состояние систем двигателя, топливной системы, системы зажигания, системы рециркуляции отработавших газов и т.п.).
Аналогичным образом опишем множество РС БИ. Для описания свойств всех элементов данного множества введем базу переменных 2Ь 22, ..., 2Ч, характеризующих показатели соответствующих свойств элементов из множества БИ и принимающих значения из множеств Б; = {Ь0, Ь1, ., Ъь}, где 1 = 1,.. .Д
Опишем некоторые из свойств:
•	<21 есть значение из множества Б1 = {Ь11, Ь12, ... , Ь1Б}, определяющее номер конкретной РС в системе (каждая РС имеет определенный идентификатор или номер, по которому ее можно однозначно отличить от
);
•	22 есть значение из множества Б2 = {Ь21, Ь22, ... , Ь2Б}, определяющее местоположение определенной станции (РС являются неподвижными
,	).
Предположим, что множество СР также является множеством универсумом, содержащим в себе элементы с определенными свойствами. Для описания свойств всех элементов универсума введем базу переменных 01, 02,..., 0С, характеризующих показатели соответствующих свойств элементов из множества СР и принимающих значения из множеств
И; = {го, гь ..., гк}, где ; = 1,., с.
Получим некоторые из свойств:
•	01 есть значение из	множества Ш =	{г11, г12, ... , г1г}, определяющее
номер ДП в системе	(поскольку ДП в	системе может быть несколько, то
);
•	02 есть значение из множества И2 = {г21, г22, ... , г2ё}, определяющее местоположение определенного ДП ОДП являются неподвижными
,	).
•	03 есть значение из множества И3 = {г31, г32, ... , г3w}, определяющее принадлежность к определенной службе (каждый ДП принадлежит к
-	);
•	04 есть значение из	множества И4 =	{г41, г42, ... , г4и}, определяющее
количество обслуживаемых трекеров	(как было указано выше, каждый
);
,	TU,	SU	CP
P1,
P2^ • ^ Pp , Qb Q2, •••, Qq И O1, O2,., °.
Следует также выделить, что все компоненты системы осуществляют долговременное хранение данных, за исключением РС. На ДП осуществляется долговременное хранение данных и их анализ. Трекеры сохраняют информацию в энер-. ,
, -ный промежуток времени в случае сбоя работы системы. Кроме того, в процессе функционирования в компонентах системы происходят различные процессы обра-.
, -
нечное множество процессов обработки информации PS (Processing) и память (или множество блоков памяти) MS (Memory), то есть
Ks= {Ms, Ps},
где PS = {PS1 PS2, PS3}, причем PSi определяет подмножества процессов обработки информации элементов компонентов системы, например,
PS; = { PSy PS;,2 , •••, PS;,r } есть множество процессов обработки информации любого из подмножеств TU, SU или CP, где PSy# 0.
MS = {DB, MT} - множество блоков памяти элементов компонентов системы, где DB (Data Base) есть множество блоков памяти ДП (или баз данных) и MT (Memory Tracker) -	:
DB = {db1,db2, ..., dbc},
MT = {mt1, mt2, ., mtr }.
,	TU,
SU CP	PSi,j
MSi,j.
Взаимодействие элементов компонентов системы происходит через инфор-.	-
рации обмена информацией между элементами компонентов системы. Определим
IS (Information). -
скольку любая передача данных в системе между элементами компонентов инициируется событиями или командами, то определим непустое конечное множество событий в системе EM (Event Message) и непустое конечное множество команд CM (Command Message).
EM = {em1, em2, ., emm},
CM = {cm1, cm2, ., cmcd}.
IS.
определим множество информационных потоков следующим образом:
IS = {EM, CM}.
Под событиями будем понимать сообщения, формируемые в результате вы-
-	-. :
• ;
• события включения/выключения бортового устройства;
•	,
;
• ;
•
;
• ;
•	(
);
•	(
, );
•	.
Под командами будем понимать сообщения, инициирующие какие-либо действия со стороны участников взаимодействия. Как правило, команды формируются на ДП и предназначаются для РС и трекеров.
Выделим некоторые из команд в системе:
•	команды запроса данных с трекера (имеют место быть в случае, если ДП
);
•
обеспечения трекеров и РС;
•	команды управления исполнительными механизмами ТС (например,
);
•	(
);
•
(
);
•	;
•	.
Для РС и трекеров существуют команды оповещения получения пакета с .
При формировании множества информационных потоков 1Б возможно будет удобно рассматривать их по отношению к компонентам системы, то есть, рассматривая компоненты системы, выделять их информационные потоки. Тогда множество информационных потоков системы может быть получено объединением множеств информационных потоков компонентов системы:
18 = 1ТИ и 1БИ и 1СР.
Количество информационных потоков, функционирующих в определенный момент времени - величина переменная, так как элементы компонентов системы находятся в движении. В связи с этим мы можем определить максимальное количество информационных потоков, а в процессе функционирования системы будут возникать одни информационные потоки и исчезать другие.
,
( , ). -TS = {TS1, TS2, .	,	TSt} (Technology).
При использовании беспроводных технологий связи всегда следует учитывать возможность их недоступности при определенных условиях или при наличии каких ■-либо преград. Поэтому выделим непустое конечное множество преград распространению сигнала N = {N1, N2, ., Nsp} (Noise).
Множество помех информационных потоков составляется путем наложения множества элементарных помех обмена информацией на информационный поток:
NIsi = { N1Isi , NIsi , ... , NspIsi}.
Тогда множество помех распространению сигнала в информационном потоке может быть получено следующим образом:
NIS = IS N.
, -вить как ISYS = {TU, CP,SU,PS,MS, IS, NS, TS} (рис. 1).
Рис. 1. Структурная схема модели системы мониторинга ТС
В результате мы получили формальную модель системы мониторинга ТС, построенную на теории множеств. Она представлена в статичном виде и не передает .	-
сов предполагается использовать	теорию	конечных автоматов.	В	перспективе	также	планируется	детализировать	полученную	модель	системы	мониторинга	ТС,
разработать и реализовать методы рационального управления технологиями бес.	-
ных подвижных объектов в режиме реального времени, даже при плохих погод, .
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Постановление Правительства Российской Федерации от 25 августа 2008 г. N 641 "Об оснащении транспортных, технических средств и систем аппаратурой спутниковой навигации ГЛОНАСС или ГЛОНАСС/GPS" // Собрание законодательства Российской Федерации. - М.: “Юридическая литература администрации президента Российской Федерации”, 2008. - №35. - С. 4037.
2.	Пакулова Е.А. Аспекты безопасности в системе мониторинга транспортных средств // Материалы I Всероссийская молодежная конференция по проблемам информационной безопасности ПЕРСПЕКТИВА-2009. - Таганрог: Изд-во ТТИ ЮФУ, 2009. - С. 24 - 28.
Пакулова Екатерина Анатольевна
Технологический институт Федерального государственного образовательного учреждения высшего профессионального образования «Южный федеральный университет»
. .
E-mail: pakulova_e@mail.ru.
347928, .	,	.	,	2,	" ".
Тел.: 8 (8634) 312-018.
Кафедра безопасности информационных технологий; аспирант.
Pakulova Ekaterina Anatolyevna
Taganrog Institute of Technology - Federal State-Owned Educational Establishment of
Higher Vocational Education “Southern Federal University”.
E-mail: pakulova_e@mail.ru.
Block “I”, 2, Chehov str., Taganrog, 347928, Russia.
Phone: 8 (8634) 312-018.
The Department of Security of Information Technologies; post-graduate student.
УДК 681.324
EX. Абрамов
ПОСТРОЕНИЕ АДАПТИВНОЙ СИСТЕМЫ ИНФОРМАЦИОННОЙ
БЕЗОПАСНОСТИ
Предлагается методика построения системы защиты информации, позволяющая с помощью методов теории иммунных систем, нечёткой логики, искусственных нейронных сетей, нечеткого многокритериального выбора решений и численных методов оптимизации создать и поддерживать в актуальном состоянии систему защиты информации, в которой обеспечивается поддержание уровня защищенности, адекватного текущим угрозам. Кроме того, решается задача оценки эффективности получившейся новой структуры СЗИ без изменения режима функционирования текущей конфигурации средств защиты.
Иммунные системы; нечёткая логика; искусственные нейронные сети; нечеткий многокритериальный выбор; имитационное моделирование.
E.S. Abramov DEVELOPMENT OF ADAPTIVE SYSTEM OF INFORMATION SECURITY
There is method of constructing a system of information protection, which allows using the methods of the theory of immune systems, fuzzy logic, artificial neural net-

=====



﻿позиционных систем, могут успешно применяться в таких системах на базе ком.
выполняется путем расчета пробных шагов и последующих переводов системы в
,
заданием и реальным положением объекта за минимальное время при строгом выполнении технологических требований и ограничений координат. Непрерывно вычисляется рассогласование по положению между эталонной и действительной тра-.
управления приводом с ограничениями рывка, ускорения и скорости, по аналогии с . -гласования и путь торможения с нее до останова. Найденная максимальная скорость отработки рассогласования алгебраически суммируется с заданной скоро, -нимальное время без перерегулирования. Если сумма скоростей окажется больше допустимого значения для данной системы, то ее следует ограничить. Движение привода на суммарной скорости продолжается до тех пор, пока отклонение эталонной от действительной траектории движения не станет меньше ранее определенного пути торможения. Далее изменение скорости привода выполняется с учетом ограничения на рывок и ускорение как в позиционной системе на участке торможения в функции рассогласования. Задание по скорости на привод на участке торможения определяется суммой двух составляющих от эталонной траектории движения и от алгоритма изменения скорости отработки рассогласования в функции уменьшающейся ошибки по положению.
Заключение
Методика последовательного многошагового синтеза позволяет реализовывать предельные динамические возможности и автоматизировать сложные произ-, -мы, обеспечивать операторов в реальном масштабе времени «советами» по управлению высокоскоростными подвижными объектам.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1. Беллман Р. Динамическое программирование. - М.: Изд-во “Иностранная лит-ра”, 1960. - 400 с.
2. Мясн иков В А., Игнатьев М.Б., Покровский А.М. Программное упр авление оборудованием. - Л.: Машиностроение, Ленингр. отд., 1974. - 243 с.
3.	Дорри М.Х. Импульсное управление глубиной погружения подводного аппарата // Сборник трудов XXXIV Всероссийской конференции «Управление движением морскими судами и специальными аппаратами». - М.: ИПУ РАН, 2007. - С. 20-25.
УДК: 519.6
С.В. Киор, А.М. Романов
ЦИФРОВОЙ МНОГОФУНКЦИОНАЛЬНЫЙ КОНТРОЛЛЕР ЭЛЕКТРОПРИВОДА ЦМКП-В2
Современное развитие микроэлектроники, в том числе наличие высокопроизводительных вычислителей и быстродействующих цифро-анадоговых (^АП) и аналогово-цифровых преобразователей (АЦП), позволяет построить высокопроиз-
водительный многофункциональный контроллер электропривода для нужд робототехники и мехатроники. К такому контроллеру предъявляются следующие требования:
♦ Работа со всеми основным и типами электродвигателей, применяемыми в робототехнике, а именно с двигателями постоянного тока, асинхронными, синхронными и шаговыми.
♦ Обработка нескольких датчиков разных типов (тока, момента, скорости, положения) имеющих различные как цифровые, так и аналоговые ин-
.
♦ Использование современ ных алгоритмов управления, в том числе на интеллектуальных технологиях, таких как ассоциативная память, искусственные нейронные сети, нечеткая логика [1].
♦
.
♦ Наличие высокоскоростных интерфейсов, обеспечивающих взаимодействие между несколькими контроллерами.
♦	Наличие стандартизированных интерфейсов, обеспечивающих быструю интеграцию как в новые разработки, так и в уже существующие системы.
♦
для отладки программного обеспечения и диагностики контроллера.
В рамках поставленной задачи на кафедре «Проблемы управления» МИРЭА был разработан цифровой многофункциональный контроллер привода (ЦМКП-В2).
Архитектура контроллера представлена на рис. 1. Ядром ЦМКП-В2 является программируемая логическая интегральная схема (ПЛИС) Spartan 3E [2] с частотой тактового генератора 50 МГ ц.
Программно-аппаратное обеспечение (ПАО) ПЛИС основано на модульной архитектуре с открытой шиной Wishbone. Модульная структура подразумевает наличие отдельных стандартных модулей, которые автоматизировано компонуются в требуемую конфигурацию. Структурная схема программно-аппаратного обес-
. 2.
Выбранная архитектура позволяет реализовать многоконтурную систему
( ),
процессорах или с использованием специализированных вычислителей, что увеличивает производительность и устойчивость к сбоям. Так, например, формирование управляющих сигналов отдельными двигателями становится аппаратнонезависимым. Межпроцессорное взаимодействие может быть реализовано: при помощи общей шины, с использованием общих массивов памяти либо выделенных портов обмена данными. В качестве основного процессора общего назначения для системы реализован модуль процессора C16. Это стековый 16разрядный процессор адаптированный для работы с кодом, написанным на языке C.
реализации функций управления процессоров цифровую обработку сигналов ( ). -дификация процессора DSPuva16. По сравнению с оригинальной версией этого процессора была добавлена возможность проведения 24-битных вычислений с фиксированной точкой и системой прерываний.
Рис. 1. Архитектура контроллера ЦМКП-В2
Для увеличения производительности контроллера в контуре цифровой САУ использованы отдельные модули реализующие быстрое вычисление тригонометрических функций по алгоритму СОКШС.
Для решения задач управления на базе разработанного контроллера могут быть аппаратно реализованы технологии нейронных сетей [3] и ассоциативной
.
помощи специализированной САПР.
К инструма ггалы іон ПЭВМ
Рис. 2 Структурная схема ПОА ПЛИС ЦМКП-В2
,
ЦМКП-В2 реализован технологический интерфейс. Он позволяет оператору подключиться к контроллеру с помощью инструментальной ПЭВМ по интерфейсу USB. Технологический интерфейс обеспечивает доступ ко всем модулям системы по общей шине Wishbone, а также к микропроцессорам, модулям нейронной сети и ассоциативной памяти при помощи выделенного порта.
Подключение цифровых датчиков осуществляется при помощи дискретных входов/выходов. Плата ЦМКП-В2 имеет 24 дискретных входа 14 дескретных выхо-, .
ПЛИС каждый датчик обрабатывается отдельным модулем, который подключает к остальной системе по общей шине данных. На данный момент реализованы модули обработки инкрементных квадратурных датчиков, датчиков с интерфейсами SSI, SPI, I2C, а также датчиков имеющих на выходе ШИМ- и ЧИМ-сигналы.
Для подключения аналоговых датчиков в контроллере реализован 8-каншьный 12-р^рядный АЦП с частотой дискретизации 250 кГц, который с
SPI.
случае, если для работы датчика требуется формирование задающего аналогового сигнала (например, датчики СКВТ), его можно сформировать при помощи одного из 2-х 10-р^рядных ЦАП, которые также управляются по интерфейсу 8Р1.
Многофункциональный контроллер электропривода ЦМКП-В2 позволяет работать с двигателями постоянного тока, асинхронными, синхронными и шаговыми .
Типовые схемы подключения двигателей к контроллеру представлены на рис. 3. Совокупность интерфейсов системы подразумевает два основных подхода к их управлению:
♦	непосредственное формирование напряжения на обмотках двигателя при
- - , -
ля мощности;
♦	управление частотным преобразователем (контроллером шагового двигателя) при помощи аналогового токового интерфейса, сигналами дискретных выходов или цифрового интерфейса стандарта Я8422/485.
г.
УМ	—/■—►	дпт
Д
Д/А
3		3,	Синхр./
■У—►	УМ		асинхр.
д		Д	двигатель
ЦМКП-В2
ш
|г$-485
■+	►
ЦМКП-В2	-7^	ПЧ
Д
А
Синхр./ асинхр двигатель
№
А — аналоговый сигнал Д — дискретный сигнал ЩА — дискретны с и аналоговые сигналы ПЧ — преобразователь частоты
Рис. 3. Типовые схемы подключения двигателей к контроллеру>
В первом случае для подключения к усилителю мощности (УМ) могут быть использованы 10 дискретных выходов типа открытый коллектор. Это позволяет при помощи одного контроллера управлять одним двигателем переменного тока или двумя двигателями постоянного тока. Для использования в ПАО ПЛИС разра-
ботаны модули управления высокомоментными бесколлекторными двигателями постоянного тока и векторного управления двигателями переменного тока.
Для управления двигателями переменного тока при помощи частотного преобразователя предпочтительнее использовать токовый интерфейс, так как он имеет более высокие быстродействие и помехозащищенность. Для формирования аналогового сигнала необходимо воспользоваться одним из 2-х расположенных на плате 10. -мощи дискретного интерфейса RS422/485. Для считывания и записи специальных флагов частотного преобразователя (р^решение/запрет движения, наличие перегрузки по току) могут быть использованы дискретные входы/выходы ЦМКП-В2.
Для управления тормозными муфтами и электромагнитными пускателями на плате контроллера реализованы 6 сильноточных дискретных выходов на оптоси-.
Разработанный цифровой многофункциональный контроллер электропривода имеет 8 высокоскоростных интерфейсов стандарта RS422/485 со скоростью передачи данных до 16 Мбит/c. Это позволяет реализовать оперативный обмен командной и телеметрической информацией между ЦМКП-В2 и системой управления верхнего уровня и между контроллерами в режиме группового электропривода.
Использование интерфейсов RS422/485 позволяет не только просто интегрировать контроллер с остальными частями системы управления при новых разра-, .
Функционал ЦМКП-В2 можно расширить дополнительными интерфейсами, так как в конструктиве предусмотрен разъем подключения и места для закрепления .
входят платы интерфейсов: RS232, PS/2, USB1.1, VGA. Ведется разработка модуля интерфейса FastEthemet. Также существует мезонин высокопроизводительного контроллера ARM9 Cortex 3 с установленным Ethernet и CAN интерфейсами на .
Разработанный контроллер прошел комплексные испытания в составе системы управления промышленных транспортного робота «Электроника НЦТМ25м» и манипуляционного робота «РМ-01» [4]. Испытания показали высокое качество , .
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Интеллектуальные системы автоматического управления / Под ред. И.М. Макарова, В.М. Лохина. - М.: ФИЗМАТЛИТ, 2001.
2.	Зотов В.Ю. Проектирование цифровых устройств на основе ПЛИС фирмы Xilinx в САПР WebPack ISE. - М.: Горячая линия - Телеком, 2003.
3. Еремин Д. М., Киор С. В. Методы аппаратной реализации цифровых нейронных сетей на
. / XII	-
учно-технического семинара «Современные технологии в задачах управления, автоматизации и обработки информации», Алушта, 2003.
4. Черноусько Ф.Л., Болотник КН., Градецкий ВТ. Манипуляционные роботы. - М.: Наука, 1989.

=====



﻿УДК 004.891.2 В.В. Симонов
Оценка эффективности параллельных алгоритмов для моделирования многослойного персептрона
Дано краткое описание параллельного алгоритма моделирования многослойного персептрона и параллельного алгоритма обучения iRprop. Алгоритмы используют параллельные вычисления с разделяемой памятью и параллельность на уровне инструкций процессора. Приведено сравнение быстродействия последовательного и параллельного алгоритмов, а также динамика изменения их быстродействия за последние 6 лет. Ключевые слова: многослойный персептрон, обучение многослойного персептрона, параллельные вычисления с разделяемой памятью, SIMD инструкции.
Введение
Алгоритмы моделирования и обучения нейронных сетей имеют высокую вычислительную сложность. Во многих приложениях ИНС, вычислительная сложность пропорциональна квадрату количества настраиваемых связей ИНС. Обучение больших ИНС может занимать несколько дней. Ускорение процесса их обучения поможет исследователям быстрее находить оптимальные топологии и добиваться более точных результатов прогнозирования и распознавания. Также быстродействие моделей ИНС очень важно для систем принятия решений в реальном времени, например систем, использующих машинное зрение.
Объем задач, решаемых с помощью ИНС, непрерывно растет. Увеличивается сложность моделей, ужесточаются бизнес-требования, предъявляемые к моделям. Все это приводит к увеличению вычислительной сложности.
Ранее созданные программы не могут использовать даже половину вычислительной мощности современных процессоров, так как не используют параллельные вычисления, а потенциал увеличения производительности отдельно взятого процессорного ядра практически исчерпан. Быстродействие ранее созданных алгоритмов на современных компьютерах будет повышаться медленнее роста сложности задач, что приведет к неэффективности систем, использующих эти алгоритмы. Поэтому сейчас очень важно создавать новые, параллельные реализации моделей ИНС, чтобы они могли использовать возрастающую вычислительную мощь современных ЭВМ и легко масштабировались для решения больших и сложных практических задач.
Проблема разработки параллельных алгоритмов встала относительно недавно, но ее актуальность непрерывно растет. На данный момент имеется совсем немного теоретических разработок и методов организации параллельных вычислений. Поэтому необходимо искать новые способы распараллеливания алгоритмов, разрабатывать методы выделения шагов, способных выполняться параллельно.
Использование параллельных вычислений позволит повысить энергоэффективность процесса моделирования и обучения, измеренную в миллионах операций с плавающей точкой (mflops) на затраченный ватт электроэнергии.
1.	Постановка задачи
Для популярных в настоящее время математических моделей ИНС и моделей их обучения необходимо разработать параллельные алгоритмы, позволяющие в полной мере использовать вычислительную мощь современных многоядерных процессоров. Параллельные алгоритмы должны хорошо масштабироваться. Это означает, что со временем количество вычислительных потоков, способных выполняться одновременно, будет расти, и алгоритмы должны быть построены таким образом, чтобы обеспечить работой как можно большее количество параллельных потоков.
2.	Выбор метода исследования
Быстродействие реализации сравнивается с быстродействием алгоритмов, реализованных в библиотеке Fast Artificial Neural Network Library (FANN) версии 1.2.0 [1]. Реализация ИНС из библиотеки FANN обладает отличным быстродействием и использует оптимизации, такие как оптимизация доступа к данным, разворачивание циклов (loop unrolling).
Быстродействие измерялось в секундах, затраченных реализациями алгоритмов на выполнение одних и тех же вычислений. Высчитывалось среднее время из десяти проходов для каждой реализации.
В ходе тестирования было установлено, что реализации многослойного персептрона и iRprop [2] не требовательны к пропускной способности памяти. Их быстродействие ограничено только быстродействием процессора. Было проведено тестирование реализации на различных процессорах Intel от 2004 до 2009 года выпуска, от Pentium 4 до Core i7, что позволит сделать некоторые выводы относительно масштабируемости реализаций и спрогнозировать будущие изменения быстродействия.
3.	Описание параллельных алгоритмов
3.1.	Параллельная реализация многослойного персептрона
Многослойный персептрон реализован в виде класса Perceptron. Этот класс отвечает за прямое распространение сигнала в нейронной сети и информацию о топологии сети.
Perceptron содержит данные двух видов: данные для чтения (Structure) и данные для чтения и записи (Data). Во время функционирования нейронной сети ее структура не меняется, т.е. описание структуры сети используется только для чтения, в то время как Data полностью перезаписывается при прямом распространении сигнала в сети. Чтобы можно было выполнять прямое распространение сигнала параллельно, необходимо создать копию экземпляра Perceptron для каждого потока, но так как структура персептрона при этом не меняется, ее можно не копировать. Для этих целей был создан метод Perceptron::ParallelCopy. Таким образом, объект Structure может использоваться несколькими объектами Perceptron. Для разделяемых объектов Structure реализован подсчет ссылок, это позволяет удалить класс Structure, если на него не ссылается ни один из Perceptron.
При прямом распространении сигнала выходной сигнал для каждого нейрона слоя рассчитывается параллельно. Это реализовано с помощью стандарта OpenMP [3].
Число синапсов каждого нейрона сети сделано кратным четырем. Например, если число синапсов нейрона - 13, оно будет увеличено до 16. Однако пользователь по-прежнему может работать только с 13 синапсами, веса добавленных 3 синапсов всегда равны нулю. Добавление дополнительных синапсов делается для того, чтобы можно было применить векторные инструкции для SSE (Streaming SIMD Extension) [4, 5] для вычисления взвешенной суммы входов нейронов. Инструкции SSE позволяют выполнить одну и ту же арифметическую операцию над 4 вещественными числами одинарной точности одной командой. Использование SSE позволило увеличить быстродействие сети в 2,5 раза.
3.2.	Параллельная реализация алгоритма iRprop
При обучении ИНС с помощью алгоритма iRprop ей сначала предъявляются все примеры обучающей выборки, для каждого примера вычисляется ошибка аппроксимации (разность между выходом нейронной сети и полученным значением). Происходит обратное распространение ошибки, т.е. распространение сигнала от выхода нейронной сети ко
dE
входу. Вычисляется оценка частной производной -, где E(W) - функция ошибки
нейронной сети от всех весов сети W; wj - вес нейронной сети, связывающий i нейрон с j, wij е W .
Эти шаги можно выполнить параллельно. Для этого каждый вычислительный поток должен иметь параллельную копию многослойного персептрона (можно использовать Per-ceptron::CloneParallel), копию массива отклонений (ошибок) каждого нейрона в сети и копию массива оценок частной производной функции ошибки по весу для каждого настраиваемого веса в сети.
4.	Постановка эксперимента
В результате выполнения данной работы была написана библиотека классов, содержащая параллельную реализацию многослойного персептрона и параллельную реализацию алгоритма обучения iRprop.
Было произведено тестирование библиотеки. Для этого была взята большая нейронная сеть с 200 входами, 100 нейронами в скрытом слое, 1 нейроном в выходном слое. Сеть представляла собой многослойный персептрон, в котором каждый нейрон последующего слоя был связан со всеми нейронами предыдущего слоя. Для сравнения быстродействия использовалась библиотека FANN [1]. Для компиляции параллельной и последовательной (FANN) реализаций использовался компилятор Microsoft C++ Compiler 10.
Веса нейронной сети инициализировались каждый раз одними и теми же значениями, одинаковыми для FANN сети и для описываемой реализации. Далее на каждой тестовой машине проводились 100 эпох обучения нейронной сети и измерялось среднее время для 10 попыток обучения. Это позволило сразу задействовать алгоритмы прямого распространения сигнала в нейронной сети и алгоритм iRprop, сравнивать разные реализации алго-
ритмов в одинаковых условиях и увеличить точность оценок за счет повторения экспериментов.
Были проведены тесты параллельной реализации с различным количеством вычислительных потоков. На каждой системе были проведены тесты с использованием одного вычислительного потока (то же самое, что использовать последовательные вычисления), двух, и т.д. до n, где n - максимальное количество параллельных вычислительных потоков в системе. Например, для процессора Intel Core i7 920 с 4 физическими ядрами, каждое из которых содержит два логических, этот показатель будет равен 2^4 = 8. Была вычислена оценка эффективности параллельных вычислений. Эффективность распараллеливания показывает, какой процент времени вычислительные потоки тратят на эффективную работу, на вычисления. Значение 60% означает, что вычислительные потоки 60% времени выполняют полезную работу и 40% времени простаивают или тратят на синхронизацию. Эффективность вычислялась по формуле
5= Гпос • 100%,	(1)
n•^пар
где Tпос - время, затраченное на последовательное вычисление; Tпар - время, затраченное на параллельное вычисление; n - количество вычислительных потоков.
5. Результаты эксперимента
Результаты измерения времени обучения многослойного персептрона для описываемой реализации и FANN приведены в табл. 1.
Таблица 1
Результаты измерения времени, затрачиваемого различными реализациями алгоритма
N п/п	Процессор	Дата начала выпуска	Время FANN, с	Описываемая реализация последовательно, время, с	Описываемая реализация параллельно, время, с	Эффективность рас-параллели-вания, %
1	Pentium 4 HT @3.0	01.02.2004	24,26	13,07	11,35	57,6
2	Pentium D 805 @2.66	01.03.2006	24,42	13,17	7,52	87,5
3	Core 2 Duo E6400 @2.14	27.07.2006	11,82	6,28	3,58	87,8
4	Xeon E5345 (x2) @2.33	01.10.2006	11,85	6,50	1,89	81,4
5	Core 2 Quad Q6600 @2.4	07.01.2007	12,74	6,34	1,57	100,8
6	Core 2 Duo E7200 @2.53	20.04.2008	10,14	5,33	3,06	87,1
7	Core 2 Duo E8400 @3.0	20.01.2008	8,58	4,46	2,48	90,1
8	Core 2 Quad Q8300 @2.53	30.11.2008	10,16	5,34	1,59	84,1
9	Core i7 920 (w/o HT) @2.66	01.11.2008	9,16	4,78	1,31	90,9
10	Core i7 920 (HT) @2.66	01.11.2008	9,16	4,77	1,06	56,3
11	Core i7 860 @2.8	01.09.2009	8,75	4,56	1,12	51,0
12	Core i5 750 @2.66	08.09.2009	10,59	4,80	1,31	93,6
В колонке «Процессор» приведено наименование процессоров Intel и тактовая частота в гигагерцах, на которой работал процессор во время тестирования. Тактовая частота следует после символа «@».
В табл. 1 видно, что в последовательном режиме описываемая реализация работает примерно в 2 раза быстрее, чем реализация FANN. Достигается это за счет использования SSE инструкций процессора. Эти инструкции позволяют выполнять 4 одинаковых операции за одну инструкцию или за два такта процессора [5].
Для каждого процессора по формуле (1) была вычислена эффективность распараллеливания. В среднем эффективность распараллеливания составила около 90% при использовании нескольких физических ядер и 60% при использовании технологии Intel Hyper-Threading. Intel Hyper-Threading (HT) - технология, позволяющая организовать два вычислительных потока на одном процессорном ядре путем удвоения количества регистров и дублирования очереди команд. Эта технология позволяет оптимально загружать устройства процессора работой. В данном тестировании процессоры Pentium 4 HT, Core i7 920 и Core i7 860 используют HT. Стоит отметить, что для Core i7 920 приведены результаты
как с включенной HT (строка №10), так и без нее (строка №9). Эффективность распараллеливания без HT выше, чем с HT. Время вычислений с включенной HT меньше, чем без нее. HT позволяет получить более высокое быстродействие при том же самом количестве физических ядер, но снижает эффективность распараллеливания программ.
Эффективность распараллеливания могла быть и выше, если бы вычислительным потокам давались более крупные задания, что привело бы к сокращению накладных расходов на запуск и остановку потоков. Но в описываемой реализации этого намеренно не сделано. Кроме создания эффективной параллельной реализации, также стояла задача выявить как можно большее количество участков кода, способных выполняться параллельно с тем, чтобы потом можно было использовать эти наработки при переходе на другие стандарты параллельного программирования, такие как OpenCL.
Тестирование на процессоре Core 2 Quad Q6600 показало эффективность распараллеливания более 100%. Это можно объяснить только аномально низким быстродействием программы при последовательном режиме. Возможно, это было вызвано активностью фоновых программ или частыми промахами процессора в кэш память [5].
Также в табл. 1 приведены даты выпуска процессоров, что позволяет оценить скорости роста быстродействия последовательных и параллельных вычислений за 2004-2009 гг., применительно к задаче обучения искусственных нейронных сетей. На рис. 1 показана зависимость времени обучения нейронной сети от даты выпуска процессора для параллельных и последовательных вычислений.
♦ Параллельная программа, время ■ Последовательная программа, время
Рис. 1. Зависимость времени вычисления от даты выхода процессора
График построен с использованием логарифмической оси. Согласно закону Мура, быстродействие вычислительной техники растет экспоненциально, соответственно уменьшается время, необходимое для выполнения одной и той же вычислительной задачи. Тогда прирост производительности должен дать на графике с логарифмической шкалой прямую линию. По методу наименьших квадратов построим линии тренда для последовательных и параллельных вычислений. Из рис. 1 видно, что скорость параллельных вычислений со временем возрастает в 2 раза быстрее, чем скорость последовательных.
В табл. 2 приведена зависимость времени работы описываемого параллельного алгоритма от количества параллельных вычислительных потоков. Номера строк соответствуют номерам строк из табл. 1. Количество вычислительных потоков взято меньше или равным количеству параллельных потоков в системе. Поэтому для системы на Core 2 Duo -это только 2 потока, а для Core i7 - 8.
На рис. 2 показана зависимость времени обучения нейронной сети от количества вычислительных потоков.
Для процессоров, не использующих HT, график представляет собой гиперболу (с поправкой на эффективность распараллеливания, см. табл. 1).
Иначе дела обстоят с процессором Core i7 920. Для первых вычислительных потоков график представляет собой гиперболу, но затем уменьшение времени замедляется. Связано это с тем, что на 4 физических ядрах может параллельно выполняться только 4 потока, при увеличении количества потоков на одном ядре процессора начинает выполняться по 2 логических потока (благодаря HT). Производительность продолжает расти, но эффективность распараллеливания падает.
Таблица 2
Зависимость времени вычисления от количества параллельных вычислительных потоков
№ п/п	Зависимость времени обучения от кол-ва потоков
1	2	3	4	5	6	7	8
1	13,07	11,35
2	13,17	7,52
3	6,28	3,58
4	6,50	3,54	2,47	1,89	1,60	1,43	1,23	1,00
5	6,34	3,15	2,07	1,57
6	5,33	3,06
7	4,46	2,48
8	5,34	2,86	2,02	1,59
9	4,78	2,56	1,75	1,31
10	4,77	2,55	1,75	1,43	1,41	1,31	1,18	1,06
11	4,56	2,47	1,76	1,52	1,38	1,26	1,24	1,12
12	4,80	2,56	1,75	1,31
Количество параллельных потоков, шт.
Рис. 2. Зависимость времени обучения нейронной сети от количества параллельных потоков
Пара процессоров Xeon E5345 (2 процессора по 4 ядра) позволяет нам взглянуть на будущее параллельных настольных вычислительных систем.
Заключение
Разработана, создана и протестирована эффективная параллельная реализация многослойного персептрона и алгоритма обучения iRprop. Алгоритмы оформлены в виде библиотеки классов на C++, что обеспечивает высокое быстродействие и позволяет повторно использовать эти классы в приложениях.
В ходе проведенных экспериментов установлено, что использование параллельных вычислений позволяет получить прирост скорости вычисления от 60 до 600%, по сравнению с последовательными вычислениями.
Литература
1.	Сайт проекта Fast Artificial Neural Network Library (FANN) [Электронный ресурс]. - Режим доступа: http://leenissen.dk/fann/, свободный (дата обращения 21.04.2010).
2.	Igel С. Improving the Rprop Learning Algorithm / C. Igel, M. Husken // Proceedings of the Second International Symposium on Neural Computation. - 2000. - С. 115-121.
3.	Открытая спецификация OpenMP API для параллельного программирования [Электронный ресурс]. - Режим доступа: http://openmp.org/wp/, свободный (дата обращения 21.04.2010).
4.	Свободная Интернет энциклопедия «Википедия». Статья «SSE» [Электронный ресурс]. - Режим доступа: http://ru.wikipedia.org/wiki/SSE, свободный (дата обращения 21.04.2010).
5.	Intel® 64 and IA-32 Architectures Optimization Reference Manual November 2009 [Электронный ресурс]. - Режим доступа: http://www.intel.com/assets/pdf/manual/248966.pdf, свободный (дата обращения 21.04.2010).
6.	Открытый стандарт параллельного программирования для гетерогенных сред OpenCL [Электронный ресурс]. - Режим доступа: http://www.khronos.org/opencl/, свободный (дата обращения 21.04.2010).
Симонов Василий Владимирович
Аспирант каф. автоматизированных систем управления ТУСУРа
Тел.: +7-960-971-77-53
Эл. почта: simonov.vasiliy@gmail.com
Simonov V.V.
Efficiency estimation of parallel algorithms for multilayer perceptron modeling
There is a brief description for parallel algorithm for modeling of multilayer perceptron and iRprop learning algorithm, introduced in this article. The algorithms has been developed using parallel calculations with shared memory model and parallel instructions for CPU. The performance comparison for serial and parallel programs and the analysis of their dynamics over the past 6 years have been done. Keywords: multilayer perceptron, multilayer perceptron training, parallel calculations with shared memory, SIMD instructions.

=====



﻿УДК 004.4 233 Д.А. Эдель
Языковая модель исполнимых кодов
ПО аналогии с методами сравнения естественных языков строится языковая модель исполнимого кода на основе однородных Марковских цепей и приводятся результаты экспериментальных исследований предложенной модели. Ключевые слова: машинный код, Марковские цепи, классификация.
Введение. В настоящее время существует множество задач, при решении которых необходимо применять методы анализа и трансформации программ. Это задачи обеспечения безопасности программ, генерации и верификации исходных кодов, а также обратной инженерии. С целью решения таких задач используются дизассемблеры и декомпиляторы, при работе которых встает целый ряд подзадач, уже имеющих решения на текущий момент. Однако существуют и задачи, требующие более эффективных решений, чем существующие. Одна из таких задач - разделение неопределенных участков программ на код и данные.
В работе [1] описывается результативность существующих методов разделения таких участков, суть которых сводится к сигнатурному анализу, не способному полностью решать поставленную проблему. В данной статье проверяется гипотеза, что однородные Марковские модели первого порядка смогут эффективно моделировать исполнимый код для задачи разделения неопределенных участков программ на код и данные, и исследуется эффективность метода на практике.
Основной текст. Любую последовательность байт длины более 16, согласно спецификации Intel IA-32 [2], можно дизассемблировать как последовательность команд, причем единственным образом. Если дизассемблирование производить с разных позиций, то появится эффект наложения команд, детально описанный в статье [3], при котором один и тот же байт может входить в несколько исполнимых команд, как показано в табл. 1.
Таблица 1
Эффект наложения команд
Двоичное представление кода	14 53	Последовательность 1	Последовательность 2	Последовательность 3
add esp, 14
push ebx
83 ec 0c	sub esp, c	sub esp, c
or al, 8b
8b 5c 24 14	mov ebx, 14	mov ebx, 14
pop esp
and al, 14
8b 53 04	mov edx, 4	mov edx, 4	mov edx, 4
8b 0b	mov ecx, ebx	mov ecx, ebx	mov ecx, ebx
Дизассемблированные иструкции
Следовательно, одна и та же последовательность байт может формировать различные последовательности исполнимых команд в зависимости от позиции начала дизассемблиро-вания. Указанный факт является основной проблемой в задаче разделения неопределенных участков программ на код и данные, т.к. любой фрагмент данных можно интерпретировать как код, хотя он таковым не является, и при его исполнении на центральном процессоре произойдет ошибка выполнения.
Так как код программы представляет собой логически завершенную последовательность команд, реализующую конкретный алгоритм на языке высокого уровня, то порядок команд строго фиксирован в цепочке и логически упорядочен. Указанная семантическая особенность команд исполнимого кода является их специфическим отличием от команд, полученных при дизассемблировании случайного фрагмента данных. Аналогич-
но в естественных языках слова в предложениях, как правило, имеют упорядоченность на основе семантики и синтаксиса языка. Некоторые комбинации слов и букв соответствуют различным языкам.
Пример корректной исполнимой последовательности команд языка Ассемблер представлен в табл. 2.
Таблица 2
Пример корректной исполнимой последовательности команд
Байт код команд	Команда	Значение
55 8B EC 83 EC 18	PUSH EBP MOV EBP,ESP SUB ESP,18	Стандартный код начала функции
6A 00 6A 00 6A 00 E8 23 24 FE FF	PUSH 0 PUSH 0 PUSH 0 CALL 00445606	Передача параметров Вызов функции
85 C0 0F 84 F0 9D FD FF	TEST EAX,EAX JE SHORT 0043CFDB	Проверка условия Условный переход
В приведенной таблице показано, что первые три команды, как правило, представляют начало функции, три «push» и «call» представляют собой вызов функции с передачей ей параметров, а «test» и «je» представляют собой проверку условия и условный переход. Жирным выделены значения в байтовой последовательности, отвечающие за сами команды, оставшиеся байты - параметры команд.
В лингвистике одним из наиболее успешных методов определения языка по тексту (из конечного числа языков) являются Марковские модели [4]. В данной работе на основе аналогии с методами сравнения естественных языков проверяется гипотеза, что однородные Марковские модели первого порядка смогут эффективно моделировать исполнимый код в задаче разделения неопределенных участков программ на код и данные.
За последовательность дискретных случайных величин {Xn}, n > 0 примем последовательность команд (без параметров), в которой
P(Xn+1 = in+1 \ Xn = in, Xn-1 = in-1, ••, X0 = i0) = P(Xn+1 = in+1 \ Xn = in),	(1)
т.е. на вероятность появления следующей команды в цепочке влияет только текущая команда. Тогда {Xn} образует однородную Марковскую цепь первого порядка, в которой n -номер команды в последовательности. На начальном этапе проверки гипотезы матрицу переходных вероятностей Pj(n) = P(Xn+i = j \ Xn = i) построим на основе серии экспериментов. Тогда, приняв за {Oj}, j = 0...L - тестируемую последовательность команд, которую необходимо классифицировать, вероятность принадлежности ее определенной модели M будет выражаться по формуле
Pm(O) = Pm(Oi)x PM(02\0I) х PM(03^) X ... x PmOOl-I)-	(2)
Отметим, что если {Oj} представляет собой корректную исполнимую последовательность команд длиной L, то существует только одна последовательность байт {Bj}, представляющая эту последовательность.
Основываясь на том факте, что в теле программы код функции может начинаться в любой позиции файла, можно получить несколько его интерпретаций в виде последовательностей команд. Различие в интерпретации будет определяться позицией дизассембли-рования первой команды последовательности. В работе [3] изучен и доказан тот факт, что дизассемблированные последовательности команд, начатые с разных позиций файла (как показано в табл. 1), сойдутся с большой вероятностью менее чем через 32 байта в одну последовательность. Следовательно, для любого фрагмента программы более 64 байт можно получить последовательность команд {Oj} длиной L, из которых первые K (< 32 < L) будут командами «схождения» (различными командами на одинаковых позициях последовательностей), а оставшиеся L — K команд будут истинными командами последовательности при дизассемблировании. Следовательно, при полном дизассемблировании фрагмента длиной более 64 байт можно с большой вероятностью получить истинную последовательность команд, которую она представляет, либо построить ложную последовательность, не характерную для исполнимых файлов.
Экспериментальные исследования. Построим модели исполнимых и неисполнимых последовательностей команд. Матрицы переходных вероятностей моделей изначально предлагается строить обучением на основе выборок файлов. Команды обоих видов моде-
лей на первом шаге примем равновероятными. Обучаемую выборку файлов (для построения матриц переходных вероятностей) будут представлять набор из исполнимых файлов формата Windows PE и различные файлы неисполнимых форматов. Согласно проводимому в работе сравнению естественных языков и машинного, по аналогии с разбиением текстов естественных языков на корпуса [4], разделим исполнимые и неисполнимые файлы обучаемой выборки на классы и для каждого класса на основе описанного ниже алгоритма построим языковую модель, представляющую данный класс.
Для построения матрицы переходных вероятностей модели исполнимых файлов необходимо получить последовательности команд исполнимых файлов. Для этого необходимо построить граф потока управления и команд, начиная с точки входа в программу, и выделить все пути как корректные последовательности команд для обучения модели исполнимых файлов.
Для проверки, какой модели соответствует тестируемый файл (участок программы), предлагается следующий алгоритм:
1.	Для каждой позиции файла строится дизассемблированная команда, начатая в этой позиции (на основе спецификации Intel IA-32 [2]).
2.	Для каждой позиции файла строится последовательность команд, которая обрывается на позиции, с которой невозможно получить корректную команду.
3.	На основе последовательностей, найденных в п. 2, формируются все возможные их подпоследовательности команд Sj длины T.
4.	Для каждой подпоследовательности команд Sj по формуле (2) вычисляются вероятности соответствия исполнимым классам моделей. Среди всех подпоследовательностей выбирается одна S', с самой большой вероятностью для любой модели исполнимого класса.
5.	Найденная подпоследовательность S', имеющая максимальную вероятность среди исполнимых моделей на файл (наилучший кандидат на исполнимую последовательность команд), аналогично п. 4 проверяется на соответствие оставшимся моделям неисполнимых классов.
6.	Подпоследовательность команд S' будем считать исполнимой, если она наиболее вероятна какому-нибудь классу исполнимой модели, иначе она считается неисполнимой.
7.	Тестируемый фрагмент файла, участок программы будем считать исполнимым, если S' была принята за исполнимую подпоследовательность, иначе - не исполнимым.
Описанный алгоритм позволяет классифицировать неопределенные участки программ на код и данные. Минимальная длина подпоследовательности команд, которая используется при классификации, определяется экспериментально.
Подготовка выборки файлов для обучения моделей. Для формирования моделей было отобрано 23126 исполнимых и 62883 неисполнимых файлов. С помощью средства PeID (сигнатурный детектор компиляторов и упаковщиков программ [5]) вся выборка исполнимых файлов была разделена на 13 классов. Неисполнимая выборка была разделена по формату файлов на 3 класса. Тестируемую выборку представлял набор из 30 файлов, не входящих в обучаемую: 15 исполнимых и 15 неисполнимых форматов. В моделях было 342 уникальные команды.
Условия эксперимента. Для проведения экспериментов использовался алгоритм, описанный выше, с тем изменением, что сначала длина T находилась экспериментально. Алгоритм прекращал работу, как только все файлы обучаемой выборки успешно классифицируются. Было установлено, что при T > 30 обучаемая выборка успешно классифицируется.
При построении матриц переходных вероятностей моделей на основе встречаемости команд в подпоследовательностях возможен случай, когда паросочетание команд встречается в одной модели и отсутствует в другой. Согласно свойствам матриц переходных ве-H
роятностей, ^ Pij (n) = 1,Vn eN для каждого j, где H - общее количество уникальных ко-
j=1
манд. После нахождения частот встречаемости паросочетаний команд, каждая модель дополняется нулями для соответствующих пар, далее матрица переходных вероятностей нормируется и приводится к стохастическому виду. При нормировании используется формула
Pij(n) = Pij(n) х K + 1,	(3)
где K = 2х(М - 1) - коэффициент нормирования; М - количество различных уникальных команд в цепочках.
В табл. 3 представлена нормированная и приведенная к стохастическому виду матрица переходных вероятностей Р^(п) для Марковской модели последовательности команд из табл. 2.
Таблица 3
Стохастическая матрица переходных вероятностей
call	je	mov	push	sub	test
call	0,063	0,063	0,063	0,063	0,063	0,063
je	0,167	0,167	0,167	0,167	0,167	0,167
mov	0,063	0,063	0,063	0,063	0,688	0,063
push	0,239	0,022	0,239	0,457	0,022	0,063
sub	0,063	0,063	0,063	0,688	0,063	0,063
test	0,063	0,688	0,063	0,063	0,063	0,063
Нормирование матриц является необходимым действием при построении моделей, иначе вероятность подпоследовательности, вычисляемая по формуле (2), станет равной 0 как только встретится одно из паросочетаний команд, отсутствующее в модели.
Наилучший результат соответствия модели последовательности команд дает та последовательность, на которой она строилась. Так, последовательность команд из табл. 2 имеет вероятность соответствия построенной модели, равную произведению соответствующих вероятностей для каждого паросочетания, вычисляемую по формуле
Р(О) = P(movpush)xP(sub\mov)xP(push\sub)xP(pushpush)xP(pushpush)xP(callpush)x хР^^саи)хР(]е^) = 0,239x0,688x0,688x0,457x0,457x0,239x0,688x0,688 = 0,003. (4) В табл. 4 приведены значения вероятностей соответствия построенной модели различным последовательностям команд.
Таблица 4
Вероятности соответствия различных последовательностей
Последовательности команд									P
Команды	je	je	push	mov	mov	call	je	sub	call	2E-08
Pi,(n)	0,167	0,167	0,239	0,063	0,063	0,063	0,167	0,063	-
Команды	je	push	je	mov	je	call	je	je	call	1E-08
Pjn)	0,167	0,022	0,167	0,063	0,167	0,063	0,167	0,167	-
На основе приведенного примера в табл. 2 можно сделать вывод о том, что модель, построенная по алгоритму, способна классифицировать неопределенные участки программ на код и данные. С целью проверки данного вывода и модели была проведена серия экспериментов.
Результаты. В табл. 5 представлен результат экспериментов.
Таблица 5
Результат экспериментов
Файл	Наилучшая модель	Вероятность	Значение Т(длина последовательности)	Последовательность команд
1.doc	DOCs_old	0,15455	30 (Ттах)	add - add - ... - add
2.doc	DOCs_old	0,00034	8	add - add - add - add -add - add - push - push
3.doc	DOCs_old	0,87917	3 (Тт1п)	add - add - add
15.doc	DOCs old	0,82434	4	add - add - add - add
1.exe	EXEs	0,99199	2 (Т тах)	leave - retn
2.exe	EXEs	0,99199	2 (Т т1п)	leave - retn
15.exe	UPX	0,94009	2	pusha - mov
В представленной таблице Тт1п - наименьшая длина подцепочки, при которой хотя бы один файл тестируемой выборки успешно классифицировался. Значение Ттах представляет собой минимальное Т, при котором все файлы тестируемой выборки успешно классифицировались. Таблица отражает тот факт, что у исполнимых файлов встречаются паросочетания команд, вероятность которых максимальна для исполнимых классов моделей и минимальна для неисполнимых. В то же время существуют и такие комбинации команд, при которых неисполнимый файл на длинных последовательностях классифицируется как исполнимый. В табл. 6 представлен ход работы алгоритма на файле «3.doc» из табл. 5.
Таблица 6
Результат работы алгоритма для файла F
Шаг	Детектированный вид модели	Вероятность	Модель	T, длина цепочки	Позиция в файле	Последовательность команд
1	EXE	0,002923977	EXEs	2	540	cwde - mov
2	EXE	0,151741296	Borland Delphi	2	540	cwde - mov
13	EXE	0,894492567	Macromedia Windows Flash	2	2	adc - mov
14	EXE	0,000175179	MEW	3	540	cwde - mov - add
15	EXE	0,004765652	Borland Delphi	3	540	cwde - mov - add
26	DOC	0,879173038	DOCs old	3	23	add - add - add
Результат	DOC	0,879173038	DOCs_old	3	23	add - add - add
В приведенной таблице показано, что согласно алгоритму поиска подпоследовательности команд с максимальной вероятностью находятся случайные команды в файле, исполнимое представление которых в виде команд дает большие значения на исполнимых моделях, что при очень больших размерах файла может давать неверные результаты.
Выводы. Алгоритм классифицирования неопределенных участков программ, основанный на основе однородных Марковских цепей и построенный как языковая модель исполнимого кода, успешно работает в решении задачи гарантированного выделения только исполнимых команд из общей выборки. Но в общем случае при решении задачи разделения неопределенных участков программ его необходимо усилить более качественной исходной выборкой данных, а также выделить из всего набора исполнимых команд наиболее значимые для построения модели каждого класса.
Литература
1.	Linn C. Obfuscation of Executable Code to Improve Resistance to Static Disassembly / C. Linn, S. Debray // ACM Portal - The Guide to computing literature [Электронный ресурс]. - Режим доступа http://portal.acm.org/ citation.cfm?id=948149, платный (дата обращения: 29.04.2010).
2.	IA-32 Assembly Language Reference Manual [Электронный ресурс]. - Режим доступа http://docs.sun.com/app/docs/doc/806-3773, свободный (дата обращения: 29.04.2010).
3.	Rosenblum N. Machine Learning-Assisted Binary Code Analysis / N. Rosenblum, X. Zhu, B. Miller, K. Hunt // NIPS 2007 Workshop on Machine Learning in Adversarial Environments for Computer Security [Электронный ресурс]. - Режим доступа http://mls-nips07.first.fraunhofer.de/abstracts/16-Rosenblum.pdf, свободный (дата обращения: 29.04.2010).
4.	Silic A. N-grams and Morphological Normalization in Text Classification: a Comparison on a Croatian-English Parallel Corpus. / A. Silic, J. Chauchat, B.D. Ba^ic, A. Morin // SpringerLink [Электронный ресурс]. - Режим доступа http://www.springerlink.com/content /t45u6740713896x5/, платный (дата обращения: 29.04.2010).
5.	PeID [Электронный ресурс]. - Режим доступа http://www.peid.info/, свободный (дата обращения: 29.04.2010).
Эдель Дмитрий Александрович
Научный сотрудник ФГНУ НИИ «Спецвузавтоматика», г. Ростов-на-Дону. Тел.: 8 (863) 201-28-22 Эл. адрес: sva@rsu.ru
D.A. Edel
Language model of binary codes
Current paper proposes comparison of the words of natural and machine languages based on the language model of executable code. This language model is constructed on basis of homogenous Markov chains. The results of experimental studies of proposed model are also provided. Keywords: Machine code, Markov chain, gap completion.

=====



﻿УДК: 004.652 А.В. Маликов
Ориентированные графы в реляционных базах данных
Рассматриваются и исследуются методы управления данными, представленными в виде орграфов. Исследуются вопросы эффективного моделирования орграфов в реляционных базах данных по критериям компактности хранения и высокой производительности манипулирования данными. Приводятся примеры запросов манипулирования данными орграфов.
Ключевые слова: реляционные базы данных, иерархические структуры, ориентированные графы, модификация иерархических данных, запросы манипулирования данными.
Моделирование ориентированных графов в реляционных базах данных
Очень часто возникает необходимость в обработке больших массивов данных, представленных в виде иерархии. Если в качестве структурной абстракции при моделировании данных используется реляционная модель данных, то для моделирования иерархических структур должны использоваться специальные методы и подходы. В настоящее время не существует единого подхода к управлению иерархическими структурами данных. Наиболее исследованными, обладающими высокой эффективностью хранения и обработки данных в реляционных системах, являются методы управления деревьями. Основные направления в области моделирования деревьев в реляционных базах данных [1, 2]:
1.	Использование отношения типа «родитель-потомок».
2.	Использование типа данных XML.
3.	Использование концепции «материализованного пути» (Materialized Path).
Последнее направление является самым молодым и предполагает использование специального ключа, сопоставляемого каждой вершине дерева и содержащего в себе информацию обо всех вершинах по пути из корня дерева в саму вершину. Существует несколько подходов к вычислению материализованного пути. Множественная модель дерева [3] предполагает сопоставление каждой вершине дерева v е V, где V — множество вершин дерева, пары целочисленных значений (lef tv ,righ tv) , такой что, если u е V , u ^ v , то lef tv < lef tu , righ tu < righ tv . В [4] для реализации идеи материализованного пути каждой
вершине дерева ставится в соответствие матрица размера 2x2, содержащая целочисленные значения. Операциям модификации дерева ставятся в соответствие операции на матрицах. В [5] вводится новый тип данных на основе строкового типа данных для хранения значений материализованного пути как конкатенации символьных строк идентификаторов вершин на всех уровнях по пути из корня дерева в искомую вершину и расширяется набор функций для выполнения основных операций модификации дерева и извлечения данных. Похожий подход использован корпорацией Microsoft при создании в версии СУБД SQL Server 2008 нового типа данных Hierarchyld [1, 2], являющегося расширением двоичных данных переменной длины.
Очень часто в реляционных системах возникает необходимость в моделировании иерархий данных, описываемых в виде ориентированных графов. Возможны две модификации описанных ранее методов. Так как в общем случае число вершин и дуг орграфа различно, то, в отличие от деревьев, необходимо использовать не одно реляционное отношение, а два — отдельно для хранения данных о вершинах и о характере связей между вершинами. Пусть мощность множества вершин орграфа равна n, а множества дуг — m, тогда использование концепции типа «родитель — потомок» предполагает создание реляционного отношения с вершинами мощностью n и отношения с дугами мощностью m, содержащего пару атрибутов JlDparent, IDchildJ, являющихся внешними ключами к первичному ключу отношения с вершинами орграфа. По всей видимости, данный подход предполагает наиболее компактное хранение данных об орграфе и обладает низкими вычислительными затратами на операции модификации орграфа. Проблема такого подхода заключается в крайне низкой эффективности запросов выборки данных и, соответственно, низкой производительности решения вычислительных задач на графах.
Доклады ТУСУРа, № 2 (18), часть 2, декабрь 2008
Непосредственное использование концепции материализованного пути невозможно. Для этого необходимо без потери информации заменить орграф деревом. Возможны реализации нескольких алгоритмов такой замены, например алгоритм обхода ориентированной сети [6]. Реализация такого подхода возможна только для небольших орграфов, в противном случае это может привести к значительному росту мощности отношения с данными о дугах дерева замены, а длина ключа материализованного пути может превысить ограничения СУБД для индексных структур. Действительно, если в ключе материализованного пути зашифрована информация обо всех предках вершины, включая саму вершину, то длина ключа L некоторой вершины на уровне l ориентированной сети равна
L = ——1 • ceil (log2 b) ,
а -1
где а > 1 — среднее число родителей вершин орграфа; b е (1,») — среднее число детей вершин орграфа; ceil() — функция, возвращающая минимальное целочисленное значение, большее аргумента; ceil (log2 b) — длина фрагмента ключа для кодирования одной вершины на пути из корня дерева. Вообще значение длины фрагмента ключа кодирования определяется способом формирования ключа материализованного пути. Здесь использован самый оптимистичный способ кодирования, при котором для всякого родителя порядковый номер вершины-потомка кодируется битовой строкой переменной длины.
Приблизительная оценка длины ключа может быть вычислена по формуле
L < lal-1 • ceil (log2 b) .
Методы повышения эффективности моделирования ориентированных графов в реляционных базах данных
Обе описанные концепции можно обобщить, что позволит использовать достоинства каждой из них. Концепция типа «родитель — потомок» моделирует в реляционных таблицах бинарное отношение непосредственной достижимости на множестве вершин орграфа. Рефлексивно-транзитивным замыканием отношения непосредственной достижимости является отношение достижимости на орграфе. Данное отношение рефлексивно, транзитив-но, антисимметрично и может быть представлено квадратной матрицей достижимости. Для реализации матрицы достижимости в реляционной системе создается две таблицы: в первой хранятся данные о вершинах, во второй — данные о достижимости между вершинами в виде пар {предок, потомок}. Назовем данную концепцию типа «предки — потомки».
Таблица с данными о вершинах:
CREATE TABLE HierarchyObject
(ID int NOT NULL primary key, — идентификатор вершины,
name varchar(50),	— наименование вершины,
level int)	— уровень вершины в ориентированной сети.
Таблица с данными о достижимости между вершинами:
CREATE TABLE HierarchyLink
(IDancestor int NOT NULL,	— идентификатор вершины предка,
IDdescendant int NOT NULL)	— идентификатор вершины потомка.
Атрибуты HierarchyLink.IDancestor и HierarchyLink.IDdescendant являются внешними ключами по отношению к атрибуту HierarchyObject.ID. В большинстве запросов к таблице HierarchyLink будет накладываться фильтр по атрибуту IDancestor и/или ID-descendant, поэтому для повышения производительности таких запросов по каждому из атрибутов строится отдельный некластерный индекс типа B-дерево, в котором листовые узлы будут ссылаться на конкретные значения данных. По атрибуту с более низкой селективностью рекомендуется построить кластерный индекс, что позволит в запросах на выборку данных считывать меньшее число страниц памяти, вследствие упорядочивания записей таблицы на диске.
Предложенный подход позволяет моделировать материализованный путь в более привычном для реляционных систем виде: в виде конечного множества кортежей. На рис. 1 показано сравнение методов кодирования и хранения дерева с использованием концепции типа «предки — потомки» и материализованного пути.
Таблица HierarchyLink построена на основе матрицы достижимости вершин дерева.
Доклады ТУСУРа, № 2 (18), часть 2,декабрь 2008
Оценим мощности отношений Шегаг^уО^ееЪ и HierarchyLink. Мощность Шегаг-^уО^ееЪ равна числу вершин орграфа п . Мощность Н отношения HierarchyLink сопос-
б - с использованием концепции типа «предки - потомки»; с - с использованием концепции материализованного пути
Матрица достижимости вершин дерева
вершины	1	2	3	4	5	6
1	1
2	1	1
3	1		1
4	1	1		1
5	1	1			1
6	1		1			1
Матрица достижимости антисимметрична, следовательно, мощность отношения HierarchyLink может быть оценена как площадь прямоугольного треугольника с ячейка-
2
,, n + n „
ми под главной диагональю матрицы достижимости: H <-. Полученная оценка дос-
2
таточно грубая, так как заполненность описываемого треугольника признаками наличия пути между парами вершин может быть произвольной и зависит от характера связей между вершинами. Всякая вершина уровня l ориентированной сети имеет
A = (а0 + a1 + а2 +•.• + < + al-1j< lal-1 достижимых вершин. Если а = 1, то ориентированная
сеть является деревом и число достижимых вершин равно A = l. Если а е (1,»), то сумма
а1 -1
ряда равна A =-< n . Если ориентированная сеть состоит из l уровней, то мощность
а-1
отношения HierarchyLink можно оценить по формуле H <а—1 • n < lal-1n . Для дерева
а-1
справедливо а = 1, H < l • n .
Манипулирование данными ориентированных графов
Рассмотрим несколько примеров, демонстрирующих особенности формирования запросов к таблицам HierarchyObject и HierarchyLink.
Задача 1: найти общих предков вершин @ID1, @ID2, @ID3. Запрос на Transact SQL имеет вид:
SELECT hl3.*
FROM HierarchyLink hl1, HierarchyLink hl2, HierarchyLink hl3 WHERE hl1.IDdescendant=@ID1 and hl2.IDdescendant=@ID2 and
Доклады ТУСУРа, № 2 (18), часть 2, декабрь 2008
hl3.IDdescendant=@ID3 and
hl 1 .IDancestor=hl2.IDancestor and
hl2.IDancestor=hl3.IDancestor
Задача 2: найти общих потомков вершин @ID1, @ID2, не являющихся потомками вершины @ID3. SELECT hl3.*
FROM HierarchyLink hll, HierarchyLink hl2, HierarchyLink hl3
WHERE hl1.IDancestor=@ID1 and
hl2.IDancestor=@ID2 and
hl3.IDancestor=@ID3 and
hl 1 .IDdescendant=hl2.IDdescendant and
hl2.IDdescendant<>hl3.IDdescendant
Запросы на выборку данных из таблиц HierarchyObject и HierarchyLink обладают высокой производительностью, наглядностью и не предполагают изменения предикатов при изменении структуры орграфа.
Операции добавления, удаления и модификации дуг орграфа предполагают обработку подмножества записей таблицы HierarchyLink. Наиболее трудоемкой предполагается операция удаления дуги, при выполнении которой необходимо удалить записи о предках множества вершин-потомков. Если таблица HierarchyLink содержит только пару атрибутов {IDancestor, IDdescendant}, то на основе содержащихся в них данных невозможно гарантированно определить, какие записи подлежат удалению. Данное ограничение обусловлено возможностью существования в орграфе альтернативных путей между парами вершин. Существуют, как минимум, два способа решения данной проблемы. Во-первых, возможно дополнение таблицы HierarchyLink новыми атрибутами, отражающими характер связей между вершинами, например введение признака наличия дуги между вершинами. Тогда для выполнения операций удаления и модификации дуги необходимо выполнять рекурсивный поиск всех связанных вершин для определения их подмножества, которое будет удалено в запросе. Такой подход не может считаться удачным, так как снижает производительность запросов удаления, модификации дуг и значительно загружает аппаратные ресурсы сервера базы данных. Во-вторых, возможна модификация без потери информации исходного орграфа к орграфу, не содержащему альтернативных путей между парами вершин. Проведение такой модификации возможно с использованием специальных алгоритмов, реализованных в нормализованных на основе операций выборки и соединения базах данных [7]. Рассмотрим особенности запросов добавления, удаления и модификации дуг орграфа, в котором отсутствуют альтернативные пути между парами вершин. Исходной информацией для запросов являются значения двух переменных {@IDparent, @IDchild}, идентифицирующих конкретную дугу орграфа.
Задача 3: добавить в орграф дугу {@IDparent, @IDchild}. INSERT HierarchyLink SELECT b.IDancestor, a.IDdescendant FROM HierarchyLink a, HierarchyLink b
WHERE a.IDancestor=@IDchild and b.IDdescendant=@IDparent
Предложение SELECT формирует все возможные пары из потомков вершины @IDchild, включая ее саму, и предков вершины @IDparent, включая ее саму.
Задача 4: удалить из орграфа дугу {@IDparent, @IDchild}.
DELETE HierarchyLink
FROM HierarchyLink a, HierarchyLink b
WHERE a.IDancestor=@IDchild and b.IDdescendant=@IDparent and HierarchyLink .IDancestor=b.IDancestor and HierarchyLink.IDdescendant=a.IDdescendant
Задача 5: заменить в орграфе дугу {@IDparentOld, @IDchild} дугой {@IDparentNew, @IDchild}.
DELETE HierarchyLink
FROM HierarchyLink a, HierarchyLink b
WHERE a.IDancestor=@IDchild and b.IDdescendant=@IDparentOld and
HierarchyLink .IDancestor=b.IDancestor and
HierarchyLink.IDdescendant=a.IDdescendant
INSERT HierarchyLink
SELECT b.IDancestor, a.IDdescendant
Доклады ТУСУРа, № 2 (18), часть 2,декабрь 2008
FROM HierarchyLink a, HierarchyLink b
WHERE a.IDancestor=@IDchild and b.IDdescendant=@IDparentNew Выводы
Наиболее популярные методы моделирования деревьев в реляционных базах данных: отношение типа «родитель — потомок», тип данных XML, концепция материализованного пути. Обладая высокой эффективностью управления данными, представленными в виде деревьев, они не позволяют эффективно управлять данными, представленными в виде орграфов. Для моделирования орграфов в реляционных базах данных предложенные методы должны быть модифицированы. Перспективным направлением представляется отображение в реляционной системе матрицы достижимости, т.е. моделирование бинарного отношения достижимости между вершинами орграфа. Для управления множеством вершин создается отдельное реляционное отношение. Второе реляционное отношение используется для хранения отношения достижимости между парами вершин. Предложенный подход позволяет реализовать концепцию материализованного пути в более привычном для реляционных систем виде: как конечное множество кортежей реляционного отношения. По атрибутам последнего отношения строятся индексы типа сбалансированного дерева, что позволяет добиться высокой производительности запросов выборки данных. Мощности отношений оцениваются полиномиальными функциями от мощности множества вершин исходного орграфа. Представлены запросы поддержания орграфа в актуальном состоянии.
Литература
1.	SQL Server 2008 Books Online (May 2008), Using hierarchyid Data Types (Database Engine) [Электронный ресурс]. - Режим доступа:
http://technet.microsoft.com/enus/library / bb677173(SQL.100).aspx, свободный.
2.	SQL Server 2008 Books Online (May 2008), hierarchyid (Transact-SQL). [Электронный ресурс].
-	Режим доступа: http://technet.microsoft.com/en-us/library/bb677290(SQL.100).aspx, свободный.
3.	Celko J., Trees in SQL [Электронный ресурс]. - Режим доступа свободный. http://www.intelligententerprise.com/ 001020/celko.shtml
4.	Tropashko V. Nested Intervals Tree Encoding with Continued Fractions [Электронный ресурс].
-	Режим доступа: http://arxiv.org/abs/cs.DB/0402051, свободный.
5.	Roy J., Using the Node Type to Solve Problems with Hierarchies in DB2® Universal Database [Электронный ресурс]. - Режим доступа свободный.
http://www-106.ibm.com/developerworks/db2/library/techarticle/0302roy/0302roy.html
6.	Malikov A. Mathematical model for storing and effective processing of directed graphs in semistructured data management systems / A. Malikov, Y. Gulevskiy, D. Parkho-menko // ARTIFICIAL INTELLIGENCE, KNOWLEDGE INGINEERING and DATA BASES (AIKED '08) (UK, Cambridge, University of Cambridge). - 2008. - P. 541-548.
7.	Маликов А. Проектирование реляционных баз данных на основе операций выборки и соединения. Исследование их свойств. - Ставрополь: СевКавГТУ, 2002. - 245 с.
Маликов Андрей Валерьевич
Д-р техн. наук, доцент, проф. кафедры информационных систем и технологий Северо-Кавказского государственного технического университета Тел.: (8652) 56-39-10 Эл. почта: malikov@ncstu.ru
A.V. Malikov
Directed graphs in relational databases
Methods for managing data, which are represented as directed graphs, are considered and studied. Problems of compact storage and high data management performance of directed graphs in relational data bases are analyzed. Power evaluation of relations keeping directed graphs data is given. Examples of data management queries are shown.
Key words: relational databases, hierarchical structures, directed graphs, hierarchical data modification, database queries
Доклады ТУСУРа, № 2 (18), часть 2, декабрь 2008

=====



﻿Книга [2] целиком посвящена распознаванию фрактальных (пред фрактальных) графов, порожденных одной затравкой. Вопрос же о распознавании фрактальных (предфрактальных) графов, порожденных множеством затравок, оставался открытым до недавнего времени.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Емеличев В.А., Мельников О.И., Сарванов В.И., Тышкевич Р.И. Лекции по теории графов. - М.: Наука, 1990.
2.	КочкаровА.М. Распознавание фрактальных графов. Алгоритмический подход. — Нижний Архыз: РАН САО, 1998.
УДК 004.422
Ю.И. Рогозов РАЗРАБОТКА МЕТОДА ПОСТРОЕНИЯ ИНФОРМАЦИОННЫХ ФУНКЦИОНАЛЬНО-ОРИЕНТИРОВАННЫХ МОДЕЛЕЙ ПРЕДПРИЯТИЯ
Информационное обеспечение является базой, на которой строится вся управленческая деятельность. Информацию здесь следует рассматривать как некую совокупность различных сообщений, сведений, данных о соответствующих предметах, явлениях, процессах, отношениях и т.д. Эти сведения, будучи собранными, систематизированными и преобразованными в пригодную для использования форму играют в управлении исключительную роль. Необходимым условием для успешного функционирования любого промышленных предприятий является нормальная работа следующих процессов:
-	целенаправленный сбор, первичная обработка информации;
-	организация каналов доступа пользователей к собранной информации;
-	своевременное использование собранной информации для принятия решений.
Основная проблема сбора необходимой информации состоит в том, чтобы обеспечить:
-	полноту, адекватность, непротиворечивость и целостность информации;
-	минимизацию технологического запаздывания между моментом зарождения информации и тем моментом, когда к информации может начаться доступ.
Обеспечить это можно только современными автоматизированными методиками, базирующимися на основе информационных систем. Крайне важно, чтобы собранная информация была структурирована с учетом потребностей потенциальных пользователей и хранилась в форме, позволяющей использовать современные технологии доступа и обработки. Разработка информационных систем управления (ИСУ) является довольно сложным процессом, который требует значительного времени и ресурсов [1-4]. Современные крупные проекты ИСУ характеризуются, как правило, следующими особенностями:
-	сложность описания (достаточно большое количество функций, процессов, элементов данных и сложные взаимосвязи между ними), требующая тщательного моделирования и анализа данных и процессов;
-	наличие совокупности тесно взаимодействующих компонентов (подсистем), имеющих свои локальные задачи и цели функционирования (например, традиционных приложений, связанных с обработкой транзакций и решением регламентных задач, и приложений аналитической обработки (поддержки принятия решений), использующих нерегламентированные запросы к данным большого объема);
-	отсутствие прямых аналогов, ограничивающее возможность использования каких-либо типовых проектных решений и прикладных систем;
-	разобщенность и разнородность отдельных групп разработчиков по уровню квалификации и сложившимся традициям использования тех или иных инструментальных средств;
-	существенная временная протяженность проекта, обусловленная, с одной стороны, ограниченными возможностями коллектива разработчиков, и, с другой стороны, масштабами организации-заказчика и различной степенью готовности отдельных ее подразделений к внедрению ИСУ.
Для успешной реализации проекта объект проектирования (ИСУ) должен быть прежде всего адекватно описан, должны быть построены полные и функциональные непротиворечивые и информационные модели ИСУ. Кроме того, в процессе создания и функционирования ИСУ информационные потребности пользователей могут изменяться или уточняться, что усложняет разработку и сопровождение таких систем. В настоящее время один из наиболее сложных и важных этапов разработки ИСУ, этап построение информационной модели, остается во многом не формализованным. Начальные фазы проекта имеют решающее влияние на достигаемый результат, так как в них принимаются основные решения, определяющие качество информационной системы. Доля вклада в конечный результат концептуальной фазы [1] достигает 30%.
Построение информационных моделей требует использования известных и разработки новых методов формализации процесса предпроектного исследования. Процесс моделирования включает в себя четыре этапа: сбор данных об объекте управления - предпроектное обследование; построение графической модели бизнес процессов происходящих на предприятии; разработка формализованной модели бизнес процессов; исследование бизнес путем оптимизации формализованной модели. Из известных методов предпроектного обследования наиболее перспективным, с точки зрения его автоматизации, является метод предложенный в [14]. Метод включает в себя сбор и первичную обработку информации. В результате проведения первичной обработки получаем не массу несисте-матизиро ванной первичной информации, а информационную базу [10], содержащую данные о предприятии, пригодную для дальнейшего непосредственного автоматического анализа. Именно такое представление результатов обследования мы будем использовать в дальнейшей работе.
Поставим задачу построения информационной модели, которая позволяла бы отражать не только связи между структурными подразделениями предприятия и их вес, но и оценивать суть происходящих в организации процессов. В данном случае - какие операции (функции) над информацией (документами) выполняются внутри организации. В дальнейшем будем называть такую информационную модель функциональной ориентированной. Получение такой модели позволит ставить задачу оптимизации организационной структуры предприятия
по новым критериям, например, по загруженности отдельных функций, по равномерной загрузки и т.д.
Полученная функционально-ориентированная модель позволит реализовать методику построения организационной модели предприятия «снизу»: на первом этапе выявить весь перечень функций, которые должны быть реализованы на данном предприятии, для эффективного управления и достижения поставленной цели; определить внутренние и внешние связи между функциями; оценить количество информации проходящей по этим связям; провести реорганизацию отделов и служб путем перераспределения данных функций по признаку подобия функций. На этом этапе автоматически будет реализована связь между отделами
-	через связь между функциями вновь организованных отделов и служб. Возможно введение новых функций, документооборота и т.д.
Для формального описания и анализа графической модели бизнес процессов может использоваться достаточно широкий класс математических теорий (третий и четвертый этап), которые более подробно мы рассмотрим в данной работе.
Анализ существующих подходов к построению информационной модели предприятия
Автоматизация управления предприятием (организацией) в настоящее время все еще является весьма важной и актуальной проблемой [4, 16, 19, 23], так как интуиции и личного опыта руководителя часто уже не достаточно для принятия эффективных и своевременных управляющих решений. Поэтому современный подход к управлению предполагает не столько вложение больших средств на приобретение дорогостоящего оборудования, сколько создание и внедрение автоматизированных систем (АС) поддержки принятия управленческих решений. Создание АС всегда было и остается до сих пор сложным системным процессом, усугубленным следующими обстоятельствами:
-	современное предприятие - это достаточно сложная система взаимодействующих элементов (подразделений);
-	каждое предприятие уникально и типовые проектные решения требуют сложной адаптации;
-	уникальны и потоки (информационные и материальные), связывающие подсистемы предприятия, а также предприятие с окружающей средой. Вот почему при разработке АС требуется тщательное предварительное исследование информационных потоков. Для этого необходимо создать адекватную информационную модель предприятия [13]. Сам по себе этот процесс тоже не прост.
В настоящее время есть комплексы инструментальных средств, облегчающих процесс создания информационной модели, например, СЛ8Б-средства [9]. С их помощью можно существенно упростить процесс создания собственно модели. Однако предварительные этапы, связанные с описанием предметной области, остаются вне компетенции СЛ8Б-средств и выполняются неформально на вербальном уровне [13]. А между тем именно от качества их выполнения существенно зависит адекватность информационной модели. Подчеркиваем, что с точки зрения функционирования существенно важна именно информационная модель (ИМ), так как именно она определяет в значительной степени эффективность работы всей АС. Для самой же ИМ существенно важен только документооборот (движение или трафик документов) и только при тщательном изучении этого трафика возможно его оптимизировать, т.е. организовать его так, чтобы документы поступали вовремя и не образовывали очереди. Иначе говоря, на уровне всей АС обеспечивалась бы возможность своевременного принятия
управляющих решений. Конечно от технической реализации АС тоже многое зависит, но это только необходимое, но недостаточное условие эффективной работы АС.
Одной из разновидностей ИСУ являются так называемые корпоративные информационные системы (ИС) [20]. За последнее время в практике создания таких ИС достигнуты большие результаты [20]. Это стало возможным во многом благодаря тому, что вся информация, которой располагает корпорация, занесена в общую интегральную базу данных (ИБЗ) и к этой базе имеют в соответствии со своей компетентностью все подразделения корпорации. ИБЗ - это база данных многопланового применения. ИБЗ - важнейшая, но не единственная компонента ИС. Другой ее важной частью является сеть связи, включающая и обычные каналы телефонной, телеграфной и т.д. связи. То есть сеть связи постепенно преобразуется так называемую сеть интегрального обслуживания [14]. Информационная компонента, таким образом, присутствует в любой ИСУ, определяя ее как информационную подсистему и существенно влияя на структуру и эффективность ИСУ. Таким образом, имеет смысл изучать и оптимизировать ИС в отдельности. Сделать это можно, строя модели ИС. При этом всегда надо исходить из того, в какой предметной области и в какой мере адекватно собирается в ИС информация.
Итак, при изучении ИС следует исходить из того, что накапливаемая в ней информация представляет собой модель некоторой области реального мира. Основное требование к любой ИС - обеспечение адекватности этой модели.
Основными инструментами повышения эффективности работы сложных информационных систем являются: оперативный анализ ситуации, составление оперативно-календарного плана работы, моделирование процессов управления. Под моделированием понимается замещение одного объекта (оригинала) другим объектом, называемым моделью, и изучение свойств оригинала путем исследования свойств модели. Необходимость использования моделей возникает, когда получение решений на реальном объекте дорого, сложно или вообще невозможно. Модель упрощает, удешевляет и ускоряет процесс исследования оригинала.
Бизнес-процесс - совокупность нескольких связанных между собой процедур либо функций, которые совместно реализуют некую задачу в контексте организационной структуры, описывающей функциональные роли и отношения.
Используя процессный подход к управлению, выделяют и детально описывают существующие процессы и работы, определяя возможные сценарии их развития. При этом получают модель, в значительной степени соответствующую реальной системе. Исследование модели заключается в обосновании причинноследственных связей элементов данной структуры, обосновании улучшения ее параметров. Итогами моделирования процессов являются:
-	Оптимизация документооборота.
-	Ликвидация узких мест.
-	Устранение избыточных этапов.
-	Устранение дублирования.
-	Сокращение времени выполнения задач.
-	Определение мест и методов контроля процесса.
Модель называется абстрактной (концептуальной) либо материальной (физической) в зависимости от того какой системой она представлена, т.е. от выбора средств моделирования.
В дальнейшем под моделированием будем понимать описание потока работ (бизнес-процесса) в виде формальной модели, состоящей из взаимосвязанных операций. Моделирование системы процессов - абстрактное представление организации как системы взаимосвязанных и взаимодействующих процессов.
Рассмотрим существующие методы и подходы к процессу моделирования информационных систем.
В большинстве методов получения количественных решений лежит идея использования математических моделей оптимизации. Оптимальными называются наилучшие по определенному критерию из всех допустимых решений или альтернатив для достижения цели системы. Критерий оптимизации (критерий эффективности) представляет собой количественную оценку (меру) достижения цели системы. Для многих практических задач разработаны общие подходы и модели для получения количественных решений. Это стало возможным вследствие того, что по своей форме многие задачи тождественны, причем, задачи одного и того же класса возникают в самых различных отраслях. Помимо этого, каждый класс задач объединяет одинаковый вид математической модели для их описания. В настоящее время наибольшее распространение получили модели для следующих классов задач:
-	составление расписаний и календарное планирование;
-	массовое обслуживание;
-	распределение;
-	управление запасами;
-	износ и замена оборудования;
-	конфликтные ситуации.
В поддержку создания служб и систем управления потоками работ предлагаются методологии, стандарты и специализированное программное обеспечение, образующие в комплексе инструментальные средства разработчика.
Методология - это совокупность методов применяемых в жизненном цикле разработки процесса и объединенных одним общим подходом. В настоящее время получила распространение методология SADT. (Structured Analysis and Design Tecchnique) — методология структурного анализа и проектирования, которые дают ряд преимуществ в системах управления:
-	формализацию описания потоков работ;
-	переносимость: модели процессов, созданные в рамках одной системы, могут работать под управлением другой системы;
-	универсальность: применение единого механизма описания управления потоками работ в различных сферах деятельности.
На данный момент разработан ряд стандартов для описания реальных потоков работ, которые можно разбить на две категории:
-	Графовые модели отражающие древовидную структуру процесса.
-	Блочные модели, наиболее приближенные к блочной структуре языков программирования.
Итак, модели, указанные выше, в ряде случаев удобно использовать для эффективного описания окружения системы и ее функционирования. Между тем, по большому счету определяющей в любой системе является информация о потоках, обслуживающих систему. Поэтому имеет смысл исследовать не просто модель системы, а ее информационную модель (ИМ) детализированную до уровня функций и ее заполняемость информационными потоками, а не блоков системы. Такую модель можно называть функционально ориентированной ИМ
(ФИМ). Использование ФИМ важно и для построения модели функциональной структуры системы. Использование ФИМ позволяет ставить и решать новые задачи на уровне организационной и функциональной структуры, например, определять загрузку функций, перераспределять (оптимизировать) документооборот между отдельными функциями с целью обеспечения их полной загрузки и т.д.
Прежде, чем обсуждать эффективность ФИМ надо обратить внимание на то, что само исходное понятие информации оказывается до сих пор неоднозначно. В самом прагматическом аспекте - это набор документально оформленных сообщений, важных для системы. Информацию можно оценивать не только объемом, но и различными параметрами, среди которых важнейшими являются: своевременность, релевантность, ценность, старение, достоверность и т.д. Кроме того, информация может быть четкой, вероятностной и нечеткой. Способы ее восприятия и переработки в каждом случае разные.
Целью работы является разработка и исследование методов построения функционально ориентированные организационные структуры предприятий и ее оптимизация по заданным критериям.
Для достижения поставленной цели необходимо решить следующие задачи:
-	разработать методику формального построения функционально ориентированной модели организационной структуры предприятия, учитывающей документооборот;
-	выбор критериев оценки загруженности функциональных блоков подразделений;
-	разработка метода формального описания загруженности функциональных блоков подразделений (ФБП);
-	разработка методов оптимизации загруженности ФБП с учетом организации документооборота (интерфейса);
-	разработка методики по оптимальному распределению функций между структурными подразделениями предприятия;
-	разработка алгоритмов программ по автоматизации предложенных методик.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Информационные системы /Под ред. ПетровВ.Н. — СПб.: Питер, 2002. — 688 с.
2.	Смирнова Г.Н. и др. Проектирование экономических информационных систем: Учебник. — М.: Финансы и статистика, 2002.
3.	Экономическая информатика: Учебник для вузов /Под ред. Евдокимова. В.В. — СПб.: Питер, 1997. — 592 с.
4.	Миняев М.Ф. Информационные технологии управления: В 3-х книгах. Книга 2. Информационные ресурсы. — М.: Омега , 2003. — 432 с.
5.	Антипина Г.С., Гайфуллин Б.Н. Современные информационные технологии. Обучение и консалтинг. — М.: СИНТЕГ, Интерфейс-ПРЕСС, 2000. — 187 с.
6.	Алиев Т.М. и др. Автоматизация информационных процессов в интегрированных АСУ промышленными предприятиями. —М.: Энергоиздат, 1981.
7.	Марка Д.А., Мак Гоуэн К. Методология структурного анализа и проектирования. — М.: МетаТехнология, 1993.
8.	Вендров А.М. СЛББ-технологии. Современные методы и средства проектирования информационных систем. — М.: Финансы и статистика, 1998.
9.	Трофимов С.А. CASE-технологии: практическая работа в Rational Rose. — М.: Изд-во БИНОМ, 2001. - 272 с.
10.	Вендоров А.М. Проектирование программного обеспечения экономических информационных систем: Учебник. — М.: Финансы и статистика, 2002. — 325 с.
11.	Уокер Р. Управление проектами по созданию программного обеспечения. — М.: Лори, 2002. - 448 с.
12.	Основы построения АСУ /Под ред. Костюка И.В. — М.: Советское радио, 1977.
13.	Коберн А. Современные методы описания функциональных требований к системам. — М.: Лори, 2002. - 288 с.
14.	Свиридов А.С.. Методика проведения предпроектного обследования с целью проектирования информационной сети предприятия. — М.: Телекоммуникации, 2004. Вып. 4.
15.	ВасильевВ.И. Системы связи: Учебное пособие для вузов. — М.: Высшая школа, 1982.
16.	Данилевский Ю.Г. и др. Информационная технология в промышленности. — Л.: Ма-миностроение, 2002.
17.	Организованные структуры управления производства /Под редакцией Михьнера Б.З.
—	М.: Экономика, 1975.
18.	Рогозов Ю.И., Свиридов А.С. Концепция построения информационной модели предприятия. — М.: Техноцентр, 2004.
19.	МесаровичМ., ТакахараИ. Общая теория систем. —М.: Мир, 1978.
20.	Э.Д. Якубойтис. Локальные информационно-вычислительные сети. — Рига: Зинатне, 1985.
21.	УрсулА.Д. Природа информации. — М.: Наука, 1968.
22.	Хакен Г. Информация и самоорганизация. — М.: Мир, 1991.
23.	Волкова В.Н. и др. Теория систем и методы системного анализа в управлении и связи.
—	М.: Радио связь,1983.
УДК 519.7
Е.В. Заргарян КРИТЕРИИ НЕЧЕТКОГО БАЛАНСА ЭНЕРГЕТИЧЕСКИХ ПРЕДПРИЯТИЙ
Рассматриваются системы, состоящие из элементов производства энергоресурсов и потребителей видов энергоресурсов. Равновесными будут назваться такие системы, связанные с производством-потреблением, когда ни один из элементов производства или элементов потребления видов энергоресурсов не стремится к изменению состояния.
Каждый потребитель выбирает и приобретает для себя желаемый набор энергоресурсов, а каждый из элементов производства производит виды энергоресурсов, которые считает нужным. Регулятором в подобной системе служат цены на энергоресурсы, которые будут называться равновесными, если в системах «производство-потребление» установлено равенство между производимыми и потребляемыми энергоресурсами.
Равновесная система сбалансирована по материальным потокам, то есть суммарное производство энергоресурсов должно быть в точности равно потреб -ляемому количеству. Данное представление соответствует идеалу.
На практике всегда существуют ограничения и на производимые и на потребляемые энергоресурсы, поэтому в реальных системах существует «неравновесное равновесие» [1].

=====



﻿и	Ш -			Е
к		(Р> —^
1	V		г
К*
к*
и*
дш
*
I
Рис. 1. Общая схема формирования информационных потоков в процессе шифрования при переходе от действительного к виртуальному информационному пространству
Предложенная стратегия открывает новую область исследований, позволяющую реализовывать дополнительные потенциальные возможности уже известных методов и способов защиты информации, а также получать принципиально новые решения, обеспечивающие выполнение условий теоретической недешифруемости.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Галлагер Р. Теория информации и надёжная связь. - М.: Советское радио, 1974. —
720с.
2.	Величкин А.И. Передача аналоговых сообщений по цифровым каналам. - М.: Радио и связь, 1983. - 240 с.
3.	Котенко В.В., Румянцев К.Е., Поликарпов С.В.. Новый подход к оценке эффективности способов шифрования с позиций теории информации // Вопросы защиты информации. 2004. №1. - С.16 - 22.
О.О. Варламов
Россия, г. Москва,
Московская академия рынка труда и информационных технологий
ПОЛЬЗОВАТЕЛЬСКАЯ ТЕХНИЧЕСКАЯ КОМПЬЮТЕРНАЯ УГРОЗА И СПОСОБЫ ЗАЩИТЫ ОТ НЕЕ НА ОСНОВЕ ОБРАБОТКИ ИЗБЫТОЧНЫХ И ЗАКРЫТЫХ ЗАПРОСОВ К БАЗАМ ДАННЫХ
Как известно, для обеспечения технической защиты информации разработана Модель технических компьютерных угроз на основе выделения девяти типов: семантических, алгоритмических, вирусных, разграничительных, сетевых, потоковых, аппаратных, форматных и пользовательских технических компьютерных угроз. В данной работе исследована пользовательская техническая компьютерная
угроза и предложены способы защиты от нее на основе обработки избыточных и закрытых запросов к базам данных.
Объектами защиты от технических компьютерных угроз принято считать компьютерные системы (сети) и характеристики их пользователей и программноаппаратных средств. Девять типов компьютерных угроз необходимо учитывать в первую очередь при обеспечении безопасности информации в ключевых системах информационных инфраструктур - ОБИ КСИИ, являющихся по существу гетерогенными территориально распределенными компьютерными сетями, аналогичными Интернет. Хотя, не все компьютерные сети имеют физическое подключение к Интернету, но практически все они используют однотиповые технические решения. Ранее было доказано, что под компьютерной разведкой (КпР) не достаточно понимать только получение информации из баз данных ЭВМ, включенных в компьютерные сети, а также информации об особенностях их построения и функционирования [1]. В настоящее время КпР - это добывание информации из компьютерных систем и сетей, характеристик их программно-аппаратных средств и пользователей [2]. Существует три типа источников информации для КпР:
1)	данные, сведения и информация, обрабатываемые, в т.ч. передаваемые и хранимые, в компьютерных системах и сетях;
2)	характеристики программных, аппаратных и программно-аппаратных комплексов;
3)	характеристики пользователей компьютерных систем и сетей.
Различным видам КпР посвящено множество научно-исследовательских работ. Так как пользовательская КпР позволяет получать данные непосредственно о пользователях (людях и программах) компьютерных систем и сетей, то необходимо разработать методы защиты от нее. Напомним, что пользователями компьютерных сетей являются не только люди, но и отдельные программы или программно-аппаратные комплексы.
Пользовательская КпР - это добывание информации о пользователях, их деятельности и интересах на основе определения их сетевых адресов, местоположения, организационной принадлежности, анализа их сообщений и информационных ресурсов, а также путем обеспечения им доступа к информации, циркулирующей в специально созданной легендируемой (заманивающей) информационной инфраструктуре (приманка).
Появление и развитие пользовательской угрозы информационной безопасности обусловлено повсеместным использованием компьютерных сетей, когда некоторая информация, самого верхнего уровня, о непосредственных пользовате-лях-людях может добываться техническими средствами, что ранее было прерогативой исключительно "человеческих" агентурных методов. Например, путем системного анализа запросов человека в различные базы данных и к информационным ресурсам, участия его в телеконференциях, получения его адресно-именной информации и т.п. представляется возможным добывание информации о пользователях, их деятельности и интересах. Кроме того, путем обеспечения изучаемым пользователям доступа к информации, циркулирующей в специально созданной легендируемой (заманивающей) информационной инфраструктуре (приманка), также возможно добывание техническими средствами информации об интересах пользователей, их организационной принадлежности, функциональным обязанностям и других сведений (пороках, запросах, проблемах личного характера, психологического портрета и т.п.), которые могут использоваться для агентурных и других целей.
Итак, рассмотрим более подробно обращение пользователей к различным информационным ресурсам и базам данных, которые для краткости будем обозна-
чать - БД. Суть пользовательской КпР заключается в анализе интересов пользователей по их запросам к БД. Следовательно, для защиты от пользовательской КпР необходимо:
1)	либо замаскировать истинные потребности в ресурсах БД избыточными, ложными запросами,
2)	либо скрывать авторов запросов к БД,
3)либо	скрывать сами запросы.
Возможно, есть и другие типы способов, которые еще ждут своих первооткрывателей.
1.	Наиболее простым и широко распространенным способом является маскирование истинных запросов путем генерации избыточных запросов, который будем называть "способ избыточных запросов". Суть данного способа заключается в том, чтобы создавать большой поток самых разнообразных запросов, в котором сложно будет выявить небольшое количество истинных запросов. Образно говоря, надо создать "шум" и скрыть истинные "сигналы". На данном этапе необходимо переходить к количественным оценкам создания подобного шумового фона, разработать методики определения типового разнообразия избыточных запросов.
Способ "избыточных запросов" в настоящее время активно применяется. Например, если какой-либо фармацевтической компании нужно получить у сторонних организаций опытные данные по некоторому конкретному "препарату", то осуществляется закупка всей базы данных для маскирования истинного узкого направления исследований фармацевтической компании. Это аналогично походу в книжный магазин и закупке там, вместо нескольких нужных книг, полного ассортимента имеющихся книг. Конечно же, это огромные затраты, но в некоторых случаях они себя оправдывают: ведь никто не узнает, какие именно книги вам были нужны, а, следовательно, не узнают и чем вы занимаетесь.
На практике хорошо зарекомендовал себя способ создания разнообразного трафика путем выделения многим сотрудникам одного "пользовательского имени", когда внешним наблюдателям неизвестно кто и какую информацию запрашивает внутри организации. В качестве аналога, возможно, следует использовать методы защиты акустических сигналов. Это пока лишь направление для серьезной математической работы и обоснования методик защиты. Многие организации пытаются бороться с "лишним" трафиком, запрещают сотрудникам использование сети в личных и неслужебных целях, однако, с точки зрения защиты от пользовательской КпР - это именно один наиболее доступных способов защиты от нее. Ведь понятно, что когда истинный трафик составляет 5-10 % от общего трафика, то внешним наблюдателям, в том числе и злоумышленникам, будет достаточно сложно получить информацию путем пользовательской КпР.
2.	Вторым способом является скрытие авторства информационных запросов к БД. Это можно осуществить, например, подобно тому, как в библиотеке можно либо просить разных людей взять необходимые вам материалы, либо самому записаться в различные библиотеки и в каждой брать малую долю необходимых материалов, либо записаться в библиотеку под разными фамилиями (реальность этого -отдельный разговор) и опять же под каждой фамилией брать малую долю необходимых материалов. Получаем следующие варианты защиты: получать требуемые материалы через различных пользователей малыми долями; обращаться к различным источникам информации за малыми долями; зарегистрироваться разными пользователями - "масками" и получать те же самые малые доли требуемой информации. При этом, важно обеспечить маскирование и избыточные для вас запросы и от истинных пользователей, и от ваших "масок". Методика регистрации разных "масок" требует, возможно, "входа в сеть" действительно с физически раз-
личных мест подключения к сети. Впрочем, при достаточных усилиях, все эти методы могут быть реализованы уже в настоящее время. Побочным эффектом первого и второго направления является избыточный трафик, подобный "спаму", но это еще необходимо исследовать.
3.	Скрытие самих запросов. В этом направлении защиты возможны два основных варианта: 1) скрытие самого факта запроса и 2) при известном "легальном" запросе скрытие содержания запроса. Для скрытия самого запроса необходимо использовать "вирусоподобные" и/или "разграничительные" (несанкционированный доступ - НСД) методики, которые в данной работе не рассматриваются.
Наибольший интерес в определенных "легальных" применениях представляет проблема при известном запросе скрытия именно и только содержания запроса. В данном направлении выделим, прежде всего, такую область, которую принято называть: обработка закрытых запросов (ОЗЗ). В работах Дмитрия Валерьевича Асонова [3-9] предложен оригинальный подход к решению проблемы "обработки закрытых запросов". Кратко опишем предлагаемые решения, а желающим более подробно разобраться в данном методе рекомендуем обратиться к указанной выше литературе. Итак, в докладе Асонова Д.В. [3] рассматриваются две нестандартные проблемы обработки запросов к базам данных (БД).
Первая проблема ОЗЗ заключается в обработке запроса к БД так, что:
-	сервер (и владелец) базы данных не может получить никакой информации о содержании и результате запроса пользователя и
-	пользователь не получает никакой информации о БД, за исключением ответа на свой запрос.
Подчеркнем, что доступ к БД нам разрешен, но никто, кроме нас, не должен в принципе знать ни о нашем вопросе, ни о полученном ответе. Администратор БД видит только факт самого запроса и размер полученных по этому запросу данных. Это позволяет владельцу БД выставить соответствующий счет на оплату услуг.
Известны три категории решения данной проблемы:	1) теоретические,
2)	криптографические и 3) ОЗЗ на защищенном вычислительном устройстве (ЗВУ). Теоретические методы в разных вариациях рассматривают копирование всей БД. Криптографические решения существуют на основе доработок нестандартными методами, но для них обязателен доступ в реальном времени и перебор всей базы данных. Например, владелец БД пересылает заказчику всю БД в зашифрованном виде, что исключает возможность воровства информации. Заказчик через каталог или аннотации выбирает из БД требуемую ему одну запись и также шифрует ее "поверх" шифра владельца. Используемые шифры должны быть гомоморфными (или коммуникативными), что позволяет осуществлять замену шифров. Заказчик не может прочесть запись, так как она зашифрована владельцем. Заказчик отправляет зашифрованную запись владельцу БД, который также не может прочесть эту запись, ведь ему не известен шифр заказчика. Далее, владелец "снимает" свой шифр, выставляет счет на оплату и после получения денег пересылает запись заказчику. Заказчик после оплаты и получения записи расшифровывает ее и использует для своих целей. Получаем, что заказчик получает только одну запись, но ее содержание не известно никому, ведь она зашифрована самим заказчиком. Владелец БД отдает заказчику только одну запись, ведь все остальные записи зашифрованы именно владельцем. По каналам связи передается только зашифрованная информация, что исключает доступ к ней посторонних лиц. У этого класса криптографических решений существует огромный недостаток, обусловленный необходимостью перебора всей БД, что значительно увеличивает время между заказом и получением требуемой записи. Учитывая огромные размеры современных БД, этот недостаток делает невозможным реальное использование криптогра-
фических методов для решения проблемы обработки закрытых запросов к большим и/или часто обновляемым БД.
Обработка закрытых запросов на защищенном вычислительном устройстве. Защищенные вычислительные устройства - ЗВУ, представляют собой специальный класс устройств для хранения защищенных данных и исключения доступа к ним людей, даже системных администраторов и владельцев. При попытке проникновения в ЗВУ все данные на нем немедленно физически уничтожаются и проводится оповещение соответствующих служб. Это устройство выполняет функции "третьего доверенного лица", которому доверяют и владелец, и заказчик. Если любого человека хотя бы теоретически можно подкупить, то ЗВУ подкупить невозможно. Отметим, что ЗВУ используются для решения различных задач и достаточно большим количеством способов. В данной работе целесообразно для примера проанализировать только несколько способов. В целом ЗВУ представляют собой "черный ящик", который встраивается в оборудование владельца информационного ресурса. Возможно, что такое "встраивание" является рискованным и психологически сложным для владельца.
Рассмотрим запрос заказчика на получение конкретной записи от владельца БД. Заказчик посылает свой зашифрованный запрос к ЗВУ, которое его расшифровывает. Далее ЗВУ получает поочередно все записи из БД, но "откладывает", запоминает у себя внутри только одну - нужную заказчику. После выполнения финансовых действий, владелец разрешает ЗВУ отослать зашифрованную этим ЗВУ запись заказчику. Этот шифр знают только ЗВУ и заказчик, который после получения самостоятельно расшифровывает требуемую ему запись и использует ее. Таким образом, никто, кроме ЗВУ, не знает, какую запись получил заказчик, а заказчик не видит остальных записей БД владельца.
Разработаны различные модификации применения ЗВУ для сокращения времени обработки запросов и обеспечения их защищенности. Применяют различные виды препроцессинга и другие виды обработки БД. Например, можно хранить в ЗВУ специальным образом "перемешанный" каталог реальной БД, на основе которого значительно ускоряется время обработки запросов заказчика, ведь уже нет необходимости при каждом запросе перебирать всю БД, а заказчик заказывает и получает требуемую запись по преобразованному в ЗВУ номеру. Для повышения защищенности такой каталог в ЗВУ регулярно обновляют и осуществляют "пер-мутацию", т.е. случайное перемешивание.
Вторая проблема ОЗЗ заключается в обработке запроса на пересечение двух баз данных таким образом, что:
-	владельцы баз данных не могут получить никакой информации о БД партнера, а также о результате запроса на пересечение;
-	пользователь не может получить никакой информации из баз данных, за исключением результата запроса на пересечение.
В этом случае заказчик не узнает ничего лишнего о БД, кроме прямого ответа на свой запрос. ОЗЗ позволяет получать заказчикам такие ответы и не показывает никому содержание самих БД. Например, две компании могут проводить статистические исследования пересечений своих пользователей, но исходные данные о своих клиентах эти компании друг другу не показывают (только обобщенные статистические результаты и зависимости). Другой пример, когда транспортные компании перевозят пассажиров и собирают все данные на них, а внешние службы безопасности имеют списки "злоумышленников" ("стоп-списки"). Задача состоит в том, что бы при решении совместных задач по обеспечению безопасности пассажиров никто из злоумышленников, включенных в "стоп-списки", не мог попасть на транспорт и при этом, чтобы транспортные компании не знали самих "стоп-
списков", а службы безопасности не знали о перемещениях лиц, не входящих в "стоп-списки". Таким образом, формально решается задача получения взаимного доступа только к пересечениям двух баз данных, но владельцы этих БД не знают ничего другого о чужих БД. Решение этой проблемы также возможно криптографическими способами, аналогичными выше указанным способам. К недостаткам этих способов можно отнести то, что они способны выявлять только полное равенство (совпадение) признаков записей из разных баз данных. Более перспективным является применение защищенных вычислительных устройств. Такие ЗВУ внутри себя получают доступ ко всем базам данных и могут не только выявлять полное равенство (совпадение) записей из разных БД, но и определять степень их близости (находить близкие записи или подобные).
Потенциальные приложения этих двух проблем ОЗЗ очень разнообразны и включают, помимо технической защиты от пользовательской КпР, такие области, как коммерческая безопасность, антитеррористические меры, экономика (банковское дело, трейдинг, маркетинг, реклама, электронные магазины, и т.д.), биомедицина, патентное дело, и т.д. В настоящее время проводятся исследования по следующим основным направлениям в области обработки закрытых запросов: комбинирование криптографических методов и защищенных вычислительных устройств; закрытые запросы к сверхбольшим базам данных в режиме времени, близком к реальному; закрытые запросы к нескольким базам данных, а также по другим направлениям. Таким образом, в актуальной области пользовательской компьютерной разведки появляются новые угрозы и своевременно разрабатываются методы защиты от них. Извечная борьба средств нападения и защиты продолжается на новом (компьютерном) уровне развития технического прогресса.
Выводы. Для обеспечения технической защиты информации предложен и обоснован новый актуальный подход к исследованию пользовательской технической компьютерной угрозы или, другими словами: пользовательской компьютерной разведки. Предложены три вида способов защиты от нее на основе маскирования запросов, обработки избыточных и закрытых запросов к базам данных. Особый интерес представляет, предложенный Д.В. Ассоновым метод защиты от пользовательской технической компьютерной угрозы путем обработки закрытых запросов на основе защищенных вычислительных устройств.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Меньшаков Ю.К. Защита объектов и информации от технических средств разведки. - М.: Российский гос. гуманитарный ун-т, 2002. - 399с.
2.	Варламов О. О. О системном подходе к созданию модели компьютерных угроз и ее роли в обеспечении безопасности информации в ключевых системах информационной инфраструктуры // Известия ТРТУ, Тематический выпуск "Информационная безопасность", - Таганрог: Изд-во ТРТУ, 2006, № 7 (62). - С. 216-223.
3.	Асонов Д.В. Обработка закрытых запросов. Доклад на семинаре Московской секции ACM SIGMOD, ВМК МГУ. 26.04.2007
4.	Rakesh Agrawal, Dmitri Asonov, Murat Kantarcioglu, Yaping Li: Sovereign Joins. ICDE 2006: 26
5.	Dmitri Asonov: Querying Databases Privately: A New Approach to Private Information Retrieval Springer 2004
6.	Dmitri Asonov, Ramakrishnan Srikant: Enabling Sovereign Information Sharing Using Web Services. SIGMOD Conference 2004: 873-877
7.	Dmitri Asonov, Johann Christoph Freytag: Almost Optimal Private Information Retrieval. Privacy Enhancing Technologies 2002: 209-223
8.	Dmitri Asonov, Johann Christoph Freytag: Repudiative information retrieval. WPES 2002: 32-40
9.	Dmitri Asonov: Private Information Retrieval. GI Jahrestagung (2) 2001: 889-894

=====



﻿РАЗРАБОТКА СИСТЕМ УПРАВЛЕНИЯ НОРМАТИВНО СПРАВОЧНОЙ ИНФОРМАЦИЕЙ
ДЛЯ СИСТЕМ ОБРАБОТКИ СТАТИСТИЧЕСКОЙ ИНФОРМАЦИИ
К.А. Линев,
аспирант кафедры кибернетики Московского института электроники и математики (технического университета). Адрес: г. Москва, Б.Трехсвятительский переулок, д. 3, e-mail: ZnTenshi@hotmail.com.
В статье рассматривается задача построения систем управления нормативно справоч- | ной информацией (СУ НСИ) для систем сбора, контроля качества и обработки статистической информации. Выделяются особенности, характерные для СУ НСИ, предназначенных для использования в области автоматизации статистических исследований, формулируются требования к таким системам. Рассматриваются подходы к построению некоторых из компонентов изучаемых систем на основании опыта построения СУ НСИ для Всероссийской переписи населения 2010 года (ВПН-2010).
V	>
Ключевые слова: мастер-данные, древовидный спрвочник, стаститичкие обзоры, компьютерная поддержка, статитический справочник.
Под термином нормативно-справочная информация (НСИ), или мастер-данные, как правило, понимают условно-постоянную часть всей корпоративной (учрежденческой) информации, не претерпевающую существенных изменений в процессе повседневной деятельности организации, на основании которой формируются текущие документы. [1]
В крупных, особенно — территориально-распре-деленных компаниях, в силу исторического их развития, часто сосуществует большое количество действующих систем ведения НСИ, в том числе и не автоматизированных, а также различных спра-
вочников, часто никогда не предназначавшихся для использования в 1Т инфраструктуре. При этом в каждой такой системе присутствуют собственные источники пополнения НСИ. Эта ситуация оказывается серьезным препятствием на пути интеграции корпоративной 1Т-инфраструктуры и вызывает огромные трудности при обмене данными между локальными приложениями, а также при создании сводных аналитических отчетов.
Одним из ярких примеров предприятий, которым приходится работать с большим количеством НСИ, являются органы государственной статистики и частные статистические компании. Огромное
количество различных справочников и таблиц используется при обработке данных различных исследований, проводимых этими организациями. При этом справочники постоянно обновляются по результатам уже проведенных исследований, территориально-административных изменений, изменений законодательства и по множеству других причин. Рассмотрению вопросов организации СУ НСИ в контексте работы именно таких предприятий и посвящена эта работа.
СУ НСИ наряду с самой информацией включает также комплекс средств ее поиска, хранения, обработки и распределения, методов ее ведения, поддержания в актуальном состоянии, а также совокупность организационно-распорядительных документов и регламентов, регулирующих использование и ведение данных НСИ. [2]
Любая претендующая на промышленное использование информационная система должна поддерживать управляемые ею данные на высоком уровне качества. Важную роль играют критерии, которые на сегодня универсальны для любых типов корпоративных данных, такие как полнота, непротиворечивость, корректность и актуальность. Причем применительно к данным НСИ, жизненный цикл которых по определению превышает аналогичный цикл для оперативных данных, они имеют еще большее значение.
Вместе с тем, помимо этих классических критериев (реализация которых на сегодня обеспечивается вполне отработанными методиками проектирования данных и надежными программными продуктами), существуют и более специфические, характерные именно для НСИ. Это идентифицируемость и уникальность, которые обеспечивают однозначную и уникальную идентификацию данных, что необходимо для установления ссылок на них из других элементов НСИ и прикладных документов [2].
СУ НСИ для систем информационного обеспечения статистических исследований обладают рядом особенностей, которые приводят к особенной актуальности качественного управления НСИ в таких системах. Перечислим наиболее заметные из этих особенностей.
Полный цикл жизни СУ НСИ в течение сравнительно небольшого промежутка времени. Поскольку практически каждое статистическое исследование уникально за счет как различия требований разных организаций к содержимому статистической информации, так и изменения представления о содержании исследования на основании уже про-
веденных аналогичных исследований, для каждого исследования необходимо заново производить первичную загрузку и развертывание системы. Каждое исследование также потребует новых способов работы с бизнес-приложениями.
Высокая стоимость восстановления утерянных в результате ошибок данных. Поскольку сбор информации и представляет собой суть исследования, в случае ее потери стоимость восстановления утраченных данных равняется стоимости их изначального получения. Таким образом, каждый сбой в СУ НСИ наносит серьезный урон всему исследованию. Это в свою очередь делает низкокачественное управление НСИ неприемлемым в информационных системах, связанных с обработкой статистической информации.
Географическая удаленность элементов системы друг от друга. Любое крупное исследование связано с управлением большими объемами данных, получаемыми в удаленных друг от друга узлах системы. Это создает ряд специфических сложностей, начиная с проблем со связью между узлами, заканчивая различиями в местном времени.
Централизованность. В силу природы поставленной задачи, поток информации при сборе статистической информации всегда направлен к одному центральному узлу системы, в котором должна быть произведена обработка собранных данных. Эту особенность таких систем можно использовать при построении СУ НСИ для упрощения, а соответственно — повышения надежности таких систем.
Таким образом, разработка программного обеспечения для СУ НСИ сталкивается со следующим набором задач: 4- Первичная загрузка мастер-данных 4- Организация хранения мастер-данных 4 Организация обновления и распространения мастер-данных
4 Организация интерфейсов с бизнес-приложениями.
При выполнении всех этих операций, НСИ должна в каждый момент времени отвечать обозначенному выше набору критериев качества.
Для каждой из этих задач характерен собственный круг вопросов, которые необходимо решить при разработке ПО СУ НСИ.
При первичной загрузке данных возникает задача преобразования большого объема существующих разнородных справочников к некоторому эталонному виду. Типичной является ситуация, когда при проведении очередного большого статистического исследования приходится создавать для обработ-
ки его результатов отдельную информационную систему. Наиболее характерный способ хранения справочников в компаниях со слабой автоматизацией бизнес-процессов — электронные таблицы. Как правило, это файлы Excel или легко приводимые к ним форматы. Конечно, можно вручную переносить справочники, однако объемы справочной информации могут быть невероятно большими. Например, представьте себе всероссийский справочник, сопоставляющий городские кварталы и сельские населенные пункты их индексам. Даже если проделать всю эту работу вручную, количество допущенных в ней ошибок может обесценить справочник. Таким образом, возникает вопрос о необходимости автоматического преобразования данных.
Для решения этой проблемы в рамках проекта по техническому обеспечению Всероссийской переписи населения 2010 года была решена задача автоматического преобразования множества взаимосвязанных свободно редактируемых справочников, сохраненных в формате Excel в инструкции на языке T-SQL для СУБД Microcoft SQL Server по заполнению таблиц БД содержащимися в справочниках мастер-данными. Поскольку таблицы Word и многих других офисных приложений легко преобразуются в таблицы Exel путем прямого копирования данных, это решение фактически позволяет решить проблему первичного заполнения БД, входящей в СУ НСИ на основании эталонных справочников, хранящихся в виде электронных документов.
Приложение использует при работе метаданные о структуре справочников в формате XML и с помощью компонента Aspose Cells производит обработку документов Excel. Оно поддерживает сложные представления данных, такие, как древовидные справочники или связь записей различных справочников на основании их геометрического расположения на листе Excel. При загрузке производится контроль целостности данных, то есть загруженные мастер-данные гарантированно имеют корректную структуру.
Вторым по популярности после электронных документов способом хранения справочников в организациях являются «малые» СУБД, такие, как, например, Microsoft Access. Причем зачастую БД, в которых хранится НСИ, спроектирована неудачно и не обеспечивает должного качества НСИ. Кроме того, необходимо обеспечение связи между справочниками, загружаемыми из различных, до того не связанных источников.
В рамках того же проекта было создано приложе-
ние, решающее и эту задачу. Приложение работало с объемным, порядка 180000 записей, территориальным справочником, имеющим древовидную структуру. Оно обеспечивало обработку множественных локальных БД, содержащих часть этого справочника в виде плоских таблиц, и заполняло централизованный справочник с обеспечением всех нужных ссылок для формирования древовидного справочника.
После загрузки данных необходимо решить задачу об организации их хранения, обновления и распространения. В этом вопросе существуют три возможных подхода [1]:
♦	Централизованный, характеризующийся централизованным хранением эталонов мастер-данных
♦	Децентрализованный, характеризующийся созданием распределенного виртуального хранилища НСИ
♦	Смешанный, представляющий собой попытку объединить наилучшие качества предыдущих двух подходов.
Первый поход обладает целым рядом преимуществ, таких, как простота разработки и автоматическое решение проблемы поддержания целостности данных при условии замены всех копий на эталоны.
С другой стороны, представим себе систему, узлы которой расположены по всей России, каковым свойством обладает система, обеспечивающая работу любого всероссийского статистического исследования. Необходимость при каждой операции обращаться к некоторому центральному хранилищу, допустим, расположенному в Москве, не только приведет к катастрофическому падению скорости работы системы в узлах, расположенных в восточной Сибири, но и в ряде случаев просто сделает работу системы невозможной из-за отсутствия каналов связи с центральной системой.
Однако и традиционный распределенный подход в случае с всероссийским исследованием также не годится. Традиционным методом обновления справочников и поддержания целостности системы является ночная нормализация данных, когда никакие пользовательские операции не производятся. Однако что будет делать такая система, если в одном ее узле полночь, а в другом скоро полдень?
Таким образом, необходимо разработать некоторый гибридный механизм работы с распределенными данными, позволяющий обеспечить максимум преимуществ централизованного подхода, но при этом способный справиться со специфическими трудностями при работе на обширной территории.
Для решения этой проблемы предлагается с помощью методов теории графов оптимальным с точки зрения затрат сетевого трафика и времени образом разделить сеть на подсети, управляемые централизованным способом. Каждая такая подсеть должна быть связана с другими подсетями с помощью специального набора программных инструментов, позволяющего незаметно для подсети обеспечивать доставку в нее обновлений из центрального узла и передачу результатов работы. Важно отметить, что для обеспечения максимальной эффективности должны поддерживаться самые различные способы связи, начиная от защищенной передачи через Интернет и заканчивая транспортировкой данных на физических носителях.
В связи с последним требованием приходиться признать, что информационная система, скорее всего, сможет гарантировать актуальность данных только в центральном узле, в подсетях же будет поддерживаться только локальная целостность и информация, необходимая для связывания данных с, возможно, изменившимися данными центрального узла в тот момент, когда это будет возможно.
Таким образом, будет обеспечена, с одной стороны, централизация управления НСИ в каждой отдельной подсети, с другой стороны, ценой необходимости поддержания репликации данных лишь на небольшом числе узлов будет достигнута гибкость и масштабируемость распределенной системы.
На данном этапе в ходе работы над СУ НСИ для статистических исследований удалось выделить свойственные таким системам особенности, кото-
рые должны учитываться при разработке. Поставлены основные задачи, которые должны решаться системой. Продемонстрирована возможность эффективного решения одной из поставленных задач — выполнения первичной загрузки данных из имеющейся у клиентской организации слабоструктурированной информации — путем создания модулей, выполняющих загрузку данных из электронных документов и слабо структурированных БД в систему таблиц НСИ заданной структуры. Предложен способ решения задачи организации хранения, распространения и обновления данных с помощью двухуровневой схемы хранения, сочетающей свойства централизованной и децентрализованной моделей хранения данных.
В настоящее время производится исследование возможностей по практической реализации предложенной в статье схемы хранения, обновления и распространения данных. Кроме этого ведется разработка механизма взаимодействия СУ НСИ с бизнес-приложениями, который предоставлял бы возможности максимально гибкого ввода и вывода данных в различных представлениях, сохраняя при этом идентифицируемость и уникальность всех записей, управляемых системой. ■
Литература
1.	Ярослав Помазков, «Системы НСИ: мировой опыт и тенденции развития», журнал PC Week, №522, Москва, 2006 г.
2.	Дмитрий Гулько, «Мастер-данные: найден кратчайший путь к СОА», CNews, Москва, 2006 г.

=====



﻿Наши юбиляры
ру Петру Яновичу Крауиньшу, заведующему кафедрой автоматизации и роботизации в машиностроении машиностроительного факультета ТПУ, д.т.н., профессору.
Родился П.Я. Крауиньш в Латвии, Лимбажском районе, местечке Дунте. В 1949 г. родители были репрессированы и высланы в Томскую область, Карга-сокский район. Там же, в 1957 г. он закончил 10 классов, после чего работал в течение 1,5 лет в Июсском леспромхозе в Хакасии. С 1958 по 1961 гг. служил в рядах Советской армии в г. Вильнюсе, после окончания с отличием подготовительных курсов поступил в Томский политехнический институт.
Петр Янович работает в ТПУ с 1961 г.; в 1966 г. закончил Томский политехнический институт. В 1971 г. защитил кандидатскую, а в 1996 г. докторскую диссертации.
П.Я. Крауиньш является одним из ведущих преподавателей университета, активно внедряет в учебный процесс компьютерные технологии. В настоящее время он преподает дисциплины «Математическое моделирование технических систем и производственных процессов», «Теория автоматического управления».
Петр Янович Крауиньш опубликовал более 90 научных работ. Он награжден двумя бронзовыми медалями ВДНХ за разработку и внедрение вибрационной техники. Научные интересы П.Я. Крауинь-ша в последние годы связаны с разработкой виброударной техники, в частности, для нефтегазового комплекса Томской области. С 1978 по 1987 гг. Петр Янович - разработчик и соискатель работы по тематике «Вибрационное просвечивание Земли». Член рабочей группы при СО РАН по данной проблеме. В 1997 г. по результатам конкурса на лучшую НИР и ОКР в ТПУ за цикл работ по созданию различной вибрационной и геофизической техники П.Я. Крау-иньш награжден Дипломом первой степени.
скнефть» (Лугенецком и Вахском) проведено успешное испытание новой ударно-волновой технологии совместно с импульсным источником для очистки перфорационной зоны добывающих скважин. Данная технология и оборудование разработаны на кафедре «Автоматизация и роботизация в машиностроении» МСФ под научным руководством П.Я. Крауиньша и с его непосредственным участием. Под научным руководством П.Я. Крауи-ньша в 1998 г. выполнена хоздоговорная работа по разработке высоконапорных пеногенераторов для системы подслойного тушения пожаров в резервуарах с нефтью и нефтепродуктами, выпускаемых ныне серийно в ЗАО «ТОМЗЭЛ», г. Томск, и успешно внедряемых в АО «Центрсибнефтепровод».
В 2001 г. Петр Янович избран заведующим кафедрой «Автоматизация и роботизация в машиностроении». Под его руководством коллектив кафедры в составе доктора наук, четырнадцати доцентов, кандидатов технических наук, шести ассистентов успешно осуществляет учебный и научный процессы. На высоком уровне готовятся инженеры по специальности «Металлообрабатывающие станки и комплексы». Успешно развивается подготовка инженеров-технологов по специальности «Технология художественной обработки материалов». Студенты по этой специальности неоднократно становились победителями Всероссийских конкурсов и олимпиад. Под его научным руководством подготовлено 10 соискателей и аспирантов, успешно защитивших кандидатские диссертации. В настоящее время П.Я. Крауиньш руководит 7 аспирантами. Является руководителем подготовки студентов по магистерской программе «Динамика и акустика станочных систем».
П.Я. Крауиньш пользуется заслуженным авторитетом среди студентов и сотрудников машиностроительного факультета ТПУ.

=====



﻿Технологии инженерного образования
УДК 328.16:681.3
ИНТЕРАКТИВНЫЕ КОМПЬЮТЕРНЫЕ ТРЕНАЖЕРЫ ПО ИНТЕГРАЛЬНОМУ ИСЧИСЛЕНИЮ И ДИФФЕРЕНЦИАЛЬНЫМ УРАВНЕНИЯМ
В.В. Клыков, А.А. Ельцов, К.Г. Шатлов
Томский государственный университет систем управления и радиоэлектроники E-mail: reddvl@mail.ru, yeltsovaleks@mail.ru, frodo@ms.tusur.ru
Рассматриваются интерактивные компьютерные тренажеры по интегральному исчислению и дифференциальным уравнениям. Показана математическая модель, структура и особенности представления, ввода и анализа математических данных.
Самостоятельная работа студентов любых форм обучения требует наличия средств облегчающих изучение материала. Одним из инструментов при организации самостоятельной работы являются электронный обучающий курс (ЭОК). Формой обучения, основанной на самостоятельной работе, является заочное образование, в том числе и дистанционное.
Дистанционное образование как общественный институт возникло давно и в настоящее время прочно вошло в жизнь как способ получения основного образования и переквалификации в западных странах. В России завершается этап становления дистанционного образования характеризующийся наличием большого числа организаций предлагающих получение образования с использование дистанционных технологий обучения. Так же просматривается тенденция внедрения дистанционных технологий в процесс очного обучения в качестве технического и методического обеспечения самостоятельной работы студента. Одним из ключевых инструментов дистанционных образовательных технологий является ЭОК или «электронный учебник».
Современный электронный обучающий курс это сложный многокомпонентный комплекс способный решать широкий круг задач. В состав ЭОК входят:
•	гипертекстовые лекционный курс и задачник с большим количеством решённых примеров (практикум);
•	блоки виртуальных лабораторных работ и стендов; тестирования и анализа выполнения контрольных работ; генерации заданий для курсового проектирования; обеспечения справочной информацией (в т.ч. глоссарий); презентаций докладов, видео фильмов, мультимедийных
вставок и пр. мультимедийной обучающей информации.
Так как ЭОК призван в максимально возможной степени заменить настоящего преподавателя, он должен обладать высокой степенью интерактивности. Обратная связь осуществляется посредством анализа действий студента в процессе работы с учебником и его компонентами и выражается в структурированной и дозированной подаче учебного материала, адаптивном тестировании и автоматизированном контроле успеваемости студента. Наибольшая доля интерактивности выпадает на «интерактивные компьютерные тренажеры» (ИКТ) -компоненту ЭОК, предназначенную для изучения и закрепления различных практических навыков (усвоение алгоритма, тренаж в решении задач и т.д.) Сложность представления практического материала кроется в том, что именно практические занятия характеризуются максимальным взаимодействием студента и преподавателя. Студент выполняет задания преподавателя не для оценки, а для того, чтобы научиться, «набить руку». Поэтому, со стороны преподавателя необходим постоянный контроль каждого этапа работы студента; более того контроль сопровождается подсказками, рекомендациями, поправками и исправлениями. Зачастую преподаватель демонстрирует решение сам.
Создание ИКТ сложный процесс, требующий высокой квалификации программистов и детально проработанных сценариев работы тренажеров, предоставляемых методистами. Практика показывает, что доля современных электронных учебников, в составе которых есть интерактивные компьютерные тренажеры, все еще очень мала [1]. Полноценные тренажеры должны сочетать в себе функции учителя, демонстратора и контролера и обеспечивать:
•	демонстрацию решения;
•	режим обучения (пошагового решения), в котором работа студента контролируется и направляется на каждом шаге решения; выводятся подсказки, и производится коррекция неверных шагов;
•	режим контроля, в котором тренажер не вмешивается в решение и констатирует только результат.
В круг задач, решаемых интерактивными компьютерными тренажерами, входят:
•	обучение решению хорошо формализованных задач, алгоритм решения которых содержит незначительное количество шагов (3-12);
•	подготовка банка задач, используя режим демонстрации решения с произвольно заданными исходными данными;
•	проведение компьютерных контрольных работ в режиме контроля с генерируемым заданием для каждой задачи [2, 3].
Принцип работы интерактивных компьютерных тренажеров прост: дублирование «бумажной» работы пользователя, сличение результатов на определенных методистом шагах («контрольных точках») и соответствующая выбранному режиму работы реакция (подсказка, исправление, оценка и т.д. и их сочетания). Математическая модель так же проста и легко укладывается в теорию детерминированных автоматов. Работа изучаемого математического алгоритма описывается с помощью следующего детерминированного автомата: М (А, В, Ф, у), где: А - входной алфавит, элементы которого определяют все возможные значения фазовой переменной алгоритма (фазовая переменная - совокупность данных однозначно определяющих со-
стояние работы алгоритма на его определенном шаге); 5 - алфавит состояний, определяет состояние алгоритма, соответствующее текущему шагу его выполнения; В - выходной алфавит, идентичный входному; Ф - выходная функция, определяет изменения фазового состояния алгоритма в соответствии с логикой его работы, задается таблично; у- переходная функция, определяет логику работы алгоритма, задается графом переходов.
Несмотря на относительную простоту модели структура тренажера довольно сложна (рис. 2). В структуру тренажера входят блоки:
•	считывания и интерпретации сценария. Отвечает за подготовку данных для работы тренажера, включая: выбор изучаемого материала, генерацию задания, задание режима контроля, установку опций протоколирования и т.д.
•	графического представления работы алгоритма. Отвечает за вывод формул, построение графиков, формирование таблиц и прочих вариантов наглядного представления работы алгоритма.
•	ввода данных. Обеспечивает ввод данных пользователем в заданной форме (формулы, таблицы, текстовый ввод, указание мышью и т.д.).
•	управления. Интерпретирует введенные пользователем данные согласно сценарию и установкам работы, обеспечивает обратную связь в виде заданной реакции (подсказка, исправление, вывод оценки и т.д.).
•	управления фазового состояния алгоритма. По команде из блока управления производит изменение фазового состояния алгоритма. Например, переход от одного шага к другому, коррекцию текущего состояния (введенные пользователем данные укладываются в заданную по-
Рис. 1. Формирование модели работы вычислительного алгоритма для тренажеров электронного учебника «Методы оптимизации». Описание фазовой переменной приведено для алгоритма вычисления корня функции методом дихотомии
Рис. 2. Структура интерактивного компьютерного тренажера
грешность, но для обеспечения устойчивой работы они корректируются до значений, вычисленным компьютером).
• контроля и протоколирования. По команде из блока управления производит сличение данных, введенных пользователем, с собственно вычисленными значениями, протоколирует шаг и извещает блок управления о результате. Согласно созданной математической модели были созданы комплексы ИКТ с одинаковой структурой для ряда электронных учебников: «Вычислительная математика», «Методы оптимизации», «Высшая математика 2. Интегральное исчисление и дифференциальные уравнения». Последний существенно отличается от предыдущих блоком графического представления работы алгоритма, расширенным вычислительным модулем и мощным блоком интерпретации сценариев, позволившем в девяти исполняемых модулях реализовать около 120 сложных тренажеров.
Особенностью и изюминкой ИКТ по интегральному исчислению и дифференциальным уравнениям является мощный инструментарий для символьного ввода ответов, в данном случае формул. Остановимся на этом подробнее.
Одним из ключевых факторов успешного использования компьютерных технологий в обучении является возможность представлять данные в их естественном виде для каждого рода деятельности. Так композитор, работающий на компьютере, предпочитает видеть ноты, а не символьную их запись или функцию частоты от времени; дизайнер работает с изображением, а не редактирует графи-
ческие файлы текстовым редактором (что, надо признать, принципиально возможно), инженер, работая с профессиональными пакетами прикладных программ, видит соответственно чертежи, формулы и т.д. Однако, в большинстве интерактивных обучающих программ по математическим дисциплинам, пользователь (отнюдь не программист!) зачастую вынужден вводить ответы в псеводокоди-рованном виде. Сравните две записи:
3
J (2x2 - sin3(ax))aX и
-3
DEFINT(-3,3,(2*xA2-pow(sin(alpha*x),3)))dx.
Первая введена с помощью формульного редактора MathType, знакомому каждому, кто хотя бы раз работал с программой MS Word для создания документов, содержащих формулы (например, писал отчет по лабораторной или контрольной работе). Экранная клавиатура с интуитивно понятными символьными обозначениями позволяет легко научиться и быстро вводить формулы любой сложности. Вторая запись - типичный пример ввода ответа в символьном виде. Комментарии по части наглядности и удобства ввода и чтения излишни.
Работа с данными в естественном формате применительно к ИКТ по высшей математике включает в себя несколько подзадач:
•	отображение формул;
•	генерация формул;
•	ввод формул;
•	анализ формул;
•	сравнение формул заданных в аналитическом виде.
Рис. 3. Компонента ввода ответа ИКТ по интегральному исчислению и дифференциальным уравнениям. Экранная клавиатура содержит только необходимые функциональные блоки, остальные скрыты
1 ЭНЙ1 ®ШИ1Ш1НК@10Н
AI
i
X -
ln(x)
4 х"
dx
Ввести ответ:
Вернуть шаблон:
= «
Для решения первых трех задач можно использовать разные подходы, в том числе и разработку собственных инструментальных средств. Целесообразным видится, однако, адаптация существующего ПО типа MathType или Equation Editor к нуждам ИКТ В результате анализа существующего программного обеспечения - формульных редакторов была выбрана программа Formulator украинской лаборатории Hermitech. Программа, аналогичная по функциям, интерфейсу и удобству работы MathType, выгодно отличается от аналогов текстовым форматом хранения данных (международный стандарт MathML и MathML 2.0) и наличием функций Automation, существенно облегчающим использование программы как OLE сервера. Компонентная лицензия Formulator 2.0 предусматривает установку For-mulator-а на компьютер вместе с учебником; так же в составе лицензионного пакета идет SDK (Software Developer's Kit) - инструментарий разработчика, позволяющий использовать функции Formulator-а через модель COM (Component Object Model), что повышает эффективность разработки в результате использования современных средств проектирования, поддерживающих эту модель.
Статические формулы хранятся не в картинках, а в текстовом «описательном» виде в формате MathML. Это позволяет, во-первых, легко отображать формулы, так как Formulator поддерживает два вида ввода формул, графический интерактивный используется для работы с пользователем, текстовый в формате MathML для нужд отображения и преобразования. Во-вторых, текстовая информация хорошо поддается сжатию, что позволило на порядок уменьшить размер базы данных сценариев тренажеров, в которой основное место занимали картинки - формулы.
Генерация формул, опять же, существенно упрощается благодаря текстовому формату хранения данных Formulator. Таким образом, генерация сводится к строковой подстановке определенных параметров в текстовый шаблон формулы. О гене-
рации заданий и тэговой разметке формул поговорим позднее.
Ввод формул. Благодаря наличию функций управления Automation, у разработчика есть возможность полного управления вводом. Контролю поддаются цвет фона, размер и тип шрифта, масштаб изображения, функции работы с буфером обмена и расширенные функции редактирования «отменить» и «повторить». Эмуляция активации любой панели экранной клавиатуры дает возможность создавать свою экранную клавиатуру (рис. 3), отличающуюся от стандартной не только дизайном, но и качественным составом.
Анализ введенных пользователем формул, опять же возможен благодаря текстовому формату хранения данных Formulator. MathML являясь подмножеством XML как международный стандарт имеет развитые средства преобразования и анализа (парсинга; от англ. parse - анализ, разбор).
Полученные в результате анализа данные поступают в вычислитель, где сравниваются с эталонными (вычисленными компьютером). Сравнение аналитически заданных формул очень непростая задача, которая надо признать решена как авторскими коллективами в нашей стране, так и за рубежом (например, известный пакет Mathematica). Однако сложность задачи такова, что ее решение в рамках разработки ИКТ экономически нецелесообразно. Поэтому используется численное сравнение, использованием бесконечности и неопределенности как допустимых вычислительных параметров. Для сравнения двух аналитически заданных формул они сначала разбиваются на структурные элементы (например, подынтегральное выражение и выражение под знаком дифференциала и т.д.) в зависимости от типа тренажера определяемого сценарием, затем для каждой из частей производиться вычисление ее значений на некоторой сетке. Значения попарно сравниваются, и принимается решение о правильности или неправильности введенных данных. Сравнение происходит по мо-
Рис. 4. Анализ введенных пользователем формул с помощью ЕогтиЬОг
дулю и с учетом заданной сценарием относительной погрешности (или абсолютной, если верное значение близко к нулю). Сравнение по модулю позволяет обрабатывать ситуации, в которых знак вынесен из одной проверяемой части формулы в другую. Если все вычисленные компоненты формулы по модулю совпадают с расчитанными компьютером, но различаются знаком, производится дополнительный простой анализ на знаки.
Включение в парсер блока предварительной обработки формул позволяет реализовать такие возможности «умного» анализа, как распознавание пропущенного знака умножения между константами и переменной, скобками и в других случаях; возведение в степень тригонометрических функций (в которых, степень указывается чаще всего после имени функции) и прочих условностей математической нотации.
Теперь поговорим о сценариях тренажеров. Это тот краеугольный камень, на котором зиждется автоматизация создания тренажеров и их функционирование [5, 6]. Сценарий содержит все необходимые данные и метаданные для работы тренажера, определяет его тип, выводимые и вводимые данные, шаблоны ответов и генерируемых формул, параметры генерации и, конечно же, сам вычислительный или другой алгоритм согласно которому компьютер будет вычислять эталонные значения ответов пользователя для каждого шага работы. Сценарии ИКТ по интегральному исчислению и дифференциальным уравнениям реализованы в виде базы данных и распределены в четыре таблицы: типы тренажеров, алгоритмы тренажеров, типы генерируемых параметров для каждого тренажера, области допустимых значений для параметров. Интерес представляет последняя таблица, в которой задается область допустимых значений для каждого параметра каждого тренажера. Так же в таблице заданы недопустимые и «специальные» значения (задание, сгенерированное при помощи которых, представляет какой-либо интерес с точки зрения методиста).
Генерация задания производится следующим образом. В соответствии с типом тренажера из базы данных берется шаблон формулы, в котором присутствуют нумерованные тэги - участки, которые должны быть заменены соответствующими параметрами. Значения параметров вычисляются случайным образом двумя способами: учитывая область допустимых значений и недопустимые параметры, или используя специальные значения. Каждый сгенерированный параметр подставляется во все места формулы, соответствующие его номеру, а так же запоминается тренажером для дальнейших вычислений. Такой подход к генерации позволяет бесконечное количество непротиворечивых заданий, и определенное число «интересных», с использованием специальных значений.
Использование сценариев позволило реализовать около 120 тренажеров, использую всего 9 исполняемых модулей, являющихся по существу проигрывателями сценариев. В будущем возможно создание единого модуля-плеера для всех типов сценариев. Так же, как показала практика, создание сценариев тренажеров является основной и самой трудоемкой задачей для методиста после предоставления лекционного материала.
Заканчивая обзор особенностей ИКТ по интегральному исчислению и дифференциальным уравнениям, надо отметить наличие блока протоколирования, которые, автоматически регистрируя все действия пользователя и настройки программы (режим тренажера, задание и его параметры и т.д.), сохраняет данные в зашифрованном виде. Наличие программы, совмещающей функции декодера и просмотра текстовых документов, позволяет использовать ИКТ для тестирования и проведения удаленных контрольных работ.
В заключение приведем краткую характеристику ИКТ по интегральному исчислению и дифференциальным уравнениям для электронного учебника «Высшая математика 2. Интегральное исчислению и дифференциальные уравнения», разра-
ботанному в лаборатории «Мультимедиа» Томского межвузовского центра дистанционного образования в 2005 г. по бумажным аналогам [7-9].
В состав комплекса интерактивных компьютерных тренажеров входят девять исполнительных модулей, реализующих тренажеры по следующим темам:
Тема	Кол-во тренажеров	Пример задания
Неопределенный интеграл. Подведение под знак дифференциала	39	J (a + bxn) pxn-ldx
Неопределенный интеграл. Простейшие преобразования подынтегрального выражения	14	С {mx + n)dx
J ф2 — (ax + b)2
Неопределенный интеграл. Интегрирование по частям	16	J (ax + b)tg2(ax)dx
Несобственные интегралы первого рода. Сходимость по определению	6	f dx
^ x — 2ax + a2 + b2 a
Несобственные интегралы второго рода. Сходимость по определению	9	a Г dx J xpln4 x
Формула Ньютона-Лейбница и интегрирование по частям в определенном интеграле	14	b J {cx + d )eaxdx a
Неопределенный интеграл. Тригонометрические подстановки	4	r cos3(ax) , 1-2!-dx J sin (ax)
Однородные линейные дифференциальные уравнения с постоянными коэффициентами. Однородные линейные системы дифференциальных уравнений	11	У — (Г + r) y' + +ГГ2 У = 0
Интегрирование рациональных дробей	6	j (ax + b) ^ J (x — xXx — x2)
Всего:	119
Все тренажеры обладают унифицированной структурой и мощным инструментарием символьного ввода формул. Реализованы два режима работы: контроль и обучение. Режимы различаются реакцией на неверный ввод данных пользователем. В режиме «обучение» в таком случае выводится сообщение о неправильности ответа, выводится варрант правильной записи ответа в виде формулы,
разрешается перейти на следующий шаг даже при неправильно решенном предыдущем. В режиме «контроль» выводится сообщение об ошибке, пользователь остается на том же шаге решения до ввода правильных значений.
СПИСОК ЛИТЕРАТУРЫ
1.	Мицель А.А., Клыков В.В. Проблемы и перспективы информационного обеспечения инженерного открытого образования // Открытое образование. - 2004. - № 1. - С. 56-61.
2.	Ельцов А.А., Ельцова Г.А., Магазинников Л.И., Магазиннико-ва А.Л. Итоги эксперимента «Компьютерные контрольные работы» // Современное образование: ресурсы и технологии инновационного развития: Матер. Всеросс. научно-метод. конф.
-	Россия, Томск, 27-28 января 2005 г. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2005. - С. 212-213.
3.	Кручинин В.В., Магазинников Л.И., Морозова Ю.В. Пакет генераторов самостоятельных работ по курсу «Высшая математика» // Современное образование: ресурсы и технологии инновационного развития: Матер. Всеросс. научно-метод. конф.
-	Россия, Томск, 27-28 января 2005 г. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2005. - С. 128-129.
4.	Официальный сайт лаборатории Hermitech: http://www.hemi-tech.ic.zt.ua/
5.	Клыков В.В. Система автоматизированной разработки интерактивных компьютерных тренажеров на базе XML // Дистанционные образовательные технологии. Вып. 1. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2004. -С. 110-127.
6.	Мицель А.А., Клыков В.В. Интерактивные компьютерные тренажеры по математическим дисциплинам // Открытое образование. - 2005. - № 2. - С. 22-28.
7.	Ельцов А.А., Клыков В.В., Шатлов К.Г., Романенко А.В. Математические тренажеры // Современное образование: ресурсы и технологии инновационного развития: Матер. Всеросс. науч-но-метод. конф. - Россия, Томск, 27-28 января 2005 г. -Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2005. - С. 120-122.
8.	Ельцов А.А. Высшая математика II. Интегральное исчисление. Дифференциальные уравнения. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2002. - 232 с.
9.	Ельцов А.А., Ельцова Т.А. Высшая математика II. Практикум по интегральному исчислению и дифференциальным уравнениям. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2005. - 204 с.

=====



﻿УДК 681.3.06
В.В. Кручинин, А.А. Шелупанов
Подходы к созданию защищенного архива на основе разделения секрета
Рассматриваются подходы к созданию защищенных баз данных, основанные на разделении реляционных таблиц на две части: кодирования отношений и множеств доменов,
заданных деревьями И/ИЛИ. Приводится обобщенная структура системы, основанная на таком подходе. Даются приблизительные оценки размеров доменов.
Введение
Принцип разделения секрета предполагает разделение информации на части между участниками таким образом, что только данная группа участников может восстановить секрет, но ни одна другая группа не может восстановить этот секрет [1]. Применительно к реляционным базам данных предлагается разделить таблицы отношений на две части: таблицу кодов и множество доменов. Таблица кодов содержит коды кортежей, полученных из номеров значений атрибутов, хранящихся в доменах. Рассмотрим эту идею более подробно. Каждому кортежу декартового произведения множеств степенью п можно поставить в соответствие число и вместо кортежа в базе данных хранить это число. Для этого зададим отображение
F : А1 х А2 х... х Ап ® Nn , где А1 х А2 х... х Ап —декартово произведение множеств; Nn —множество номеров 0,п .
Если F биективно, то можно задать обратное отображение F 1 : Nn ® А1 х А2 х... х Ап .
Таким образом, биективное отображение F задает алгоритм идентификации кортежа декартового произведения:
пит = Яапк(Д а) ,
где а е А1 х А2 х... х Ап , пит е Nn , D — описание множеств декартового произведения
A[ х A2 х... х An . Отображение F
где a е A\ х A2 х... х An , num е Nn
-1
задает алгоритм генерации значения кортежа по номеру
а = Generate(D, пит) , D — описание множеств. Тогда отношение Я с А1 х А2 х... х Ап
можно однозначно представить подмножеством целых чисел num с Nn .
Используя алгоритмы Rank и Generate, можно предложить следующую структуру базы данных (рис. 1). При записи кортежа в базу данных работает алгоритм Rank, который присваивает номер данному кортежу. Далее этот номер хранится в базе данных. При выборке данных из базы работает алгоритм Generate, который по заданному номеру получает кортеж. Важным элементом является описание множеств декартового произведения D. Рассмотрим подробнее способы организации D, Rank, Generate.
Рис. 1. Описание структуры базы данных
1. Механизм реализации
Рассмотрим способ построения описаний множеств значений доменов D, алгоритмов идентификации Rank и генерации Generate. В качестве такого инструмента предлагается использовать деревья И-ИЛИ [2]. Правила построения дерева И-ИЛИ следующие:
1.	Если некоторое множество разбивается на n множеств {Aj }П=1, то это разбиение можно представить ИЛИ-узлом. При этом должно быть выполнено следующее условие:
Aj n Aj = 0, i * j .	(1)
2.	Если искомое множество является комбинацией элементов из n множеств, то данное преобразование представляется И-узлом. В этом случае условие (1) не требуется, необходимо, чтобы комбинация была уникальной.
Листьями такого дерева являются элементы или множества, разбиение которых не производится. Используя два этих правила, можно строить деревья И-ИЛИ для описания различных классов множеств.
Вариантом дерева И/ИЛИ назовем дерево, которое получается из заданного путем отсечения дуг, кроме одной, у всех ИЛИ-узлов. Корнем варианта будет являться корень дерева И-ИЛИ. На рис. 2 показан пример дерева И-ИЛИ и всех его вариантов.
Рис. 2. Дерево И-ИЛИ и все его варианты
Если дерево описывает некоторое множество, то вариант описывает один элемент множества. Общее число вариантов в дереве (или мощность множества) можно вычислить по формуле:
п
^ ю^) для ИЛИ-узла, г=1 п
ю(г) = "¡Пю^) дляИ-узла,	(2)
г=1 1,
где г — рассматриваемый узел дерева; { sZ } — множество сыновей узла z; n — число сыновей.
Тогда, зная rn(z) для каждого узла, можно предложить следующий алгоритм генерации варианта (Generated:
push
1.	Корень дерева записывается в вариант и заносится в стек Stack — < sroot, L >.
pull
2.	Из стека вынимается пара < z,lz > — Stack . Если стек пуст, то завершить работу.
3.	Определяется тип текущего узла. Если это И-узел, то переход на шаг 4, иначе переход на шаг
5.
4.	Все сыновья {sZрассматриваемого узла z записываются в данный вариант V, вычисляется
Ia(si) , используя выражение
A(sZ) _
.1(Z) mod w(sz) i > 1,
П w(sZ ) j _1
Ia(z)mod m(sZ) i _ 1,
(3)
и пары < sz) > заносятся в стек.
5. Если это ИЛИ-узел, то используя выражение
lO(si) _
lo (z)
при O(z) < ю^), k _ 1,
min[lO(z) - У w(sz)] при lO(sk) > 0, k > 1,
b ^^ j k k j _1
(4)
определяется единственный сын sк и 10 (sk). Сын записывается в вариант V, а пара < sк , 10 ^)>
заносится в стек.
6. Переход на шаг 3.
Анализ данного алгоритма показывает, что временная сложность пропорциональна количеству узлов, которые заносятся в стек, следовательно, пропорциональна числу узлов в варианте. При этом количество делений равно числу сыновей всех И-узлов варианта плюс число сложений и сравнений для ИЛИ-узлов [см. выражения (3) и (4)].
Построим алгоритм нумерации варианта для данного дерева И-ИЛИ. Для этого необходимо найти сопоставление варианта V в дереве D и нахождение соответствующего номера i. Сопоставление производится следующим образом:
Первоначально в стек M1 заносится корень варианта V, в стек M2 — корень дерева D.
Если стек M1 пуст, то завершить работу алгоритма.
Из стека M1 извлекается узел варианта dv, а из стека M2 извлекается узел d.
Если это узлы И, то все сыновья dv заносятся в стек M1 , а сыновья d заносятся в M2 . Переход на шаг 2.
Если это узлы ИЛИ, то сын dv ищется в множестве сыновей узла d. Если найдено совпадение, то сыновья заносятся в стек. Переход на шаг 2.
Если dv и d листья, то они удаляются из стека.
Вычисление номера начинаем производить с рассмотрения листьев варианта V. Все листья варианта имеют значения w(z) _ 1.
После того как сопоставление найдено, выполняем следующие действия:
1.	Для каждого И-узла z вычисляем
lz _ l1 + w(s1)(l2 + rn(s2)(...(ln)rn(sn-1))...)),
где {s. }n_1 — сыновья узла z, а {l. }П_1 — соответствующие номера, полученные для сыновей.
k-1
2.	Для каждого ИЛИ-узла вычисляем lz _ У w(i) +11 , где k — номер соответствия для узла
i _1
ИЛИ в дереве D, l1 — номер варианта для этого сына. Рекурсивно производим вычисления номера, пока не достигнем корня дерева. Полученное число lz для корня варианта будет номером варианта, т.е. V = R( lz). Очевидно, что lz < w(z) . Таким образом, для множества, представленного деревом И-ИЛИ, можно создать алгоритмы Rank и Generate.
2. Преобразование таблицы атрибутов в дерево И-ИЛИ
Рассмотрим построение дерева И-ИЛИ для таблицы атрибутов. Поскольку значение a е A1 х A2 х... х An является комбинацией элементов из множеств {а.}П_1 , то корень дерева будет И-узлом, имеющим n сыновей, каждый i-й сын соответствует множеству а. , графическое изображение такого соответствия показано на рис. 3.
Рис. 3. Соответствие между таблицей и деревом И-ИЛИ
Общее число множества значений вычисляется по формуле
п
ю(Т) = ПЮА).
I=1
Далее для каждого множества А( строится свое дерево И-ИЛИ. В общем случае можно выделить следующие типы:
1.	Множество значений А( представлено справочником.
2.	Множество значений А{ представлено числовым интервалом.
3.	Множество значений А{ представлено деревом И-ИЛИ.
Для представления множества уникальных объектов, которые используются в базе данных некоторого домена, используется справочник. Справочник имеет две части, первая часть содержит пронумерованные уникальные объекты, вторая часть резервная, предназначена для внесения новых объектов. Соответствие между справочником и деревом И-ИЛИ показано на рис.4. Справочник представляется ИЛИ-узлом, а все сыновья являются элементами справочника. Тогда общее число вариантов дерева (или элементов множества) равно
ю(А,-) = п + т .
Рис. 4. Соответствие между справочником и деревом И-ИЛИ
Для представления числового интервала задаются границы и шаг, тогда данное множество можно представить деревом И-ИЛИ, которое имеет ИЛИ-узел в качестве корня, а сыновья — конкретные значения чисел из этого интервала. Графическое изображение такого дерева показано на рис. 5.
Рис. 5. Дерево для представления числа
Тогда общее число вариантов (элементов множества) будет
Ь _ а
w(Aj) =
А
Множество значений А^ может быть представлено деревом И-ИЛИ. Рассмотрим несколько наиболее распространенных примеров. Если А — это дата, то ее можно представить деревом И-ИЛИ (рис. 6)
Рис. 6. Дерево И-ИЛИ для представления даты
Здесь при описании даты год представлен некоторым числовым интервалом. Например, 1950— 2050, Д=1. Тогда общее число вариантов может быть представлено формулой
ю(Дата) = ю(день) ■ ю(месяц) ■ ю(год) .
Аналогично может быть представлен атрибут «время».
3. Пример организации защищенного архива
Рассмотрим применение данного подхода для организации архива удостоверяющего центра с историями сертификатов открытого ключа [3]. Структура такого архива определяется атрибутами полей stdat стандарта сертификата x.509. Перечислим их: C (страна), L (размещение), ST (штат или провинция), O (организация), OU (подразделение), CN (фамилия, имя, отчество), STREET (адрес), E (электронный адрес).
На основе данного стандарта каждый удостоверяющий центр формирует свои собственные атрибуты полей. Например, в поле CN могут быть занесены паспортные данные, номер свидетельства ИНН, номер пенсионного свидетельства и т.д. Для разделения архива на две части необходимо стандартные атрибуты представить в виде дерева И/ИЛИ (рис. 7).
Далее рассматриваем структуру каждого атрибута. Если это атрибут C (страна), то соответствующий домен можно представить простым справочником. Если это атрибут CN, то для него можно задать некоторую структуру. Например, CN = {фамилия, имя, отчество, номер свидетельства ИНН}.
Рис. 7. Дерево И-ИЛИ для атрибутов сертификата
Рассмотрим подробнее домены для построения CN. Уже имеются достаточно большие справочники по именам и фамилиям в Интернете. Так, например, одна из самых объемных баз имен СССР насчитывает около 8000, база фамилий — около 170000 [4]. Очевидно, что число отчеств не будет превышать числа имен. Это говорит, что размеры доменов не такие большие. Предположим, что мощность доменов будет прирастать 5% в год, тогда для доменов имен, отчеств и фамилий необходимо зарезервировать 8000, 8000, 170000 записей дополнительно. Тогда общее число кортежей будет:
ю(ФИО) _ ю(имя) • ю(отчество) • ю(фамилия) _ 16000 х 16000 х 340000 _ 8704 • 1010 .
Аналогичная ситуация будет для адресов: город, улица, номер дома, почтовый индекс.
Мощности доменов будут измеряться 104 -106 . Тогда размеры кортежей возрастут:
n
w(root) _ У Wk ,
k _1
где n — общее число доменов; Wk — мощность k-го домена. Предположим, что n = 15.
С учетов вышеизложенного
w(root) » 10100.
Тогда для представления кода кортежа полученного алгоритмом Rank, необходимо 100 байт при байтовом представлении десятичных цифр, 50 байт при двоично-десятичной системе кодирования, или 333-битовое число.
8
Таким образом, если база данных насчитывает 10 кортежей, то объем ее не будет превышать 1010 байт.
4. Обобщенная структура архива
Обобщенная структура архива показана на рис. 8.
Основные модули и подсистемы:
1)	подсистема ввода сертификата — обеспечивает ввод полей сертификата;
2)	подсистема поиска — обеспечивает контекстный поиск в архиве;
3)	подсистема управления доменами — обеспечивает поиск, занесение заданных значений полей;
4)	модуль Rank — обеспечивает формирование номера (кода) для данного сертификата;
5)	модуль Generate — обеспечивает получение номеру (коду) в базе данных формирование соответствующего кортежа сертификата;
6)	Idxk — индексный файл для организации поиска;
7)	Base — база данных, хранящая коды кортежей;
8)	D(K) — домен, хранящий значения атрибута K (C,L,ST,O,OU,CN);
9)	Si — кортеж сертификата;
10)	пыж. - код сертификата.
Рассмотрим работу системы по обобщенной схеме, представленной на рис. 8. Внесение сертификата в архив производится следующим образом: значения полей сертификата заполняются в системе ввода. Далее вызывается модуль Rank, который в соответствии с алгоритмом нумерации варианта, строит вариант, находит значения соответствующих полей в доменах. Если значение в домене найдено, то соответствующий номер возвращается в Rank, если нет, то данное значение заносится в домен и его номер возвращается в Rank. Из полученных номеров полей сертификата формируется код сертификата. Если такого кода не существует, то код записывается в базу данных Base и в соответствии с ключами производятся записи в индексные файлы.
Подсистема поиска организована следующим образом. Из множества атрибутов сертификата выделяются подмножества, по которым формируются индексные файлы, в которых, в частности, хранятся ссылки на коды сертификатов в базе Base. При необходимости просмотреть значения полей сертификата передается код сертификата numi в модуль Generate, который производит получение сертификата на основе алгоритма генерации варианта в дереве И-ИЛИ.
Рис.8. Структура архива
Подсистема управления доменами обеспечивает управление доменами, представленными в виде справочников. Например: справочник имен, справочник фамилий, справочник организаций, справочник городов, справочник названий улиц. Поскольку для формирования кода сертификата необходимо знать фиксированный размер справочника, то размер следует установить в соответствии с выражением
<Размер справочника>=<текущий размер>+&* <число новых за год>, где k — количество лет, на которые рассчитан срок активной работы архива.
Подсистема управления доменами может быть распределенна и реализована на федеральном уровне. За каждый домен может отвечать отдельная организация, которая обеспечивает эффективное управление данным доменом.
Основные выводы
Такой подход к созданию архивов обеспечивает:
1.	Создание условий повышения уровня защищенности, поскольку информация сертификата разделена на части, каждая из которых не дает возможность получить доступ к сертификату.
2.	Экономический эффект, поскольку размер базы данных уменьшается за счет того, что основная информация хранится в доменах.
Литература
1.	Блейкли Г.Р., Кабатянский Г.А. Обобщенные идеальные схемы, разделяющие секрет, и матроиды // Проблемы передачи информации. 1997. — Т. 33, вып. 3. — С. 102—110.
2.	Кручинин В.В. Методы построения алгоритмов генерации и нумерации комбинаторных объектов на основе деревьев И/ИЛИ. - Томск: «В-Спектр», 2007. - 200 с.
3.	Шелупанов А.А. и др. Основы информационной безопасности. — М.: Горячая линия — Телеком, 2006. — 544
с.
4.	http://familii.jino-net.ru/
Кручинин Владимир Викторович
К.т.н, зав. лабораторией инструментальных систем моделирования и обучения, ТУСУР
Тел.: 45 10 00
Эл. почта: kru@tcde.ru
Шелупанов Александр Александрович Д.т.н., проф., зав. каф. КИБЭВС, ТУСУР Тел.: 41 34 26
V.V. Kruchinin, A.A. Shelupanov
Approaches to designing protected archives based on secret division
Approaches to creation of the protected databases, based on division of relational tables into two parts are considered: coding of relations and domains set by OR/AND trees. The generalized structure of system based on such approach is resulted. Rough estimates of the sizes of domains are given.

=====



﻿Polovko Ivan Yur’evich
Taganrog Institute of Technology - Federal State-Owned Autonomy Educational Establishment of Higher Vocational Education “Southern Federal University”.
E-mail: ivan.polovko@gmail.com.
2, Chexova street, Taganrog, 347928, Russia.
Phone: +78634371905.
Abramov Evgeny
E-mail: abramoves@gmail.com.
УДК 004.732.057
Н.Е. Горло, О.Ю. Пескова
ПОДХОДЫ К ПОСТРОЕНИЮ ЗАЩИЩЕННОЙ СИСТЕМЫ УПРАВЛЕНИЯ КОНТЕНТОМ
Рассмотрены основные подходы к построению защищенной системы управления контентом с упором на разработку сайтов для поддержки электронных библиотек. Представлена разработанная система управления контентом электронных публикаций, которая обеспечивает функции регистрации, аутентификации, разграничения доступа, публикации и редактирования материалов, защищенное хранение пользовательских данных.
Электронные библиотеки; CMS; аутентификация и разграничение доступа.
N.E. Gorlo, O.Yu. Peskova
APPROACHES TO THE CONSTRUCTION OF PROTECTED CONTENT
MANAGEMENT SYSTEM
The paper discusses the main approaches to the construction of secure content management systems, with emphasis on the development site to support digital libraries. The developed content management system of electronic publications, which provides the functions of registration, authentication, access control, publishing and editing of materials protected storage of user data.
Digital libraries; CMS; authentication and access control.
Введение. В наше время публикации все чаще появляются не на бумажных носителях, а в глобальной сети Интернет. Огатьи располагаются на специализированных порталах, на сайтах учебных заведений, персональных страницах авторов. Достоинство электронной публикации прежде всего в том, что она дает возможность автору постоянно развивать, дополнять и править свой материал - в соответствии с собственным развитием и с критическими комментариями и рецензиями на выложенный в открытый доступ материал. Кроме того, электронная публикация дает возможность использовать элементы мультимедиа, перекрестные ссылки и другие элементы, позволяющие автору максимально полно и доступно представить свои идеи. Доступ к выложенным в сеть материалам открыт миллионам читателей благодаря поисковым сервисам. Поэтому не удивительно, что в сети постоянно появляются новые специализированные ресурсы, предназначенные для размещения и рецензирования научных публикаций (например, сайт научных публикаций сотрудников Российской академии наук www.ras.ru, журнал научных публикаций аспирантов и докторантов www.jumal.org), и для каждого нового участника «научной паутины» возникает закономерный вопрос - строить ли сайт на основе уже существующей системы управления контентом (CMS) или разработать свой собственный движок.
Существует большое количество универсальных систем управления контентом, и во многих случаях их использование оправдано, но собственная CMS web-сайта обладает многими преимуществами - особенно для небольших систем, таких, например, как электронная библиотека учебного заведения или факультета. Ее архитектуру можно спроектировать в зависимости от предъявляемых требований и задач, а при необходимости дополнять впоследствии сторонними модулями или же собственными разработками. Большим плюсом является и сложность взлома собственной CMS (естественно, качественно выполненной), так как для взлома уникальной, нигде больше не установленной системы управления контентом злоумышленнику будет недоставать информации. Например, для распространенных движков существует богатый набор так называемых эксплоитов, с помощью которых злоумышленник может получить пароли от администраторской панели. Поэтому собственная CMS может оказаться надежнее, чем стандартная. Также необходимо задуматься и о системных ресурсах. Большинство функций стандартной CMS не используется, поскольку готовые движки рассчитаны на удовлетворение потребностей максимально широкого круга пользователей. Все неиспользуемые функции занимают место на диске, вынуждая пользователя покупать более дорогой хостинг.
В данной работе рассматриваются основные подходы к построению собственной системы управления контентом для библиотеки электронных публикаций, позволяющей авторам размещать на сайте свои публикации, управлять ими, получать рецензии и комментарии.
Выбор технологии и функционала системы электронных публикаций. Перед началом разработки необходимо решить, будет ли использована технология статических или динамических web-сайтов. Статический web-сайт - это набор связанных гиперссылками страниц, созданных на языке разметки ИТМЬ. На страницах статического web-сайта содержатся вместе и контент, и дизайн. У этого факта имеются негативные последствия, такие как трудоемкость публикации новых документов или редактирования существующих. Серьезной проблемой является и изменение архитектуры и представления web-сайта, так как этот процесс включает в себя изменение всех опубликованных страниц. Также на статических сайтах трудно осуществимы регистрация и аутентификация посетителей, назначение прав доступа пользователей к различным ресурсам web-сайта, возможность обратной связи. В таком случае не обойтись без программирования, так как включение скриптов решает не все проблемы. Динамические сайты для решения поставленной задачи более предпочтительны. Их принцип работы заключается в следующем: пользователь (и/или администратор) системы добавляет информацию на web-сайт, которая сохраняется в БД или файлах, затем посетитель web-сайта получает сохраненную информацию посредством web-браузера. Вид отображения информации зависит от представления (шаблона). Схема получения информации с динамического web-сайта показана на рис. 1.
Можно выделить следующие функциональные требования, необходимые и достаточные для большинства СМ8 электронных публикаций:
Для пользователя:
♦	регистрация и авторизованный доступ к ресурсу;
♦	публикация материалов как путем загрузки готовых файлов, так и с использованием встроенного редактора; возможность редактировать их (изменять текст, название, переносить в другой раздел), если у пользователя достаточен уровень привилегий;
♦	рецензирование статей, если у пользователя достаточен уровень привилегий;
♦	просмотр опубликованных статей, как открытых для всех, так и открытых только зарегистрированным пользователям, добавление комментариев к опубликованным материалам;
♦	поиск материалов по ключевым словам;
♦	подписка на новости;
♦	возможность восстановления пароля;
♦	редактирование личной информации.
Рис. 1. Динамический сайт с CMS
Для администратора:
♦
авторизованный доступ к администраторской части; назначение прав доступа пользователей к различным ресурсам системы; добавление, удаление, редактирование пользовательских учетных записей; добавление, редактирование, удаление информации, содержащейся в БД, в частности добавление и удаление разделов публикаций, редактирование и удаление публикаций; администрирование системы.
Функции безопасности:
♦	защита паролей;
♦	защита от флуда и автоматической регистрации;
♦	проверка корректности введенных данных;
♦	защита БД от атак;
♦	защита автологина.
Каждая функция может быть реализована различным способом. Например, регистрацию пользователя целесообразно проходить в несколько этапов. Сначала пользователь заполняет регистрационную форму и проходит САРТСНА-тест, позволяющий отсечь либо хотя бы резко сократить количество «роботов» при регистрации. Затем на его е-шаП-адрес приходит письмо с кодом активации. После ввода кода активации в специальное поле на странице системы, пользователь получает доступ к ресурсам сайта.
На рис. 2 показана возможная функциональная схема системы электронных публикаций.
Взаимодействие с системой электронных публикаций осуществляется при помощи сверхтонкого клиента, в качестве которого выступает web-браузер. Обработку информации и формирования ответов (в виде ИТМЬ-страниц) будет осуществлять сервер подсистемы.
Разработанная нами система управления контентом представляет собой открытую систему с web-интерфейсом, выполненную по схеме двухуровневого программного комплекса, т.е. информация, находящаяся в базе данных, выбирается дополнительной программной утилитой (расширением web-сервера, в данном случае это интерпретатор языка динамического формирования ИТМЬ-страниц), формирующего окончательный ИТМЬ-код, который web-сервер передает клиенту, как показано на рис. 3.
Рис. 2. Функциональная схема системы электронных публикаций
Рис. 3. Использование технологий динамического web-сайта
Реализация функций безопасности. Особое значение имеет надежная защита системы. Хотя конфиденциальных данных в нашей системе не так уж много (особенно, если все публикации сайта выложены в общий доступ), хакерская атака может привести к потере данных, вход от лица другого пользователя может привести к компрометации этого пользователя, в конце концов, сам сайт может быть «подменен». Рассмотрим реализацию основных функций безопасности, которые обязательно должны быть предусмотрены в CMS электронных публикаций.
1.	Разграничение доступа. В нашей системе электронных публикаций предусмотрено 4 уровня привилегий, т.е. фактически реализована упрощенная мандатная модель разграничения доступа. Количество уровней может отличаться в разных системах, в зависимости от требований заказчика и функционала разрабатываемого сайта.
В зависимости от уровня пользователи имеют разный доступ к функциям и модулям CMS. Каждый модуль и функция CMS имеют свой уровень доступа (от 1 до 4). После авторизации пользователя его уровень доступа сравнивается с уровнем модуля или функции, к которым пользователь пытается получить доступ; если уровень пользователя больше уровня модуля, то пользователю разрешается доступ, а если меньше - запрещается.
2.	Защита пароля. Шифрование. Никто, включая администратора, не должен знать пароль пользователя от его учетной записи. Поэтому для защиты пароля используется специальный алгоритм хеширования. Хеширование - это односторонняя функция, которая каждой введенной строке ставит в соответствие хеш-строку, длина которой никак не зависит от длины исходной строки и полностью определяется используемым алгоритмом хеширования (в нашем случае используется алгоритм хеширования md5). Односторонность хеширования означает, что по его результатам невозможно восстановить исходную строку, можно только подобрать коллизии, т.е. строки, хеширование которых дает нужный результат. На первый взгляд кажется невозможным перебрать огромное количество комбинаций, которое зависит только от длины пароля. Но у большинства пользователей пароль представлен цифрами, словарными словами и другими простыми комбинациями символов, поэтому задача упрощается. Кроме того, существуют сервисы, которые хранят терабайты хешей паролей. Поэтому в нашей системе пароль хешируется с добавлением нескольких случайных символов (так называемая «соль», хорошо знакомая по схеме аутентификации в Unix-системах). Соль можно вычислить, зная несколько настоящих паролей, но это крайне затруднительно. Взломать такой пароль методом перебора за разумное время без использования специализированных распределенных вычислительных систем практически невозможно.
Для минимальной защиты пароль должен быть не меньше 6-8 символов. Поэтому при регистрации должна проверяться длина пароля (минимальное значение устанавливается в файлах конфигурации).
3.	Безопасность автологина. Для того чтобы при работе в браузере запоминался логин и пароль пользователя, используется механизм cookie. Это информация, запоминаемая браузером и предъявляемая для опознания по требованию сервера. Можно записать в cookie хэш пароля и при авторизации запрашивать пароль не из текстового поля, а сразу из cookie. Но любая информация, содержащаяся в cookie, уязвима. Поэтому нельзя заносить туда пароль даже в хешированном виде. Для решения этой проблемы сам хеш пароля будет храниться в базе, а для автологина будет использоваться хеш псевдаслучайной строки, который будет записываться в cookie и в специальное поле в таблице данных пользователя.
4.	Защита от автоматических регистраций и спама. Для защиты от спама, отправления сообщений программами-роботами и множественных автоматических регистраций используется так называемая CAPTCHA.
CAPTCHA - это аббревиатура от выражения «Computer Aided Public Turing test to tell Computers and Humans Apart». Фактически, это тест Тьюринга для отличения человека от программы - задача, которую легко может выполнить человек, но которую невозможно или крайне трудно научить решать компьютер. Иногда CAPTCHA называют обратным тестом Тьюринга. Стандартный вид CAPTCHA -зашумленное случайное число, слово или иная надпись, которую пользователю
нужно прочитать и ввести прочитанный результат. Также существуют и другие реализации CAPTCHA. Например, требуется ввести не одно слово, а несколько или найти общий элемент, присутствующий на четырех изображениях, а также сказать о содержимом искаженного рисунка. Для людей с плохим зрением существуют звуковые тесты или задачи, требующие логического мышления.
На данный момент уже существует большой выбор среди производителей CAPTCHA. Этим занимаются как гиганты на рынке программного обеспечения, так и отдельные программисты. От квалификации производителя зависит вероятность обхождения теста. На качество защиты влияет правильное внедрение CAPTCHA. Часто очень хорошего качества тест можно легко обойти, потому что он используется без соблюдения политики безопасности.
Существует множество алгоритмов для распознавания CAPTCHA, поэтому одним из эффективных способов защиты является самодельная CAPTCHA. Писать анализатор для одного сайта бывает довольно хлопотно и накладно, так что некоторое время такая CAPTCHA будет являться хорошей защитой.
Алгоритм создания CAPTCHA в общем виде следующий:
1)	создание строки из случайных символов;
2)	создание пустого изображения или загрузка фона из файла;
3)	вывод на этом изображении помех (случайные точки, линии);
4)	вывод строки на этом изображении;
5)	сохранение этой строки в сессии;
6)	показ изображения.
Но может быть использован и один из стандартных вариантов построения CAPTCHA.
5.	Защита от XSS и изменения формы. XSS, или так называемый «межсай-товый скриптинг», возникает, когда в генерируемые сервером страницы по какой-то причине попадают пользовательские скрипты. Специфика подобных атак заключается в том, что вместо непосредственной атаки сервера они используют уязвимый сервер в качестве средства атаки на клиента.
Злоумышленник публикует в формах на атакуемом сайте скрипт, например на языке JavaScript. Затем этот скрипт выполняется при открытии страниц пользователями web-сайта. Так как этот скрипт выполняется в браузере у пользователя, то он имеет доступ к информации в его cookie, а также может производить на сайте действия от имени пользователя, если тот авторизован, например, такие, как чтение, запись или удаление сообщений. В частности, если в форму для ввода пользовательских данных ввести код <script>alert(document.cookie)</script> и в системе отсутствует защита от подобных атак и такой текст появится в браузере в первозданном виде, то этот скрипт будет выполнен, и любой, кто откроет эту страницу, подвергнется XSS-атаке - будет получено содержимое файла cookie для данного сайта. А если вместо безобидного alert() поставить другой скрипт, который отправит эти данные на сайт-приемник (сниффер), то хакер сможет использовать их по своему усмотрению. Продемонстрированные действия ни в коем случае нельзя допускать, так как содержимое cookie - собственность пользователя и владелец сайта несет за нее ответственность. Кроме того, получив с помощью этой атаки нужный уровень доступа, хакер сможет удалить или изменить ценную информацию на самом сайте.
XSS может угрожать системе электронных публикаций, так как в ней предусмотрены регистрация и публикация информации пользователей, т.е. использование информации, вводимой пользователем. Также опасность может угрожать и администраторскому интерфейсу, так как в нем есть модули, предназначенные для просмотра данных, поступающих от посетителей сайта, например сообщения из форм обратной связи.
Основным способом противодействия XSS-атакам является обработка пришедших извне и публикуемых на сайте данных. Как правило, достаточно заменить символы "<" и ">" на "&lt;" и "&gt;" соответственно, а также кавычки и амперсанды с помощью функции htmlspecialchars(), при этом введенный посетителем текст теряет HTML-оформление, а содержащиеся в нем скрипты утрачивают вредоносность. В нашей CMS электронных публикаций обработка выполняется специальной функцией-оберткой htmlChars().
6.	Защита от SQL-injection. SQL-injection используется для атаки web-сайтов, работающих с базами данных. Если в web-сайте имеется возможность вводить данные пользователем и если в SQL-запросах используются необработанные данные, то велика вероятность внедрения вредоносного SQL-кода.
SQL-запросы используются для извлечения, добавления, удаления и модифицирования информации из БД. Многие современные web-сайты используют скрипты и SQL для динамического формирования содержимого страницы. Без надлежащих мер защиты такой код может быть успешно выполнен на сервере.
Инъекция SQL является широко распространенным дефектом безопасности в Интернете, легко используется без специальных программ и не требует глубоких технических знаний. Использование этой уязвимости дает путь к большим возможностям, таким как:
♦	кража данных;
♦	отказ в обслуживании;
♦	подмена или уничтожение данных;
♦	другие случаи и намеренья.
Если есть необходимость (а она есть почти всегда) в текст запроса подставить данные, приходящие от пользователя, то очень высока вероятность, что в этом тексте окажутся несанкционированные SQL-команды. Это может нарушить работу приложения. Но самое страшное, что этим широко пользуются взломщики. Поэтому все данные, подставляемые в запрос, должны обязательно обрабатываться соответственным образом.
Продемонстрируем защиту CMS на примере.
В случае, если в системе имеются статьи только для просмотра зарегистрированными пользователями, то незарегистрированные не имеют доступа к ним.
Если не выполнять обработку данных хотя бы в одном запросе и если в тело запроса попадет не идентификатор статьи, а другая команда, то запрос изменится и результат будет непредсказуемым. Например, если в адресной строке набрать http://el/?page=main&rem=fulls&id=1+OR+1=1+--, то автоматически произведется доступ к закрытой статье. Доступ произойдет потому, что вместо нужного запроса получится совершенно другой, в котором есть команда OR 1=1 , которая заставит вывести все статьи, а также экранирование конца запроса -- AND 'access' = 0, что открывает доступ к закрытым статьям. Этот запрос выводит последнюю статью, и путем изменения идентификатора можно просмотреть любую статью. Для того чтобы избежать подобных проблем, числовые данные нужно приводить к типу integer функцией intval() или конструкцией (int).
Точно так же можно получить доступ в тело запроса, когда в запрос подставляются необработанные строковые данные. Дело в том, что они обрамляются апострофами, которые разграничивают данные и команды. Но если в тексте будет находиться апостроф, то все, что после него, попадет в тело запроса. Поэтому их нужно экранировать. Допустим, не происходит обработки данных, которые вводятся при авторизации пользователя. В таком случает, зная только один логин (а это не приватная информация), можно свободно получить доступ к любому аккаунту, вставив в поле «логин» текст «Логин’ OR 1=’1» . В итоге получится со-
вершенно другой запрос, где пароль становится необязательным атрибутом. Поэтому все внешние строковые данные должны обрабатываться функцией mysql_real_escape_string(), которая экранирует апострофы. Если данные обработаны, то введенный запрос не будет выполнен.
Т. Защита от PHP-injection. PHP-инъекция предполагает выполнение постороннего кода на сервере web-сайта.
Для того чтобы осуществить такую атаку, нужно загрузить на сервер исполняемый файл. Возможным это становится тогда, когда при загрузке не проверяются расширения файлов. Механизм очень прост. Достаточно поместить в любое место скрипт eval ($_POST[‘hack’]), и тогда хакер спокойно загрузит свой скрипт с расширением php и получит полное управление сайтом. Для этого достаточно сделать форму типа
<form action="http://my cms/photo/30.php" method="post"> <textarea name="hack" cols="40"	rows="10"></ exta-
rea><br>
<input name="" type="submit">
</form>
и ввести в поле формы текст unlink(‘../index/php’); после выполнения кода главная страница системы публикаций пропадет. Поэтому нужно обязательно проверять загружаемые файлы на допустимые типы загрузки.
8. Защищенность системных файлов. Одним из главных аспектов безопасности системы является правильно организованная структура, а также текущие и глобальные настройки конфигурационного файла. Необходимо предусмотреть защиту файлов конфигурации, чтобы хакер не проник в них и не внес нежелательные изменения, если, к примеру, случайно окажется включенной директива register_globals. Для этого необходимо установить константу define ('IRB_KEY', true) в файле index.php, которая отвечает за доступ к файлу. Каждый файл php должен содержать проверку на наличие этой константы. Если в адресной строке будет прописан путь до конфигурационного файла, то сервер выдаст ошибку и остановит выполнение скрипта. Файл .htaccess также должен быть правильно настроен. Должны быть отключены глобальные переменные и magic_quotes_gpc (магические кавычки), регистрация глобальных переменных, а также вывод ошибок на экран.
Заключение. В работе представлены основные подходы к построению систем управления контентом библиотеки электронных публикаций на примере разработки, которая обеспечивает функции регистрации, аутентификации, разграничения доступа, публикации и редактирования материалов, защищенное хранение пользовательских данных. В качестве практического результата работы была разработана собственная CMS электронных публикаций, отвечающая представленным требованиям.
Выделим следующие особенности и конкурентные преимущества разработанной CMS:
♦	возможность интеграций в структуру различных дополнительных модулей благодаря понятной структуре системы;
♦	использование готовых модулей для проектирования CMS другой направленности;
♦	простота шаблонов и их легкое настраивание;
♦	скорость исполнения и ресурсобережливость (в оперативную память грузятся только те файлы, которые действительно принимают участие в формировании данной страницы);
♦	прозрачность кода.
Кроме того, система управления электронными публикациями отвечает всем современным требованиям по безопасности и предоставляет защиту от основных угроз. Были проведены эксперименты, которые показали устойчивость разработанной системы к перечисленным угрозам и ряду сетевых атак.
Представленная система электронных публикаций является модульной системой, что позволяет с минимальной настройкой использовать проект для создания других подобных комплексов.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	М. Дизайн:	Управление	сайтом	[электронный	ресурс]	/	Режим	доступа:
http://mdesign.ru/publications/cms/40b7504e10e58?start=, дата обращения: 03.12.2010, свободный. - Загл. с экрана.
2.	Open Questions Blog Optimizer: CMS и все о них [электронный ресурс] / Режим доступа: http://www.oqbo.ru/read.php?block=25, дата обращения: 03.11.2010, свободный. - Загл. с экрана.
3.	КолисниченкоД.И. Движок для вашего сайта. - СПб.: БХВ-Петербург, 2008. - 368 с.
Пескова Ольга Юрьевна
Технологический институт федерального государственного автономного образовательного учреждения высшего профессионального образования «Южный федеральный университет» в г. Таганроге.
E-mail: poy@tsure.ru.
347928, г. Таганрог, пер. Некрасовский, 44.
Тел.: 88634312018.
Горло Надежда Евгеньевна
E-mail: serebro@list.ru.
Peskova Olga Yur’evna
Taganrog Institute of Technology - Federal State-Owned Autonomy Educational Establishment of Higher Vocational Education “Southern Federal University”.
E-mail: poy@tsure.ru.
44, Nekrasovskiy, Taganrog, 347928, Russia.
Phone: +78634312018.
Gorlo Nadezda Evgen’evna
E-mail: serebro@list.ru.
УДК 004.732.057
М.Л. Лопатин, О.Ю. Пескова
АНАЛИЗ ЗАЩИЩЕННОСТИ СОВРЕМЕННЫХ СИСТЕМ УПРАВЛЕНИЯ
КОНТЕНТОМ
Представлено понятие систем управления контентом (CMS). Рассмотрены основные свободно распространяемые CMS, активно применяемые для создания и управления сайтами: Joomla!, WordPress, Drupal. Рассмотрены их основные характеристики, особое внимание уделено вопросам безопасности, таким, как особенности подсистем безопасности, наиболее критичные уязвимости, возможные атаки на CMS. Приведены рекомендации по настройке и применению рассмотренных систем управления контентом, позволяющие повысить защищенность клиентских систем, построенных на их основе.
Сетевые уязвимости; системы управления контентом (CMS); динамическое управление сайтом.

=====



﻿УДК 681.5
^СТЕМА АВТОМАТИЧЕСКОГО РЕГУЛИРОВАНИЯ ДАВЛЕНИЯ АЗОТА В ЕМКОСТИ ДЛЯ ХРАНЕНИЯ КАТАЛИЗАТОРНОГО КОМПЛЕКСА С ДВУМЯ УПРАВЛЯЮЩИМИ ВОЗДЕЙСТВИЯМИ
Д.Г. Бурмантов, С.В. Ефимов, В.И. Коновалов, Е.А. Кочегурова, В.В. Курганов
Томский политехнический университет E-mail: vk@aics.ru
Предлагается вариант системы автоматического регулирования давления азота в ёмкости для хранения катализаторного комплекса. Особенностью системы является использование одного регулятора с двумя управляющими воздействиями и применение гистерезиса при формировании управляющего сигнала.
Ключевые слова:
Автоматическое регулирование, избыточность вектора управления. Key words:
Automatic control, command vector redundancy.
При внедрении систем автоматического управления промышленными объектами зачастую возникают особенности, не рассматриваемые в классической теории управления. Опыт практической реализации таких систем может быть интересен для разработчиков и исследователей, работающих в области автоматического управления.
Рассмотрим возникшую на практике задачу автоматизации регулирования давления в ёмкости для хранения катализаторного комплекса на производстве полипропилена на Томском нефтехимическом комбинате (ТНХК). Катализаторный комплекс хранится в емкости под давлением азота. Он закачивается в ёмкость и откачивается из неё в соответствии с ходом технологического процесса, при этом давление азота должно оставаться постоянным. Для стабилизации давления используются два регулирующих клапана. Первый обеспечивает подачу азота с избыточным давлением в ёмкость (азотный клапан), второй служит для стравливания азота в атмосферу (клапан сдувки). Объемный расход азота через эти клапаны обозначим соответственно и Для поддержания заданного давления используются оба клапана. Управление клапанами осуществляется вручную.
Необходимо построить систему автоматического управления этим объектом на базе промышленных микропроцессорных контроллеров (МПК). Так как такт работы МПК несоизмеримо мал по сравнению со временем переходных процессов в
объекте управления, то будем рассматривать систему управления как непрерывную. Тем более, что стандартное программное обеспечение МПК в виде функциональных блоков описано на языке непрерывной математики.
С точки зрения современной теории управления данная система автоматического регулирования (САР) является системой с избыточной размерностью вектора управления [1], т. к. для управления одной выходной переменной - давлением Р - используются два управляющих воздействия: и Общая структурная схема системы управления приведена на рис. 1, где СУ - система управления; ОУ - объект управления; РЗДН - задание по давлению азота в емкости; е - ошибка регулирования; / - внешнее возмущение, определяемое поступлением в емкость и расходом из неё катализатор-ного комплекса.
Особенностью предлагаемой системы является использование одного регулятора, который в конкретный момент времени управляет только одним расходом - либо При этом упрощается работа оператора, сокращается число панелей управления регулирующими клапанами на мониторе.
Рассмотрим подробнее выбор закона регулирования. К наиболее распространенному типу промышленных регуляторов относятся регуляторы, использующие пропорционально-интегрально-дифференциальный закон (ПИД-закон) [2, 3]:
Р
Рис. 1. Система управления давлением азота
и«) = Кп
) + — \£{т)сСт + Тд
ъ, ' д л
где ы(0 - управляющее воздействие, формируемое регулятором; е(0=РЗДН-Р(/); КП, ТИ, ТД - настройки регулятора (коэффициент пропорциональности, постоянные интегрирования и дифференцирования соответственно).
Известно, что модель объекта управления в САР давления в ёмкости описывается апериодическим звеном первого порядка [4] с передаточной функцией W(s)=K/(Ts+V), где К - статический коэффициент передачи, Т - постоянная времени объекта. Входная переменная - расход газа на нагнетании, выходная - давление в ёмкости.
Тогда при использовании ПИД-закона регулирования передаточная функция замкнутой системы будет иметь следующий вид:
К п К (ТИТД л2 + Ти д +1)_
Ж (л) =
(Кп КТиТд + ТиТ )л2 + (Кп КТи + Ти)л + Кп К
Такая система будет обладать усиленными форсирующими свойствами, что приведет к наличию скачков в управлении при изменении задания. Для ликвидации этого недостатка порядок числителя передаточной функции замкнутой системы можно понизить, используя пропорционально-интегральный закон (ПИ-закон) регулирования, при этом
Кп К (Ти л +1)
Ж (л) =
ТиТд2 + (Кп КТи + Ти)л + Кп К
Использо-
вание в системе управления только пропорциональной составляющей нецелесообразно, т. к. установившаяся ошибка в системе не будет равна нулю.
В соответствии с выбранным алгоритмом регулирования МПК рассчитывает управляющие воз-
действия в каждый такт времени: ыЩ, и[^+1], ... . Эти воздействия передаются на вход цифро-аналогового преобразователя (ЦАП), на выходе которого формируется сигнал в диапазоне 4... 20 мА. Выход ЦАП токовой петлей связан с двумя электропнев-мопреобразователями, управляющими азотным клапаном и клапаном сдувки.
До внедрения АСУ ТП на производстве полипропилена на ТНХК управление азотным клапаном и клапаном сдувки велось дистанционно с помощью одного ручного задатчика. Клапан азота открывался при значении выходного сигнала задат-чика более 12 мА, если сигнал менее 12 мА начинает открываться клапан сдувки, азотный клапан при этом полностью закрыт, рис. 2.
При автоматическом управлении вместо ручного задатчика используется ЦАП, управляемый МПК в соответствии с алгоритмом ПИ-регулирования. Управляющие воздействия 0Р и ^ формируются в зависимости от знака и величины ошибки регулирования е(/), рис. 3.
При практической реализации САР с алгоритмом ПИ-регулирования выяснилось, что в окрестности рабочей точки, когда Р(0«РЗДН и, соответственно, е(1)~0, происходит частое открывание то азотного клапана, то клапана сдувки, что недопустимо по требованиям технологии. Использование обычной зоны нечувствительности А, в пределах которой алгоритм регулирования обнуляет ошибку е(0, не позволило устранить этот недостаток полностью. Поэтому для уменьшения частоты срабатывания клапанов введена так называемая зона гистерезиса А1, А1>А. При попадании значений регулируемого параметра Р в эту зону, алгоритм регулирования работает по-разному, в зависимости от направления изменения значений Р. При выходе давления Р из зоны А в зону А1 отменяется обнуление
100
% открытия клапана
0	50
4 мА	12 мА
Рис. 2. Формирование управляющих воздействий с помощью ручного задатчика
100
20 мА
Выход ручного задатчика, %
Ток задатчика
ошибки регулирования, но «замораживается» значение управляющего воздействия: и[^] = и[^ч]. При выходе регулируемого параметра за пределы зоны А! ПИ-алгоритм формирует управляющее воздействие с учетом накопленных значений ошибки регулирования, что приводит к надежному открытию азотного клапана или клапана сдувки. При входе давления Р в зону гистерезиса со стороны Р>РЗДН+А;/2 или Р<РЗДН-А;/2 управляющее воздействие формируется по ПИ-закону вплоть до входа в зону нечувствительности А.
Qp, % 100
£min		^^ J £max
100
Qs, %
е(0
Рис 3. Формирование управляющих воздействий в зависимости от ошибки регулятора
С учетом этих модификаций формирование воздействий 0Р и ^ показано на рис. 4. Для удобства программирования в решающем правиле работы логической части системы управления используется не ошибка регулирования е(/), а значение регулируемой величины Р.
В зависимости от значения давления Р система управления либо формирует управление по ПИ-закону с подачей его на выход, связанный с клапаном дозировки азота QP (сигнал на выходе ЦАП больше 12 мА) или клапаном сдувки QS (сигнал на выходе ЦАП меньше 12 мА), либо выдает сигнал, равный 12 мА, при котором оба клапана закрыты. Процесс изменения управляющего воздействия на клапаны во времени иллюстрирует рис. 5. Стрелками показаны границы действия того или иного правила для формирования закона регулирования.
При настройке данной САР необходимо выбрать стандартные настроечные параметры ПИ-регулятора А, КП, ТИ, а также значения зоны Aj. Для системы регулирования давления в ёмкостях для хранения катализаторного комплекса на производстве полипропилена экспериментально были подобраны значения А=1 % и А= %, К=2, 7и=20 с.
Предложенная система управления была реализована на МПК Siemens и внедрена в эксплуатацию на ТНХК в 2009 г., что позволило автоматизировать процесс регулирования давления азота в емкостях для хранения катализаторного комплекса. Система может быть использована в системах управления хранением различных жидкообразных продуктов, находящихся в емкостях под «азотным дыханием».
Выводы
Предложена и апробирована на производстве полипропилена система автоматического регулирования давления азота в ёмкости для хранения ка-тализаторного комплекса.
+Д:/2
+Д/2 SP
-Д/2 -Д1/2
0
t
Рис. 5. Формирование управляющего воздействия на азотные клапаны; РУ - регулируемая величина; Б? - задание; 0, - выход регулятора; Р1 - уравнение по ПИ-закону
Система регулирования содержит один регулятор с двумя управляющими воздействиями по ПИ-закону регулирования на клапаны подачи азота с избыточным давлением и стравливания азота в атмосферу.
Модификация алгоритма управления с применением гистерезиса позволила исключить частое переключение управления с одного клапана на другой.
СПИСОК ЛИТЕРАТУРЫ
1.	Малышенко А.М. Системы автоматического управления с избыточной размерностью вектора управления. - Томск: Изд-во ТПУ, 2005. - 302 с.
2.	Ang K.H., Chong G., Li Y. PID control system analysis, design, and technology // IEEE Transaktions on Control Systems Technology. -2005. - V. 13. - № 4. - P. 559-576.
3.	Денисенко В.В. ПИД-регуляторы: принципы построения и модификации // Современные технологии автоматизации. -2006. - № 1. - С. 66-74.
4.	Эрриот Н. Регулирование производственных процессов. - М.: Энергия, 1967. - 480 с.
Поступила 29.03.2010 г.

=====



﻿УДК 658.27.004.5:681.3:338.001.36 Р.В. Мещеряков, А.А. Охотников
Система цифровой обработки радиометрических сигналов для неразрушающего контроля сложнопрофильных крупногабаритных изделий
Описывается постановка задачи разработки системы цифровой обработки сигналов. Предлагается архитектура аппаратурно-программной системы для неразрушающего контроля.
Ключевые слова: прибор, неразрушающий контроль, оборудование, поддержка принятия решений, обработка сигналов.
Введение
Обеспечение требуемого качества сложнопрофильных крупногабаритных изделий различного назначения предполагает собой проведение высокоточного анализа и использование современных методов и средств измерений. В настоящей статье под сложнопрофиль-ным крупногабаритным изделием будем понимать изделие, имеющее размер, превышающий «источник-детектор» более чем в 20 раз при одновременном количестве изменяемых параметров формы более 10. При этом точность позиционирования двигателя относительно неподвижной системы «источник - детекторы» составляет приблизительно 1 мм при продольном перемещении и 5 угловых минут при вращении, что соответствует линейному смещению внешней поверхности при вращении на 1,2 мм. Такой точности вполне достаточно, учитывая, что коллимационное отверстие детектора имеет размеры 20x60 мм.
Полноценный контроль сложнопрофильных крупногабаритных изделий связан с рядом проблем, требующих разработки новых методов, архитектур систем цифровой обработки радиометрических сигналов, и невозможен без учета новых данных о функциональных возможностях изделия и использования новейших технологических разработок, применяемых в радиоконтроле.
Вместе с тем остаются открытыми вопросы формирования архитектуры и внутренней согласованной системы обработки измеряемых данных [1]. Как правило, в системах обработки измеряемых данных, построенных по классическому принципу, разделяют несколько информационных потоков, ориентированных на человека-оператора и использующих типовые методы спектрального анализа. Вместе с тем авторами предлагается введение внутренней согласованности в систему обработки измеряемых данных. При этом используется опорный (несущий) радиометрический сигнал, позволяющий проводить синхронный с ним анализ на базе его гармоник.
Пример обрабатываемого сигнала
На рис. 1, а и б представлены нормированные результаты измерений сложнопро-фильных крупногабаритных изделий (по оси абсцисс - относительная координата, по оси ординат - относительная амплитуда сигнала). Особенностью получаемых данных является сложность интерпретации при отсутствии математического описания профиля изделия и его свойств в зависимости от рельефа и материала.
Относительная амплитуда
Относительная амплитуда
ajwvjwvjwla
1
0,9 0,8 0,7 0,6 0,5 0,4 0,3 0,2 0,1 0
0,00 0,10 0,20 0,30 0,40
0,50 0,60 0,70 0,80 0,90 Относительное время а
0,9 0,8 0,7 0,6 0,5 0,4 0,3 0,2 0,1 0
I
Ltjjh
т mpww f "гтт
0,00 0,10 0,20 0,30 0,40
б
0,50 0,60 0,70 0,80 0,90 Относительное время
Рис. 1. Результаты измерений: а - для профиля 1, б - для профиля 2
Совершенно оправданным является стремление ученых на современном уровне на стыке математики и компьютерных технологий комплексно решить проблему улучшения качества измеряемого сигнала при неразрушающем контроле.
Структура комплекса
Очевидно, что одним из решений данной проблемы может быть создание измерительного комплекса (рис. 2), включающего отдельно вынесенное устройство управления и обработки информации в качестве базового компонента измерительных комплексов. Поэтому была разработана внутренняя структура, представленная на рис. 3.
Рис. 2. Измерительный комплекс	Рис. 3. Обработка информации в измерительном комплексе
Детализация выполняемых функций представлена на рис. 4 и реализована в соответствии с алгоритмами [2].
Рис. 4. Структура программного комплекса на уровне блоков
Здесь t - время; k - номер канала; hc(t, Щ и hs(t, Щ - импульсные переходные характеристики фильтров; Pм - набор масок для определения периодичности структуры сигнала; S(t) - входной сигнал; F(t, Щ - мгновенные значения частоты сигнала; I(t, к) -интенсивности гармоник несущего сигнала [2]. Приведем назначение блоков:
Блок создания параметров для обработки сигналов необходим для расчета весовых функций h(t, к), формирования набора масок Pм(k).
Блок предварительной обработки сигналов обеспечивает выполнение свертки сигнала S(t) с весовыми функциями фильтров h(t, к).
Блок выделения параметров сигнала предназначен для вычисления массива значений интенсивностей I(t, к) и массива значений мгновенных частот несущего сигнала F(t, к).
Блок выделения аномальных участков сигнала осуществляет одновременную маскировку сигнала, сегментацию сигнала по наличию отклонений в периодической структуре измеряемого сигнала.
Блок выделения параметров аномальных сегментов сигналов выполняет определение номеров каналов ^ и вычисляет величину девиации частоты несущего сигнала.
Блок визуализации параметров сигнала позволяет сохранять полученные графики как в автоматическом, так и в автоматизированном режиме.
Блок анализа отклонений параметров сигнала содержит следующие модули:
1)	модуль для выделения аномальных участков сигналов;
2)	модуль для вычисления среднего отклонения относительных интенсивностей гармоник несущего сигнала;
3)	модуль анализа отклонений несущего сигнала, позволяющий оценивать динамику отклонения.
При помощи одновременной маскировки в частотной области выделяются информативные параметры сигнала [3]. Маскирующая функция определяется как свертка выходных сигналов системы фильтров с соответствующими весовыми коэффициентами. Информативными участками будут те, в которых реакция системы фильтров будет превышать значение маскирующей функции.
Таким образом, измеряемый сигнал разделяется на две составляющие. Первый вид: аномальные участки, уровень которых превышает допустимые показатели и свидетельствуют о том, что изделие не проходит итоговый контроль. Второй вид: участки, уровень сигнала в которых соответствует норме, или обнаружившиеся «отклики» особенностей сложного профиля измеряемого крупногабаритного изделия, но не являющиеся отклонением от заданных показателей качества.
Блоки предварительной обработки и выделения параметров сигнала базируются на алгоритмах, приведенных в таблице.
Основные алгоритмы обработки сигнала
№ п/п	Соотношение	Назначение
1	y(t,x) = z(t) ® h(t,x)	Фильтрация входного сигнала
2	I(t,x) = y(t,x)	Вычисление интенсивности
3	d , F(t,x) = — (arg y(t,x)) dt	Вычисление мгновенной частоты
4	Po(t,x) = если [y(t,x) - y(t,v,x) ® Wo(v,x) > 0, то 1, иначе 0	Одновременная маскировка
Примечание: г^) - входной сигнал; h(t,x) - импульсные переходные характеристики системы фильтров; Wo(x) - весовая функция одновременной маскировки; ® - интеграл свертки.
В качестве дополнительного сервиса предусмотрены опции сохранения результатов эксперимента.
Заключение
Разработанный комплекс может быть использован для измерения качества сложно-профильных крупногабаритных изделий. Сравнение полученных результатов с литературными данными доказывает работоспособность указанного комплекса [4]. В настоящее время проводятся работы по увеличению точности проводимых измерений, увеличению диапазона измеряемых параметров, выявлению типовых аномалий сигнала и сопоставлению их с дефектами изделий.
Литература
1. Арбузов С.М. Основы цифровой обработки сигналов / С.М. Арбузов, А.И. Солонина, Е.Б. Соловьева, Д.А. Улахович. - СПб: БХВ-Петербург, 2005. - 753 с.
2.	Сегментация и параметрическое описание речевого сигнала / В.П. Бондаренко, А.А. Конев, Р.В. Мещеряков // Изв. вузов. Приборостроение. - 2007. - Т. 50, № 10. -С. 3-7.
3.	Разрешающая способность набора фильтров, моделирующего слуховую систему человека / А.А. Конев, Р.В. Мещеряков // Акустика речи. Медицинская и биологическая акустика. Архитектурная и строительная акустика и вибрации. Аэроакустика: Сб. трудов XX сессии Российского акустического общества. - Т. 3. - М.: ГЕОС, 2008. - С. 23-26.
4.	Оценка эффективности счетного метода обработки информации в многоканальных радиометрических системах контроля / В.И. Солодушкин, А.А. Метель // Дефектоскопия. - 2005. - № 2. - С. 79-90.
Мещеряков Роман Валерьевич
Канд. техн. наук, доцент, доцент каф. комплексной информационной безопасности
электронно-вычислительных систем ТУСУРа
Тел.: (3822) 41-34-26
Эл. почта: mrv@keva.tusur.ru
Охотников Александр Александрович М.н.с. 911-й лаборатории 91-го отдела
ФГУП «Федеральный научно-производственный центр «Алтай», г. Бийск
Тел.: (3854) 30-15-72
Эл. почта: ohotnikovsan@mail.ru
R.V. Mescheriakov, A.A. Okhotnikov
Digital processing systems of radiometric signals for nondestructive test of complex-surface large-sized products
The problem of system engineering of signal digital processing is described. The architecture of hardware and software system for nondestructive test is suggested.
Keywords: device, nondestructive test, equipment, decision support, signal processing.

=====



﻿Тел.: 8 (917) 0996858.
Студент.
Kamanin Maksim Alekseevich
Astrakhan State Technical University.
E-mail: astradox@yandex.ru.
App. 53, 16, Kosmonavtov str., Astrakhan, 414057, Russia. Phone: 8 (917) 0996858.
Student.
УДК 681.3
O.M. Лепешкин
МЕТОДИКА РЕАЛИЗАЦИИ ФУНКЦИОНАЛЬНО-ДИСКРЕЦИОННОЙ МОДЕЛИ НА ОСНОВЕ СРЕДЫ РАДИКАЛОВ
Рассмотрен подход по разработке функционально-дискреционной модели, представлен принцип формирования нормализации проблемной области организации доступа на основе среды радикалов.
Информационная система; социотехнтеская система; функциональная ; ; .
O.M. Lepeshkin
METHOD OF FUNCTIONAL-DISCRETIONARY MODEL REALIZATION ON
THE BASIS OF RADICALS
In the paper the approach of functional-discretionary model developing is considered, the problem area normalisation formation principle of the access organisation on the basis of radicals is presented.
Information system; sociotehnical system; functional safety; the radical; discretionary access control
Понятие информационно-системной безопасности (ИСБ) сложной системы
[1]	является главной ее характеристикой. ИСБ включает в себя две составляющих
-	информационную безопасность и системную безопасность сложной системы.
Информационная безопасность является особого рода функциональной устойчивостью сложной системы, когда обеспечивается безусловное решение задач жизненного цикла системы вне зависимости от формы (от языка) представления входной информации и от полноты этой информации. Обеспечение информационной безопасности сложной системы реализуется, главным образом, путем постоянного использования символьного моделирования проблемной области системы и методов логического вывода. В терминах математической информатики это означает переход от операторов к ультраоператорам [2, 3].
Системная безопасность сложной системы - это безусловное сохранение ядра системы при решении любой частной задачи жизненного цикла. Другими словами, это сохранение системообразующих (жизненных) составляющих системы и тех , , ее системную целостность. Системная безопасность сложной системы - это постоянный учет и устранение конфликтов между ее составляющими и их связями, ко-
торые появляются при решении задач жизненного цикла системы, а также конфликтов между самой сложной системой и внешними к ней системами. Системная безопасность требует реализации системного подхода ко всей проблемной области сложной системы [1, 3, 4].
Разрушительные последствия нарушения функционирования сложных систем и человеческий фактор приводят зачастую к непредсказуемым последствиям для такой системы - это и многое другое говорят, что чем сложнее система, тем важнее для нее проблема обеспечения ИСБ в течение ее жизненного цикла.
Основной подход к обеспечению ИСБ сложной системы - это интеллектуализация такой системы. Интеллектуализация любой системы подразумевает ситуационное представление ее проблемной области и на основе этого оснащение отдельных составляющих системы и ее подсистем элементами искусственного ин-.
системы к изменяющимся внутренним и внешним условиям, возможность проводить диагностику, контроль, анализ и синтез отдельных составляющих системы и функционирования системы в целом с учетом последствий этого функционирования с целью обеспечения ИСБ на протяжении всего жизненного цикла системы.
, -теллектуальной надстройки, сложной системы, включающей:
1)	создание символьной модели всей проблемной области сложной системы, то есть картины мира системы, включающей саму систему, ее окружение и все проблемы жизненного цикла системы;
2)	создание специального информационно-программного оснащения этой модели (картины мира) средствами обеспечения ИСБ сложной системы. Целью такого оснащения является обеспечение ИСБ сложной системы при решении задач ее жизненного цикла путем моделирования, анализа и синтеза проблемной области системы, включая окружение системы, ее отдельных составляющих, ее характери, .
Термином “интеллектуализация” подчеркивается свойство такой надстройки
развиваться и расширять круг решаемых ею штатных задач ИСБ за счет обучения решению некоторых нештатных для нее задач. Чем больше разнообразных и более трудных нештатных задач может решать такая интеллектуальная система, тем более она интеллектуальная.
Основным способом обеспечения информационно-системной безопасности в условиях воздействия угроз и дестабилизирующих факторов является организация управления доступом к информационным ресурсам.
Из существующих в настоящее время подсистем управления доступом к информационным ресурсам [4] наибольшее распространение получили модели, построенные на основе матрицы доступа, в которой каждому субъекту $, • Д} пользователю, по определенным правилам предоставляется доступ к объектам 01, 01е0={ 01, — 01 }.
В подсистемах управления доступа на основе матрицы с фиксированными полномочиями при определении их полномочий для того, чтобы учесть динамику изменения состояния информационной системы, следует ориентироваться на пессимистический вариант развития событий, что приводит к существенному завышению требований к организации доступа и соответствующему снижению целево-,
, .
Внедрение процессного подхода на основе среды радикалов в системы безопасности требует пересмотра реализации моделей доступа, внедрение системного
принципа позволяет организовать доступ с учетом состояния и возможности реализации функций и задач системой.
Понятие радикала является главным понятием математической информатики
[2]	и, по-видимому, всей дискретной математики [3].
Под радикалом понимается любая функциональная система, имеющая два доступных извне состояния: активное и пассивное. Активный радикал функционирует согласно своему предназначению, а пассивный радикал нет. Он как бы вы.
радикалов.
-
нормализацией среды радикалов проблемной области. Нормализация проводится в . : уникумы и контейнеры.
Имя уникума начинается с символа ‘u’ (от слова «unicum») и содержит три индекса: u[1:*][2:*][3:*]smthunicum;. С помощью первого индекса идентифицируется тип уникального радикала, например: целое число; конечная десятичная ; ; ; системы; составляющая некоторой проблемной области. С помощью второго индекса идентифицируется экземпляр уникума определенного типа. С помощью третьего индекса идентифицируется модификация уникума. Допускается сокращенная запись вида usmthunicum;, usu;.
Определение: Уникум доступа uD определяется в системе как активный или пассивный элемент, имеющий функциональное предназначение F в виде определенного набора задач an: uD=F(an).
При организации процессного подхода обеспечение безопасности доступа основывается на нормализации в среде радикалов. Тогда среда доступна для уникума и записывается как ип^1Юп{щ, и2, ..., ип} , где u2=uD1^ uD2 при D1=D2.
С помощью понятия контейнера реализуется идея топологической фильтрации уникумов в среде радикалов. Если уникумы соответствуют компонентам проблемной области сложной системы, то контейнеры отвечают за их свойства. Кон-
( ), -дают выделенным свойством. В математической информатике контейнеру соответствует многоместное отношение или понятие, или многоместный предикатный символ.
Имя контейнера начинается с символа ‘C’ (от слова «container») и содержит три индекса: c[1:*][2:*][3:*]smthcontainer (допускается сокращенная запись: csmthcontainer;, csc;). Индексы контейнеров определяются аналогично индексам уникумов. Всякий контейнер, соответствующий многоместному отношению (пре), , отношение. Контейнер - способ задания связи определенного типа между радикалами.
Определение: Контейнер доступа CD определяется в системе функциональным предназначением F в виде определенного набора разрешенных к взаимодействию контейнеров Сп\ CD=F(Cп). На основе данного выражения можно описать среду доступа и для контейнера С, C^CD^C^ C2, ...,Сп}, где	C2=CD1^ CD2
при D1=D2.
Второй этап нормализации состоит в ультраоснащении среды радикалов. В среде радикалов вводятся три взаимосвязанных части: опорная среда, ультрасреда и терминальная среда. Опорная среда образуется из опорных радикалов -это уникумы и контейнеры возможных и присутствующих сущностей проблемной
, , . ультрарадикалов. Это системы анализа и синтеза, предназначенные для ИСБ-решения задач жизненного цикла системы. Ультрарадикалы - это продукции базы знаний проблемной области. Терминальная среда образуется из радикалов-исполнителей и радикалов-датчиков, осуществляющих связь между опорными радикалами и ультрарадикалами. Ультрасреда вместе с терминальной средой определяют так называемое ультраоснащение среды радикалов, предназначенное для ИСБ-решения задач жизненного цикла сложной системы, выявления и снятия конфликтов и системных нарушений целостности системы.
Для построения ультрасред будем использовать схемы специального вида,
1 2.
Ультраконтейнеры типа 1 используются при поиске схем в среде опорных ра, .
2 имеют, в отличие от ультраконтейнеров типа 1, непустую посылку. Ультраконтейнер типа 2 - это схема-продукция с непустой посылкой. Схемы, связываемые
2,	, -
.
Определение: Ультраконтейнер доступа ШВ определяется в системе функциональным предназначением ^ в виде определенного набора разрешенных к взаимодействию ультраконтейнеров П„: иВ=Р(Шп).
На основе данного выражения можно описать среду доступа и для ультраконтейнера и , ип^иВп{и1, и2,...,и„}, где и и2= и В^ иВ2 при Д=В2.
Вопросами активирования среды радикалов занимаются системы, которые .
Активатор системы доступа обеспечивает навигацию в среде опорных ра, -.
Определение: Активатор доступа АВ есть правило, определяющее среду взаимодействия между средами доступа иВ, СВ, ив.
При реализации доступа каждый и при нормализации среды для системы в соответствии с процессным походом имеет среду взаимодействия (БУ) - это область возможных взаимодействий элементов системы с учетом функциональности, которая основывается на целях, требованиях, функциях и задачах системы и записывается в виде множества взаимосвязанных уникумов (и1у и2, . . .,ип}, контейнеров (сь с2, . . .,сп} и ультраконтейнеров (иг, и2, . . ., ип}.
,	и
учетом ограничений контейнеров С и ультраконтейнеров Ш, Аи= /(иип) при ог-Ш.
В случае сложности системы при организации процессного подхода существует активатор контейнеров Ас= Дс^с,) при ограничении и и активатор ультраконтейнеров ли=/(и1^и п).
, -обходимо сформировать активатор доступа АВ={Аи, Ас, Аи}.
Определение: Активатор доступа АВ безопасен для системы в том случае, если Аи, Ас, Аи обеспечивают бесконфликтную работу системы в целом.
и	и и				и			с	а с	)			с			и	и	Б
и	с							с	и							и	Б
Запрос доступа вй
Активатор доступа Ай={Аи, Ас, Аи}
Организация доступа. Проверка на конфликт на основе среды радикалов
Рис. 1. Реализация функционально-дискреционной модели на основе среды радикалов
Доступ определяется как безопасное взаимодействие уникумов и}, и2, . . .,ип в системе при согласовании контейнеров С и ультраконтейнеров U. Общая формула доступа есть сравнение доступа среды взаимодействия DSV-системы при функционировании и среды доступа SD=(uD, CD, UD) - область разрешенных взаимодействий с точки зрения безопасности элементов системы, заданной политикой безопасности: DSV=SD ^ доступ, DSWSD ^ доступ по совпадающим uD, CD, UD, где безопасность определяется как бесконфликтность взаимодействия сред доступа u1D1 и m2D2, C1D1 и C2D2, U\D\ и U2D2.
Таким образом, функционально-дискреционная модель - это разграничительная модель доступа на основе среды радикалов с учетом процессного подхода. Реализация функционально-дискреционной модели на основе среды радикалов . 1.
Исходной информацией для реализации функционально-дискреционной модели является описанная политика безопасности и среда взаимодействия системы. Данная информация переносится через среду радикалов и нормализуется через координацию,	ультраоснащение,	реализацию общих принципов
.
Реализованная координатная система контейнеров позволяет провести разработку среды доступа SD=(uD, CD, UD). Запрос доступа SD —*■DSV формирует активатор доступа AD={Au, Ac, AUJ. Проводится проверка на конфликт, используя , .
Данная методика реализует доступ в системе с учетом процесса функционирования на основе внедрения системного принципа и пересмотра реализации мо,
реализации функций и задач системой.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1. Лепешкин ОМ.	Исследование функциональной безопасности систем государственного управления // Инфокоммуникациопные технологии. - 2007. - Т. 5. - №3.
2.	. ., . .
радиалов // Мат. конф. "Интеллектуальные системы и компьютерные науки". - М., 2006.
3.	. .
информационных систем: Монография / B.C. Симанков, П.В. Сундеев. - Краснодар: Институт современных технологий и экономики. - 132 с.
4.	Волобуев (Iß. Философия безопасности социотехнических систем: информационные аспекты. - М.: Вузовская книга, 2004. - 360 с.
Лепешкин Олег Михайлович -
ракетных войск.
E-mail: lom@stavsu.ru.
355000, .	,	,	13.
Тел.: 8 (905) 4100255.
Начальник.
Lepeshkin Oleg Mihailovich
Research laboratory Stavropol Military Institute of Connection and Rakete Troops .
E-mail: lom@stavsu.ru.
13 North Passage, Stavropol, 355000, Russia.
Phone: 8 (905) 4100255.
Head.

=====



﻿6.	Пат. 2229139 РФ. МКИ G01R 23/16. Способ спектрального анализа сложных несинусоидальных периодических сигналов представленных цифровыми отсчетами / В.С. Аврамчук, Е.И. Гольдштейн. Заявлено 10.12.02; Опубл. 20.05.2004, Бюл. № 14. - 10 с.: ил.
7.	Пат. 2229140 РФ. МКИ G01R 23/16. Способ спектрального анализа многочастотных периодических сигналов, представлен-
ных цифровыми отсчетами / В.С. Аврамчук, Е.И. Гольдштейн. Заявлено 28.03.03; Опубл. 20.05.2004, Бюл. № 14. - 7 с.: ил.
8.	Пат. 2231076 РФ. МКИ G01R 23/16. Способ определения частоты сетевого напряжения / В.С. Аврамчук, Е.И. Гольдштейн. Заявлено 02.07.03; Опубл. 20.06.2004, Бюл. № 15. - 7 с.: ил.
УДК 681.5.01
МОДЕЛИРОВАНИЕ НЕСТАЦИОНАРНЫХ ДИНАМИЧЕСКИХ СИСТЕМ МЕТОДОМ ИЗОБРАЖАЮЩИХ ВЕКТОРОВ
Ю.Н. Шалаев
Институт «Кибернетический центр» ТПУ E-mail: shal@ad.cctpu.edu.ru
Проводится в векторно-матричной форме синтез управляющего сигнала нестационарных динамических систем по желаемой характеристике выходного сигнала и предложен алгоритм оценки их параметров методом изображающих векторов. Это операторный метод, который всякой временной функции на конечном промежутке времени ставит в соответствие n-мерный вектор, а линейному оператору - матрицу (nxn). Дальнейшие преобразования, необходимые для оценки параметров и управления системы, ведутся численными методами. Все это позволяет успешно использовать вычислительную технику, а окончательный результат на основании формулы обращения записывать в аналоговой форме.
Современные технологические процессы и производства характеризуются многофакторностью и сложными зависимостями между параметрами. И поэтому широкое распространение систем с переменными параметрами в области автоматического управления, в информационно-измерительных системах, а также необходимость более глубокого количественного и качественного изучения процессов, протекающих в таких системах, приводит к интенсивной разработке цифровых методов синтеза и анализа подобных систем и объектов.
Качество управления объектами в динамике определяется многими факторами. Это наличие возмущений и их характер, тип объекта - стационарный, нестационарный, линейный, нелинейный. Тем не менее, доминирующим фактором, во многом определяющим эффективность решения задачи управления, является положенная в основу исследования математическая модель исследуемого объекта или процесса. Для решения задачи управления и идентификации нестационарными объектами использован метод изображающих векторов [1-3], который сочетает в себе как цифровые, так и аналитические приемы решения поставленной задачи.
Суть метода изображающих векторов состоит в том, что каждой функции Д/) ставится в однозначное соответствие вектор Р={/1/’2,.../р}. Для функции ДО, определенной на промежутке времени [0, /0], имеет место разложение
/ (Т) = Х/Л (т),	(1)
к=0
где /к - коэффициенты Фурье; Тк(т) - ортонорми-рованные смещенные полиномы Чебышева 1-го рода; т=///0 - безразмерная независимая переменная.
Приведем некоторые свойства метода изображающих векторов. Операции интегрирования функции /(т) соответствует в области изображающих векторов умножению ее изображающего вектора на матрицу интегрирования:
¥ = & + у(0 V Г0(т),	(2)
где I - матрица интегрирования, у(0) - начальные условия, е1 - единичный вектор, Т0(т) - полином Чебышева.
Для многократного интегрирования при нулевых начальных условиях матрица интегрирования возводится в соответствующую степень:
У = 1к¥.
Аналогичное положение имеет место и для матрицы дифференцирования Б [1].
Произведению двух функций к(т) = г(т)/(т)
в области изображающих векторов соответствует соотношение вида
Н = 2(1 )Г,	(3)
где / - матрица Якоби [1].
Таким образом, изображение произведения двух функций равно произведению изображений матрицы известной функции ¿(т) на изображающий вектор другой. Изображающей матрицей условно названа матричная функция 2(1), которая получается из заданной функции ¿(т) заменой скалярного аргумента т на матрицу /. Ввиду равнозначности двух функций их произведение коммутативно, т. е. равно произведению матрицы второй функции на изображающий вектор первой. Тогда выражение (3) запишется как
H = QTdiag[z(т),z(r2),..., z(rp)]QF,	(4)
где Q — интерполяционная матрица [1], составленная из значений базовых полиномов в узлах интерполирования, p — размерность интерполяционной матрицы Q, z(Tk) - значения функции z(t) в нулях р-го полинома Чебышева. Для учета интервала разложения матрица Якоби J умножается скалярно на величину t0. Восстанавливается исходная функция времени Дт) по изображающему вектору в соответствии с формулой обращения
f(T) = (F ,Т(т)),	(5)
где правая часть имеет смысл скалярного произведения изображающего вектора на переменный вектор полиномов Чебышева Т(т).
При описании объекта управления в виде передаточной функции уравнение, связывающее выходной сигнал y(t) и сигнал управления u(t) в операторной форме, запишется как
Y = W (s)U,	(6)
где W(s) - передаточная функция объекта управления.
Изображающий вектор выходного сигнала y(t) на интервале [0, t0] (6) можно записать согласно соотношениям (1, 2) как
Y = (t0I )W (t0I )U.	(7)
Разрешая соотношение (7) относительно вектора управляющего сигнала, получим
U = W (t0I y\t0I )Y.	(8)
Для матрицы дифференцирования выражение (6) запишется как
U = W (D)Y.	(9)
Выходной сигнал y(t) можно задать в виде произвольной функции перемещения объекта управления по заданным координатам. Для получения изображающего вектора произвольного выходного сигнала Y на интервале времени [0, t0] воспользуемся соотношением перехода от точечного изображающего вектора к изображающему вектору Y следующего вида
Y = 2/pQTY(Tk ),	(10)
где Y(Tk)={y(Tk)} - точечный изображающий вектор, представляющий собой вектор, элементы которого есть значения функции y(t) в нулях первого из отброшенных полиномов Чебышева. С учетом точечного изображающего вектора (10) соотношения (8, 9) запишутся как
U = 2/pW (f0I )lQTY (тк ),
U = 2/pW (D )QTY (Tk ).
Рассмотрим динамическую систему, которая описывается дифференциальным уравнением вида
A0 (t ) Y(n) (t ) + Al (t )Y (n-1)(t ) +... +
+A(„_D(t )Y (t ) + An (t )Y (t ) = U,	(11)
где А(), 1=0,п - переменные коэффициенты, непрерывные на интервале [0, /0].
На основании правил перехода к изображающим векторам (1-4) дифференциальное уравнение (6) запишется следующим образом
[А0(3) В” + А,(3) Вп-1 +... + Ап_х (3) В + Ап (3)] = и
или	в[А(3), Б(3 )]¥ = и.	(12)
При расчете реакции динамических нелинейных нестационарных систем управления на управляющее воздействие заданные нелинейные коэффициенты по методу изображающих векторов переводят в точечные изображающие векторы. Таким образом, имея значения неизвестной функции в определенных точках, узлах интерполирования, можно провести определенную нелинейную операцию над этими точками, например: операцию вычисления модуля функции; нелинейностей, заданных в виде графика насыщения; различных тригонометрических и степенных зависимостей в этих точках. Далее полученный преобразованный точечный изображающий вектор переводят в изображающий вектор соответствующей нелинейной операции.
Рассмотрим систему, которая описывается нелинейным дифференциальным уравнением следующего вида:
F(t,y) + ¿{(Г,у)} = и,	(13)
где левая часть уравнения (13) состоит из линейной части Д/,у) и нелинейной Ь(1,у).
По методу изображающих векторов рассмотрим вычисление неизвестной функции у(1) при действии нелинейного оператора Ь. Переходим к точечным изображающим векторам, тогда нелинейная часть соотношения (13) запишется как
^¿(у(тк)} = QTdiag[ Ьу(тк Ш
где Я - оператор перехода от точечных изображающих векторов функций, стоящих под знаком оператора, к изображающим векторам этих функций.
В векторно-матричной форме соотношение (13) запишется в следующем виде
F (3 ,¥) + Ог	Ь¥к Ю = и.
Восстанавливается управляющая функция времени Щ) по изображающему вектору (8, 9, 12, 13) и в соответствии с формулой обращения
и (г) = (и ,Т (г)),	(14)
Таким образом, при описании объектов управления различными методами (передаточная функция или соответствующее дифференциальное уравнение) можно получить вектор управляющего сигнала в зависимости его от выходного сигнала У, преобразовать по соотношению (14) и подать на вход системы сигнал в аналоговой форме.
Задача оценки параметров динамической системы сводится к нахождению:
•	формальной структуры модели;
•	конструктивных параметров объекта управления;
•	неизвестных параметров модели системы управления.
Динамику системы управления успешно описывают с помощью дифференциальных и интегральных уравнений [4]
V а.*— у(1) = УЬ.
I л +1 -п ' х	1
й1
(И
1=0
-и(?),
(15)
Формальная структура системы управления на основании многих источников определена в виде дифференциального уравнения (15). Оператор идентификации объекта управления запишем в виде передаточной функции
В (з)
Ж (з) =
А(з)'
(16)
у«)=¿т).
(19)
В области изображающих векторов соотношение (19) запишется как
w = DH.
По соотношению (5) получили аналитический вид весовой функции
у (?) = (у,Т ()).
Для оценки нулей передаточной функции вводится постоянный коэффициент с>1 и на интервале от 0 до /0 по соотношению у(/)у(с/)<0 оценивается порядок числителя передаточной функции (16), т. е. количество подынтервалов, на которых находятся нули весовой функции у(/).
По весовой функции (19) получаем числовую характеристику передаточной функции, для этого воспользуемся интегральным преобразованием Лапласа
W (gi) = | м>(^ехр( - git) dt,
(20)
где ё1 - вещественный параметр на интервале [0,/0]; Ж(£;)- оператор системы управления.
Оператор системы управления (15) для вещественной переменной ё запишется как
Ьт8т + Ьт-^-1 +... + Ь,е + Ь0. ёп + ап-1 ё"-1 + ••• + ахё + а„ '	(21)
Ж (я) = -
Таким образом, задача оценки параметров передаточной функции по виду переходного процесса системы управления к(() сводится к оценке конструктивных параметров передаточной функции (16), при этом т<п, и нахождению неизвестных параметров модели а;(/=0,п-1) и ЬД/=0,т).
Для решения поставленной задачи воспользуемся методом изображающих векторов, для этого переходной процесс к(¡) преобразуем в изображающий вектор по соотношениям (1, 2):
Н = {Н1,к2,:;кр }.	(17)
По вектору (17) и из формулы обращения (5) получаем аналитическую зависимость переходного процесса в виде полинома порядка р:
Щ) = (Н ,Т«)).	(18)
По аналитической зависимости (18) функции к(/) находим время переходного процесса /0 от момента включения системы до момента, когда модуль отклонения переходного процесса от установившегося значения не превосходит заданной величины зоны нечувствительности.
Для нахождения весовой функции системы у(/) воспользуемся дифференциальной связью между весовой и переходной функциями
Для оценки конструктивных параметров п, т воспользуемся уравнениями (20, 21) и предельным соотношением
= С
(22)
Из полученного соотношения (22) находится оценка конструктивных параметров
л	1п сп-т
п - т = -
1п с
В результате введенных допущений при оценке параметров п, т получается вещественное число, содержащее целую часть и мантиссу. Мантиссу полученного выражения принимаем за единицу и прибавляем к целой части. Таким образом, задача нахождения конструктивных параметров п, т решена.
Для нахождения коэффициентов передаточной функции необходимо решить систему линейных алгебраических уравнений порядка п+т+1 следующего вида:
п— 1	т
ё1Ж(ёк) + Ж(ёк)V а1ё‘к - V Ь1ёк = 0,
.=0	1=0
к = 0, п + т +1.
По найденным коэффициентам а1,Ь1 и конструктивным параметрам п и т записываем передаточную функцию исследуемой системы.
Необходимо отметить, что переходной процесс (17) может быть на выходе нестационарной и нелинейной динамических систем. Изложенный метод оценки параметров динамических систем позволяет аппроксимировать эти системы передаточными функциями линейных динамических систем.
Предложенный метод моделирования нестационарных систем управления позволяет получить сигнал управления в зависимости от выходного сигнала У и для исследуемой (идентифицируемой) системы управления. Действительно, по полученной передаточной функции идентифицируемой системы по соотношениям (8) или (9) и (14) получаем управляющий сигнал и(т), который и можно подать на вход исследуемой системы управления.
СПИСОК ЛИТЕРАТУРЫ
1.	Осипов В.М. Основы метода изображающих векторов и линейное преобразование сигналов // В сб.: Вопросы программирования и автоматизации проектирования. - Вып. 1. - Томск: Изд-во Томского ун-та, 1971. - С. 1-13.
2.	Осипов В.М., Шалаев Ю.Н. Решение линейных дифференциальных уравнений с переменными коэффициентами на
АВМ методом изображающих векторов // Известия вузов. Приборостроение. - 1977. - № 12. - С. 43-47.
3.	Шалаев Ю.Н. Применение метода изображающих векторов к решению краевых задач для обыкновенных дифференциальных уравнений // В сб.: Автоматизация управления и АСУ ТП. - Томск: Изд-во ТПУ, 1977. - С. 101-105.
4.	Бесекерский В.А., Попов Е.П. Теория систем автоматического регулирования. - М.: Наука, 1972. - 768 с.
УДК 539.12.01
МЕДЛЕННОЕ ВРАЩЕНИЕ МАССИВНЫХ ТЕЛ В ТЕОРИИ ТЯГОТЕНИЯ ИОРДАНА-БРАНСА-ДИККЕ
В.И. Рейзлин
Институт «Кибернетический центр» ТПУ E-mail: valera@ad.cctpu.edu.ru
Рассматривается задача о медленном вращении релятивистских тел в скалярно-тензорной теории тяготения. В первом приближении по угловой скорости получено уравнение, описывающее вращение, его внешнее решение и выражение для момента импульса. Приведены результаты численного интегрирования этих уравнений. В расчетах применялось уравнение состояния нейтронно-звездной материи в модели однобозонного обмена. Полученные результаты сравниваются с данными наблюдений пульсаров.
Проблеме вращающихся тел в рамках общей теории относительности (ОТО) посвящен ряд работ [1-5]. В [1] было найдено точное решение уравнений Эйнштейна для стационарного аксиально-симметричного гравитационного поля в вакууме. В [2-5] рассматривалось приближенное общее решение, описывающее поле медленно вращающегося тела.
Представляет интерес рассмотрение данного вопроса с точки зрения альтернативных теорий гравитации. Одной из них является скалярно-тензорная теория Иордана-Бранса-Дикке [6-8]. Задача вращения тел в этой теории рассмотрена в работе [9]. Настоящая статья посвящена данному вопросу и ограничивается моделью медленного вращения, при котором угловая скорость а удовлетворяет условиям:
юг << 1, ю2 <<M/г3.
(1)
g»v¥’P J,
Г%= 8ж(3 + 2а)
(2)
(3)
зор энергии-импульса материи, выражающийся через давление Р и плотность вещества р следующим образом:
Т^=(Р + р)ил-	.	(4)
Первое из них означает, что линейная скорость любого элемента тела много меньше скорости света С, а второе - малость центробежных сил по сравнению с силами тяготения. В (1) М - масса тела, г -радиальная координата; здесь и далее используются единицы с=0=1, О - гравитационная постоянная.
Уравнения поля в скалярно-тензорной теории тяготения имеют следующий вид [6-8]:
Оиу=-8^¥^1тиу-^¥^1(¥,и¥у -I/2 -ёиУ¥,вГР)-
где \у - дальнодействующее скалярное поле; а -безразмерная константа связи ^-поля; ё^ - метрический тензор; О^ - тензор Эйнштейна; Т^ - тен-
Здесь u=ds/dx - четырёхскорость, ds - интервал, и^=1.
Теория Иордана-Бранса-Дикке переходит в ОТО в предельном случае ст-^<», ц=1. Радиоастрономические измерения устанавливают ограничение ст>15 [10].
В первом порядке разложения метрических коэффициентов по степеням а квадрат интервала можно записать в виде [3, 9]:
ds2 = B(r)dt2 -A(r)dr2 -
-r2[dd2 + sin2 d(dy -D.(r,d)dt)2],	(5)
где B(r), A(r) - метрические коэффициенты, в -долгота, ф - широта; функция Q описывает «увлечение» инерциальной системы отсчета телом и возникает вследствие вращения конфигурации. В работе [9] показано, что в рассматриваемом приближении функция Q не зависит от долготы в. Уравнения (2-4) являются тогда уравнениями гидростатического равновесия [11], которые определяют в требуемом приближении функции A, B, р, P, \у и другие четные по а параметры системы. После нахождения этих параметров для определения линейной по а функции Q достаточно решить единственное неисчезающее недиагональное (ф)-уравнение в системе (2), записанное в первом порядке по а [9]:
d Í цг4
dr {4ab
• ^ I = 16n(P + р)(П-ю) Ar4. dr I	V	B
(6)

=====



﻿УДК 519.673
МОДИФИКАЦИЯ ЯЧЕЙКИ ОДНОРОДНОЙ СТРУКТУРЫ ДЛЯ РЕШЕНИЯ ДИФФЕРЕНЦИАЛЬНЫХ УРАВНЕНИЙ В ЧАСТНЫХ ПРОИЗВОДНЫХ С ПЕРЕМЕННЫМИ КОЭФФИЦИЕНТАМИ
А.А. Хамухин
Томский политехнический университет E-mail: aaxtpu@tpu.ru
Предложена модификация ячейки однородной структуры для решения дифференциальных уравнений в частных производных с коэффициентами, зависящими от искомой переменной. Показана возможность реализации функционального наполнения ячейки с параллельным пересчетом значений коэффициентов во внешнем устройстве. Представлены результаты моделирования линейки ячеек на примере решения тестовой краевой задачи с температурно-зависимыми коэффициентами.
Ключевые слова:
Ячейка однородной вычислительной структуры, параллельные вычисления, дифференциальные уравнения в частных производных, переменные коэффициенты. Key words:
Cell of homogeneous computing structure, parallel computation, partial differential equations, dependent coefficients.
Введение
В статьях [1, 2] изложены примеры реализации вычислительного устройства для решения дифференциальных уравнений в частных производных на основе непрограммируемых ячеек однородной структуры [3], показана возможность его реконфи-гурирования в зависимости от области решения и вида граничных условий, с помощью моделирования дана оценка выигрыша в производительности на данном классе задач по сравнению с универсальным микропроцессором при прочих равных условиях. Подобные устройства с аппаратной реализацией алгоритма на микросхемах типа БМК или ПЛИС находят все большее применение в высокопроизводительных вычислениях [4].
В настоящей статье рассмотрено еще одно преимущество таких ячеек - возможность организации параллельного решения дифференциальных уравнений в частных производных с переменными коэффициентами, значения которых могут зависеть от самой искомой величины.
Такие коэффициенты, характеризующие свойства среды, встречаются при решении реальных физических задач, например тепломассопереноса. Достаточно упомянуть, что один из ведущих производителей программного обеспечения для моделирования сложных инженерных объектов MSC Software Corporation подчеркивает учет температур-но-зависимых коэффициентов (вязкости, теплопроводности, теплоемкости и др.) в качестве достоинства своих программных продуктов [5].
В фундаментальном труде [6], посвященном современным однородным вычислительным структурам, этот вопрос не рассматривается. Там все подобные коэффициенты относят к константам, которые заносятся в регистры ячеек на этапе настройки поля структуры и во время этапа решения остаются неизменными.
Из вычислительной практики известно, что коэффициенты, зависящие от искомого решения, необходимо многократно пересчитывать и после-
довательно повторять решение дифференциальных уравнений в частных производных до тех пор, пока отличия в рассчитанных значениях не станут менее заданной погрешности. Это значительно увеличивает время решения всей задачи.
Объект и цель исследования
Объектом исследования является вычислительный процесс в ячейке однородной структуры для решения дифференциальных уравнений в частных производных с переменными коэффициентами, зависящими от искомого решения.
Целью исследования является модификация вычислительного процесса в ячейке таким образом, чтобы получаемое последовательно решение дифференциального уравнения использовалось параллельно для пересчета зависимых от него коэффициентов, что позволит повысить точность решения задачи без увеличения количества итераций.
Модификация схемы ячейки
Для достижения поставленной цели в известную схему ячейки [1, 2] можно ввести либо дополнительное вычислительное устройство для пересчета и замены коэффициентов, либо дополнительный вход для ввода новых значений коэффициентов, пересчитанных некоторым внешним устройством.
Первый вариант приведет к существенному усложнения схемы ячейки. Зависимость коэффициентов дифференциальных уравнений от искомой переменной может быть различной. Например, теплопроводность твердых тел часто аппроксимируется линейной зависимостью от температуры, а для расчета коэффициентов теплопроводности жидкостей и газов применяют более сложные формулы, полученные путем экспериментальных исследований. Аналогичные зависимости имеют и другие температурно-зависимые коэффициенты [7].
Этот факт является дополнительным доводом в пользу второго варианта реализации учета зависимости коэффициента от искомой переменной с помощью внешнего устройства. Эту функцию может выполнять универсальный микропроцессор, который является необходимой составляющей для управления любой однородной вычислительной структурой [3]. Главными задачами управляющего микропроцессора является ввод коэффициентов в регистры ячеек однородной структуры перед циклом вычислений и вывод из ячеек полученных результатов в конце цикла вычислений. Во время самого рабочего цикла однородной структуры этот микропроцессор простаивает и его можно использовать для пересчета коэффициентов.
Таким образом, схема ячейки дополняется только устройством для ввода коэффициентов по ходу решения, что несущественно усложнит ее аппаратную реализацию (рис. 1).
Ячейка может находиться в двух состояниях, задаваемых внешним устройством управления. Первое состояние - это рабочий цикл вычислений, во время которого сигналы с выходов других ячеек (приращения) умножаются на коэффициенты в БМИ, суммируются в сумматоре СП, передаются в интегратор и при этом формируются выходные сигналы (приращения) для соседних ячеек.
По сигналу окончания шага по времени от внешнего устройства управления ячейка переходит во второе состояние - цикл чтения/записи. Во время этого цикла результат интегрирования передается в блок формирования приращений с предыдущих шагов по времени и используется уже в следующем рабочем цикле ячейки, а также передается во внешнее устройство. Во время этого цикла в БМИ записываются новые значения коэффициентов, полученные от внешнего устройства.
Блок масштабных интеграторов БМИ обычно реализуется на сдвиговых регистрах, соединенных через последовательные входы, поэтому запись коэффициентов во все регистры может быть произведена через один вход. В этих регистрах хранятся коэффициенты, на которые умножаются входные сигналы БМИ. Количество входов в БМИ необходимо сделать больше, чем количество выходов соседних ячеек. Подавая на дополнительный вход БМИ логическую единицу, можно реализовать дополнительное слагаемое в правой части дифференциального уравнения, если в этом будет необходимость. Это слагаемое будет вычисляться внешним устройством также как и коэффициенты и передаваться в соответствующий регистр блока масштабных интеграторов по сигналу окончания шага по времени через ключевой элемент КЭ2.
Приращения с выходов других ячеек
Рис 1. Модифицированная функциональная схема ячейки однородной структуры для решения дифференциальных уравнений в частных производных с переменными коэффициентами: 1) блок масштабных интеграторов БМИ; 2) сумматор приращений СП; 3) следящий интегратор СИ; 4) интегратор И; 5) блок формирования приращений с предыдущих шагов по времени БФПВ; 6,7) ключевые элементы КЭ1, КЭ2
Пример использования модифицированной ячейки
Рассмотрим в качестве примера уравнение теплопроводности (диффузии) с коэффициентом а(и,х), характеризующим свойства среды:
ди дг
Лии,х)ди | + ^(х, г)
дх I	дх
(1)
с начальными и граничными условиями
и\, =о = и 0(х); и\
(2)
да (и, х) ди
дх
дх да ~дй
-а(и, х)
д 2и
ди
дх
=-1-| +а(и, х)
дх2
д 2и
дх2 '
(4)
ди , ,д2и _ ,
-= а( х)—- + ^ (х, 1).
дг	дх2
(5)
где А/ и А - шаги по времени и пространственной координате; п иг- их номера; переменная Фп,;--1 получена путем аппроксимации по явной схеме и ее можно рассматривать для ячейки как модифицированную функцию источника Р:
Ф п
а, -а,
-1 (
ип - ип
и - и:-1
+т
= Ра (г),	(3)
где / - время; и0(х) - начальные значения искомой переменной; О - граница области решения; Р(х,/) и Ре(0 - функции источника внутри и на границе области решения.
Первое слагаемое правой части уравнения (1) будет иметь две составляющие:
В работах [1, 2] показано, как реализовать ячейку однородной структуры для решения уравнения вида:
Анализ правой части выражения (4) показал, что в отличие от (5) появляется дополнительное первое слагаемое, а во втором слагаемом коэффициент а необходимо пересчитывать в зависимости от получаемого решения и. Применение неявной схемы аппроксимации для выражения (4), изложенной в [1, 2], приведет к существенному усложнению функциональной схемы ячейки однородной структуры и потери ее главного достоинства - простоты реализации.
Поэтому в настоящей работе предлагается применить явно-неявную схему аппроксимации. Эта схема должна быть такой, чтобы на текущем шаге по времени вычислительный процесс в ячейке протекал также, как в аналоге (по неявной схеме). Коэффициент а и первое слагаемое правой части выражения (4) предлагается аппроксимировать по явной схеме. Благодаря этому их расчет можно возложить на некоторое внешнее устройство (например, на управляющий микропроцессор, указанный в работе [2]), которое получает текущее решение от ячеек на п-ом шаге по времени и в промежутке между шагами рассчитывает значение коэффициента а и первого слагаемого для п+1 шага по времени.
В соответствии с предложенной схемой получаем расчетную формулу для внутренних узлов равномерной разностной сетки, наложенной на область решения:
ип+1 = и + Агап	- 2ип+1+ и;-/) + АгФп;_-11, (6)
к
Выражение (6) отличается от аналогичного выражения в работе [2] только наличием индексов у модифицированной функции источника и у коэффициента а;п. Эти индексы означают, что после каждого шага по времени п значения указанных величин нужно вводить в ячейку заново, которые рассчитываются внешним устройством и на п+1 шаге работы ячейки используются как константы.
Выполним аналогично работе [2] переход от выражения (6) к формуле, описывающей функционирование ячейки однородной структуры. Учтем, что сам алгоритм работы ячейки с приращениями уже содержит внутренний итерационный процесс, который можно использовать для пересчета коэффициентов.
Для обеспечения устойчивости решения на каждом шаге по времени применяется метод установления (итераций) по фиктивному времени. Для этого все слагаемые конечно-разностного уравнения (6) переносятся в правую часть, а в левой части ноль заменяется производной от искомой переменной по фиктивному времени в:
дип+1
; = к:и;+ - (1+2к; )ип+1 +
дв
+кпи"+! +АгФПП--1 + и;
(7)
где
к; = Ага;
1
Далее применяется конечно-разностная аппроксимация по явной схеме для аргумента в.
и;+1,в+1 = ип+1-в + Ав[...]в,	(8)
где [,..]в - правая часть уравнения (7).
На первом шаге (п=0) по реальному времени уравнение (8) имеет вид:
ив = и 1в+Ав
к0и1в - (1 + 2к0)иУ +
/+1
+к0и1в + АгФ0--1 + и:
(9)
причем ц;10=и;0.
В общем виде уравнение (9) для п+1-го шага по реальному времени и для в+1 шага по фиктивному времени:
= ип+1'в + Ав
ии п+1,в+1_
~кпи:;:в- (1+2 к )и;+1,в +
(10)
+кпи;-;1'в + АгФп*- + и
Обмен данными между ячейками однородной структуры производится не полными переменными, а их приращениями, выражение для которых легко получить из предыдущего уравнения:
= Ди.и в +дв
"^диПГ- (1+2 кп) дип+1,в + +кпди^'в+ддфп*:;+ди
(11)
Ур. (10, 11) одинаковы для каждого /-го внутреннего узла разностной сетки и могут быть реализованы аппаратно в виде ячейки однородной вычислительной структуры. Приближенное решение ур. (1) получается в результате совместной работы ячейки и внешнего устройства, функцию которого может выполнять, как было указано ранее, управляющий микропроцессор. Функциональная схема взаимодействия ячейки и внешнего устройства для реализации ур. (10, 11) приведена на рис. 2 (сигналы управления опущены).
Внутри однородной структуры каждая ячейка передает рассчитанное на каждом шаге приращение в соседние ячейки и обрабатывает приращения, полученные от соседних ячеек по формуле (11). Одновременно приращения, отражающие изменение искомой переменной П, с выхода каждой ячейки поступают на внешнее устройство, которое параллельно вычисляет новое значение коэффициента кп и модифицированную функцию источника Ф,п;--1, которые требуются для уточнения решения на следующем шаге по времени. После завершения цикла итераций по фиктивному времени, вычисленные параллельно внешним устройством указанные величины передаются в виде коэффициентов в регистры ячеек и используются на следующем шаге.
Как показано в работе [3], уравнение вида (11) может быть использовано и для граничных узлов разностной сетки, что делает однородную вычислительную структуру, состоящую из таких ячеек, масштабируемой и реконфигурируемой.
Результаты моделирования
Система уравнений (6)—(11) для сравнительной оценки эффективности модифицированной ячейки была реализована и исследована на примере решения тестовой краевой задачи (1)-(3) с переменной и, соответствующей относительной температуре, с начальными и граничными условиями:
0 < х < 1;
0 < I < 1; и (0, х) = 0;
и « , 0) = 0; и (?,1) = 1.
Для а(и,х)=1 известно точное решение этой задачи:
и(?, х) = х + 2^ (-1)п(пп)8т(ппх).
п=1
Для численного решения тестовой задачи использовалась модель, состоящая из 11 модифицированных ячеек, две из которых использовались в качестве граничных, а остальные - в качестве внутренних узлов равномерной разностной сетки. Для а(и,х)=1 решение на модели совпадало с точным решением с погрешностью, задаваемой для остановки итераций по фиктивному времени в.
Температурная зависимость коэффициента а задавалась с помощью линейного уравнения а(и, х) = Ьи + с,
где Ь, с - коэффициенты линейной аппроксимации зависимости а от температуры.
Для оценки величины расхождения решений ур. (1) и (5) были проведены расчеты с постоянным коэффициентом а(П,х)=с.
По результатам расчетов приведены графики изменения относительной разности решений ур. (1) и (5) дПпо временным шагам п и по узлам разностной сетки / (рис. 3).
Графики на рис. 3 получены при одинаковом количестве итераций (времени решения задачи) для обычной и модифицированной ячеек. На графике рис. 3, а, видно, что при удалении от граничных (1, 11) ячеек расхождение решений увеличивается. На графике рис. 3, б, видно, что на начальных шагах по времени расхождение решений постепенно нарастает и выходит на стационарный уровень. Это обусловлено использованной явно-неявной схемой аппроксимации, которая начинает полноценно работать только после первых двух шагов
Рис. 2. Функциональная схема взаимодействия ячейки однородной структуры ЯОС и внешнего устройства ВУна примере двух шагов по времени
5U, %	56; %
а	б
Рис. 3. Относительная разность 8и решений ур. (1) и(5) поузлам разностной сетки / (а) и по временным шагам п (б): Ь=0,1; М=0,25; Ав=0,1; Ь=4; с=4
по времени. Поэтому в практических расчетах начальные шаги по времени рекомендуется выбирать меньше, чтобы снизить погрешность.
В количественном измерении расхождение результатов моделирования с учетом и без учета температурной зависимости коэффициентов не превысило 5 % в данном примере, но оно тем значительнее, чем больше разность между заданными начальными условиями и конечным результатом и чем значительнее температурная зависимость коэффициента а.
Выводы
Модификация ячейки однородной структуры для решения дифференциальных уравнений в частных производных позволяет организовать вычисление значений коэффициентов, зависящих от искомой переменной, параллельно с расчетом
СПИСОК ЛИТЕРАТУРЫ
1.	Ячейка однородной структуры для решения дифференциальных уравнений в частных производных: пат. 2359322 Рос. Федерация. № 2007141832/09; заявл. 12.11.2007; опубл. 20.06.2009, Бюл. № 17. - 6 с.
2.	Хамухин А.А. Ячеечная модель устройства для решения дифференциальных уравнений в частных производных // Известия Томского политехнического университета. - 2010. -Т. 316. - № 5. - С. 62-67.
3.	Хамухин А.А. Реконфигурирование однородной вычислительной структуры с непрограммируемыми ячейками для решения дифференциальных уравнений в частных производных // Известия Томского политехнического университета. - 2010. -Т. 316. - № 5. - С. 68-72.
4.	Абрамов С.М., Дбар С.А., Климов А.В., Климов Ю.А., Лацис А.О., Московский А.А., Орлов А.Ю., Шворин А.Б. Возможности суперкомпьютеров «СКИФ» ряда 4 по аппаратной поддержке в ПЛИС различных моделей параллельных вычи-
самой переменной. Это дает более точный результат без дополнительного цикла итераций для пересчета коэффициентов.
Модификация ячейки незначительно увеличивает аппаратные затраты в самой ячейке (дополнительный ключевой элемент) за счет выноса аппаратной реализации зависимости коэффициента от искомой переменной за схему типовой ячейки во внешнее устройство (управляющий микропроцессор), работающее синхронно с ячейкой. Такое решение обеспечивает гибкость замены вида зависимости коэффициентов путем замены программы внешнего устройства без изменения схемы ячеек однородной структуры.
Результаты моделирования на примере решения тестовой краевой задачи с температурно-зави-симыми коэффициентами подтвердили работоспособность модифицированной ячейки.
слений // Суперкомпьютерные технологии: разработка, программирование, применение (СКТ-2010): Матер. Междунар. научно-техн. конф. - г Дивноморское, 27 сент. - 2 окт. 2010. -Таганрог: Изд-во ТТИ ЮФУ, 2010. - Т. 1. - С. 11-21.
5.	MSC Software. Extending Simulation to the Enterprise. 2010. URL: http://www.mscsoitware.ru/products/nastran3 (дата обращения: 11.01.2011).
6.	Каляев И.А., Левин И.И., Семерников Е.А., Шмойлов В.И. Реконфигурируемые мультиконвейерные вычислительные структуры. - Ростов на Дону: ЮНЦ РАН, 2008. - 393 с. 2010. URL: http://parallel.ru/FPGA/papers/rmvs.pdf (дата обращения: 11.01.2011).
7.	Александров А.А., Орлов К.А., Очков В.Ф. Web-версия справочника «Теплофизические свойства веществ теплоэнергетики». 2010. URL: http://twt.mpei.ac.ru/rbtpp/index.html (дата обращения: 11.01.2011).
Поступила 11.01.2011 г.

=====



﻿Петров А. Б.
ПРИМЕНЕНИЕ ПРИНЦИПОВ И ПОДХОДОВ ОТКРЫТЫХ СИСТЕМ ПРИ ИНТЕГРАЦИИ РАСПРЕДЕЛЕННЫХ ИНФОРМАЦИОННЫХ
РЕСУРСОВ
Московский государственный институт радиотехники, электроники и автоматики
(технический университет)
Введение
Статья обобщает результаты работы по грантам РФФИ 05-07-90251-в, 06-07-89297-а и по ведущей научной школе НШ-6452.2006.9.
Актуальность решения задачи интеграции распределенных информационных ресурсов (ИР) неоднократно отмечалась в ряде публикаций [1-3]. К настоящему времени эта задача полностью перешла в плоскость практического решения.
Существует два пути решения стоящей задачи на основе модернизации существующей инфраструктуры ИР:
-	с переводом всех интегрируемых ИР на использование одной выбранной коммерчески доступной технологии построения распределенных ИР,
-	с объединением гетерогенных по архитектуре, технологиям построения и структурами данных ИР на основе создаваемой технологии интеграции.
Первый путь сопряжен с существенными затратами на модернизацию в момент ее осуществления, возможны потери информации при переходе на новую платформу и требуется значительное время на его осуществление. Вместе с тем, при использовании технологии построения ИР, отвечающей требованиям открытости [3-4] можно получить эффективно работающее решение, так как при построении ИР будет использоваться одна технология одного производителя с единой архитектурой и, при необходимости, с едиными словарями и классификаторами. Этот путь эффективен при создании «с ноля» ИР.
Второй путь обеспечивает постепенную интеграцию в процессе функционирования ИР по мере того, как будет доработана их организация на основе единых принципов интеграции, классификаторов и словарей. Постепенность процесса и возможность наращивания количества интегрируемых ИР является несомненным достоинством второго пути. Недостатками являются наличие дополнительных аппаратно-программных средств интеграции, необходимость модернизации каждого ИР при интеграции, а также затратность процесса. В общем случае, временные и ресурсные затраты могут превосходить затраты по первому пути, а достижение интеграции всех потребных ИР может быть не обеспечено. Тем не менее, интеграция распределенных ИР, построенных на основе однотипных принципов организации, а также ИР, использующих разные внутренние архитектуры, но имеющие встроенные WEB-службы, с учетом обеспечения непрерывности использования ИР является эффективной.
В работе будет рассмотрен второй путь интеграции распределенных ИР, реализуемый на основе принципов и подходов открытых систем [3-4].
Принципы и подходы открытых систем
Практическая реализация интеграции распределенных ИР основана на выборе решений архитектурных и технологических решений, отвечающих базовым принципам открытых систем [1]:
•	масштабируемость - способность системы к расширению функций и предоставляемых услуг, внедрения новых технологий, увеличению количества источников информации и пользователей; замены отдельных компонентов без перестройки всей системы;
•	переносимость - освобождение от зависимости от одного поставщика аппаратных или программных средств, возможность выбора продукции из имеющихся на рынке при условии соблюдения поставщиками соответствующих стандартов открытых систем;
•	интероперабельность - способность к взаимодействию с другими автоматизированными информационными системами (ИС) (в том числе использующих разную аппаратную платформу и различные операционные системы) и использования информационных ресурсов, имеющихся в других ИС;
•	дружественность к пользователю - способность сформировать комфортную, легко управляемую среду, в которой работает пользователь.
Соблюдение перечисленных принципов экономит инвестиции сейчас и при будущих модернизациях архитектурных и технологических решений при разработке и внедрении практических систем интеграции ИР.
Рассмотрим подробнее реализацию принципов и подходов открытых систем при создании систем интеграции распределенных ИР.
Масштабируемость системы интеграции заключается в осуществлении следующего функционала:
-	обеспечение возможности наращивания количества интегрируемых
ИР;
-	обеспечение возможности наращивания типов построения (архитектур, моделей данных, семантик и т.д.) интегрируемых ИР;
-	обеспечение возможности наращивания количества пользователей интегрированными ИР;
- расширение и развитие содержания классификаторов и словарей;
- адаптация модели данных к требованиям потребителя информации;
-	адаптация объема и формата запрашиваемых данных к объему и форматам запросов пользователя.
Переносимость и интероперабильность системы интеграции распределенных ИР заключаются в обеспечении следующих организационных, технических и функциональных возможностей:
-	тиражируемость решения по интеграции ИР на существующие и перспективные ИР с разной архитектурой, разной организацией, выполненных в разных средах;
-	использование единых архитектурных принципов организации системы интеграции распределенных ИР;
-	применение единых интерфейсов информационного обмена между элементами системы интеграции;
-	унификация набора используемых словарей и классификаторов, применение для их организации требований международных стандартов и спецификаций;
-	применение типовых языков программирования и представления данных вне конкретного ИР;
-	обеспечение возможности интеграции ИР имеющих различных владельцев без нарушения их прав собственности, выполненных по различным принципам, в различных средах, различными разработчиками.
Дружественность к пользователю реализуется посредством обеспечением доступа распределенного пользователя к ресурсам системы интеграции вне зависимости от технологий передачи информации, способа доступа, удаленности от ресурса и т.д. Важным является также единство применяемого интерфейса пользователя интегрированными ресурсами, его независимость от операционных систем, технологических платформ и принципов организации. Также, для обеспечения дружественности к пользователю, в системе интеграции необходимо предусмотреть возможность самообучения системы, выполнения автоматических настроек и т.д.
Применение принципов и подходов открытых систем [3-4] необходимо использовать на всех этапах разработки: от выбора стандартов и спецификаций на конкретное решение до выбора аппаратных и программных платформ и сред программирования.
Реализация принципов и подходов открытых систем на разных уровнях интеграции
Анализ положений международных стандартов и публикаций в научной сфере [5-8] позволяет выделить следующие основные уровни интеграции:
-	уровень физической связности, когда обеспечивается взаимодействие различных ИР на уровне реализации обмена информацией на уровне телекоммуникационных протоколов;
-	уровень приложений, когда обеспечивается взаимодействие различных ИР на уровне обеспечения связности между ними, совместной работы и единого интерфейса пользователя,
-	уровень данных, когда обеспечивается взаимодействие различных ИР на уровне обеспечения единого (единообразного) представления и восприятия данных.
Уровень физической связности в настоящее время достаточно хорошо разработан, имеются базовые технологии передачи информации, технологические и программные решения, стандартные протоколы. Принципы и подходов открытых систем на этом уровне реализуется в виде наличия открытых функциональных стандартов (профилей) на элементы базовых телекоммуни-
кационных технологий и на технологии в целом, на стандартные интерфейсы, на среды передачи данных.
Практические решения по интеграции приложений разрабатываются сейчас практически всеми крупными разработчиками аппаратных средств и программного обеспечения: IBM, Sun, Microsoft, IBM, Oracle, рядом европейских и российских компаний. Большинство из них основывается на использовании открытых стандартов и спецификаций, открытых архитектурных решений, стандартных интерфейсов.
При этом разработчики используют оба пути интеграции, перечисленные во введении: либо создавая универсальную оболочку для интеграции (например, WebSphere), либо используя решения на основе WEB-служб и сервис ориентированной архитектуры (SOA).
Интеграция приложений
Интеграция приложений является первым уровнем интеграции, который необходимо создать для обеспечения взаимодействия распределенных ИР и пользователя после обеспечения физической связности между ними. Для ее осуществления необходимо, чтобы в составе ИР была встроенная WEB-служба, реализующая функции адаптера [6-7] для преобразования данных из вида внутреннего хранения в единый вид, определяемой системой интеграции, и обратно. Наличие такой службы не затрагивает целостность ресурса, не меняет его архитектуру, не нарушает его информационное содержание.
Решения, предлагаемые сегодня, используют сервис-ориентирован-ную архитектуру SOA (service oriented architecture).
Стандарт IEEE P1471 [8] определяет, что архитектура программного обеспечения является основополагающим руководством для построения какой-либо системы, реализованной в виде ее компонентов, их отношений между собой и с внешней средой, а также принципов проектирования и эволюции системы.
Архитектура, ориентированная на SOA, обладает следующими свойствами: модульностью, возможностью инкапсуляции, документированным интерфейсом. Выделяют три уровня архитектуры SOA: системная архитектура (первый уровень), оркестровка сервисов (маршрутизация на базе контента), управление метаданными, мониторинг и администрирование, безопасность, надежность, готовность, масштабируемость (второй уровень) и функциональные элементы (третий уровень).
SOA позволяет разработчикам, провайдерам и потребителям сервисов взаимодействовать вне зависимости от использованных ими технических решений и с минимальным знанием друг о друге - достаточно уметь идентифицировать и использовать необходимый сервис. Взаимодействие с сервисами может быть прямое или опосредованное через ПС промежуточного слоя (интеграционные брокеры и очереди сообщений).
SOA поддерживает синхронный режим сервиса, то есть при отработке запроса обе стороны находятся в режиме взаимодействия. SOA использует
для интеграции приложений web-сервисы. Выделяют два поколения развития web-сервисов. Первое поколение WEB-сервисов обеспечивало открытие существующих систем для внешнего взаимодействия. Второе поколение WEB-сервисов основано на обмене документами, интерфейсах взаимодействия и многочисленных расширениях протокола SOAP.
Все продукты, входящие в семейство WebSphere, созданы на основе открытых стандартов. Инструменты среды поддерживают текущие версии таких стандартов, как XML, WEB -сервисов и UML.
Применение принципов и подходов открытых систем при осуществлении интеграции приложений осуществляется посредством применения:
-	открытых стандартов и спецификаций, функциональных стандартов (профилей), определяющих основные требования и решения;
-	открытой архитектуры, определяющей решение по интеграции;
-	открытых языков программирования и открытых программных платформ;
-	единых стандартных интерфейсов.
За счет этого обеспечивается:
-	множественность доступных для интеграции типов ИР;
- интеграция распределенных ИР;
-	вариативность архитектурных решений, аппаратно-программных сред реализации и разработчиков ИР.
Таким образом, технологии интеграции приложений, основанные на использовании SOA и WEB-сервисов, должны служить основой для решения интеграционных задач в области фундаментальных и прикладных научных исследований.
Интеграция данных
Необходимость интеграции данных возникает после осуществления интеграции приложений, когда уже обеспечена логическая связность ИР и пользователя и возникает необходимость в устранении следующих неоднородностей в восприятии данных, получаемых от распределенных ИР:
-	различия в представлении одинаковых данных, включая написание, последовательность, синтаксис, формат и т.д.;
- различия в интерпретации однотипных данных;
-	семантики данных, имеющих одинаковое написание и различный смысл;
-	единообразия написания и толкования объектов.
Проблема интеграции данных возникает при решении ряда управленческих задач, связанных с необходимостью поиска конкретной информации по запросу, и обусловлена многообразием видов ресурсов, моделей и сред, подходов к организации хранения и представления информации, программных сред, способов доступа и т.д.
Среди основных решений по интеграции данных можно выделить проекты электронного правительства, электронного государства и электронного бизнеса [9-12].
Таким образом, интеграция данных является вторым уровнем интеграции, который необходимо создать для обеспечения взаимодействия распределенных ИР и пользователя после обеспечения логической связности между ними.
Реализация семантической связности требует, чтобы встроенная ’^ЕВ-служба в составе ИР, реализующая функции адаптера, выполняла не только логическое преобразование данных, но и осуществляла семантическое преобразование к единому виду данных, определяемых содержанием словарей и классификаторов [1] из вида внутреннего хранения и обратно.
Возможны и другие решения, когда подобное преобразование осуществляется на стороне пользователя или в промежуточном между ИР и пользователем слое.
Эффективность каждого из решений и их применимость в каждом конкретном случае можно определить и выработать соответствующие рекомендации. Главное же, что их объединяет, это осуществление преобразования семантики ИР в единую семантику пользователя.
Применение принципов и подходов открытых систем при интеграции данных заключается в использовании следующих функциональных решений:
-	стандартных представлениях данных, базирующихся единых словарях и на общепризнанных классификаторах;
-	модернизации языка представления данных для обеспечения семантической однородности;
-	унификации описания и представления объектов;
-	единых регламентов, описывающих правила создания ИР, представления данных в ИР, интерпретации данных в ИР.
Заключение
Многообразие решений, моделей и архитектур, разрабатывающихся в настоящее время, говорит о том, что сами процессы интеграции находятся только на начальном этапе своего развития. Вместе с тем, в ближайшее время следует ожидать появления стандартизованных (де-факто и де-юре) моделей интеграции и архитектурных решений, что позволяет выразить уверенность в том, что на рынке появится 3-5 общепризнанных эффективных решений, а дальнейшее развитие интеграционных процессов пойдет по пути их совершенствования.
На уровне физической связности мы такие решения имеем. Здесь возможно только появление более совершенных технологий передачи данных.
На уровне логической связности большинство производителей прошли начальный этап пути, выработали базовые подходы и приступили к их практической реализации.
На уровне семантической связности при полной ясности в целом того, что и как надо делать, практических работ по разработке, модернизации и актуализации классификаторов, создания унифицированных словарей, а, главное, работающих решений, крайне мало.
Таким образом, можно сделать вывод о том, что необходим перенос центра тяжести от работ, связанных с логической интеграцией на семантику. Применение принципов и подходов открытых систем для решения всего спектра задач интеграции даст экономию инвестиций и обеспечит эффективность самой интеграции.
Список использованных источников
1.	Петров А.Б. Модель интеграции информационных ресурсов на основе стандартных словарей запросов, описания ресурсов и протоколов обмена и представления. -Современные проблемы информатизации в системах моделирования, программирования и телекоммуникациях. СПИ-МП-2004 - Сб. трудов IX Международной открытой научной конф. Выпуск 9. - Воронеж: «Научная книга», 2004. - с. 369-370.
2.	Батоврин В.К., Петров А.Б. и др. Интеграция информационных ресурсов на основе методов функциональной стандартизации. Труды XI Всеросс. научно-методич. конф. «Телематика '2004» - С.П., 7-10 июня 2004 г. - с.47-48.
3. Батоврин В.К., Королев А.С., Петров А.Б. Технология интеграции распределенных информационных ресурсов. -	Информационные технологии моделирования и управления №7(25), 2005 - с. 987-992.
4. Батоврин В.К., Гуляев Ю.В., Петров А.Б. и др./ Под ред. Олейникова А.Я. Технология открытых систем. - М., «Янус-К», 2004. - 288 с.
5.	Концепция создания интегрированной автоматизированной информационной системы Минобразования России (проект). Телекоммуникации и информатизация образования. №1(8), январь-февраль 2002, стр. 5-17.
6.	Когаловский М.Р. Интеграция данных в информационных системах./Сб. трудов III-й Всероссийской практической конференции «Стандарты в проектах современных информационных систем». М., 2003 - с.83-85.
7. М.Р. Когаловский. Энциклопедия технологий баз данных. - М.: Финансы и статистика, 2002. - 800 с.
8.	IEEE P1471-2000 Recommended Practice for Architectural Descriptions.
9.	Электронное правительство: Рекомендации по внедрению в Российской Федерации. Под редакцией Дрожжинова В.И., Зиндера Е.З. - М.: ЭКО-ТРЕНДЗ, 2004.
10.	SAGA. Standards and Architecture for e-government Applications. Version 2.0. KBSt Publication Series ISSN 0179-7263, Vol. 59, December 2003.
11.	E-Gov Enterprise Architecture Guidance (Common Reference Model). Draft - Version 2.0, FEA Working Group, 25 July 2002.
12.	http://www.govtalk.gov.uk. e-Government Interoperability Framework. Version 6.0. 30 April 2004.
Подписной индекс в объединенном каталоге «Пресса России» 41944

=====



﻿УДК 681.3
АЛГОРИТМ ВЗАИМНОГО ИСКЛЮЧЕНИЯ В ПИРИНГОВЫХ СИСТЕМАХ
В.В. Губарев, A.A. Обейдат
Новосибирский государственный технический университет E-mail: atefob@hotmail.com
Предложен алгоритм взаимного исключения одновременного доступа разных процессов к одному и тому же объекту в динамических П2П системах, ориентированный на уменьшение служебного трафика. Основная идея его - передача сообщений между запросными узлами и координатором. Информация n дубликатов объекта R публикуется в n узлах, (в координаторе и его кандидатах). Узлы посылают запрос координатору собственников дубликатов, чтобы получить доступ к объекту. В работе описывается актуальность, существо алгоритма, экспериментально, путем имитации, оценивается его масштабируемость и эффективность.
Ключевые слова:
Распределенные системы, пиринговые системы, взаимное исключение, Интернет-приложения.
1.	Введение и постановка задачи
Одно из последних направлений распределенных информационных систем и сетей - пиринговые сети - переживает в настоящее время активное становление [1-5]. В связи с молодостью и перспективностью в теории их создания и практического применения появляются все новые и новые фундаментальные задачи, требующие неотложного решения. Одной из таких является задача взаимного исключения - устранения возможности одновременного доступа разных пользователей к одному и тому же объекту сети в тех критических ситуациях, когда одновременное выполнение запросов этим объектом не допускается. Хотя эта задача решается в традиционных средствах параллельных вычислений, специфика П2П не всегда позволяет эффективно использовать известные решения. Существующие для аналогичных П2П решения удовлетворяют не всем требованиям П2П-систем.
В связи с этим цель настоящей работы - разработка алгоритма взаимного исключения в П2П, отвечающего требованиям эффективности, надежности и масштабируемости. Для достижения поставленной цели в работе решаются следующие задачи:
1.	Описание модели рассматриваемых систем.
2.	Рассмотрение операций процесса тиражирования дубликатов объекта.
3.	Описание и исследование нового алгоритма взаимного исключения, отличающегося отсутствием недостатков, присущих существующим алгоритмам, и удовлетворяющего требованиям упорядоченности, масштабируемости, децен-трализованности и отказоустойчивости сети.
4.	Имитационное сравнение предложенного алгоритма с существующими алгоритмами по масштабируемости и эффективности.
2.	Модель рассматриваемых систем
Рассматриваемые в данной работе алгоритмы основаны на следующей модели, описывающей динамические пиринговие системы.
1.	Система состоит из равноправных узлов. Обозначим множество узлов через {д,/=0,Ж-1}, где
N - общее количество узлов в системе, а р -узел с идентификатором ¡ё. Каждый узел может быть клиентом (получателем) и в то же время сервером (поставщиком) объектов. Узел, выступающий как сервер, т. е. имеющий дубликат совместно используемого объекта (данных) и готовый представить его в ответ на запрос, назовем серверным узлом (СУ).
2.	Каждому доступному пользователям объекту Щ (реальному файлу данных или вычислительному объекту) соответствует определенный набор узлов, содержащих дубликаты запрашиваемых пользователями объектов. Набор объектов обозначим через П={Щ/= 0,т-1}, где т - количество объектов, а набор дубликатов (реплик) гр соответствующих объекту Щ, обозначим через Г,={гр1=0,п-1}, где п - количество дубликатов. Каждый дубликат , объекта Щ содержится в определенном узле. Мы условно назовем узел, который имеет дубликат I объекта, копией (репликой или дубликатом) I.
3.	Дубликаты всегда доступны, но их внутреннее состояние может быть случайно сброшено вследствие сбоя. После обнаружения сбоя дубликат вновь восстанавливается в сети с прежним значением идентификатора узла ¡ё.
4.	Каждый объект Щ имеет уникальный двоичный т-битный идентификатор (ключ) К, который вычисляется как хэш текстового имени объекта (например, Х). Идентификатор К может быть вычислен с использованием конфликтоустойчивой (не допускающей повторения) хэш-функции (например, SHA-1 [6]), так же, как идентификатор узлов. Узел V, системы с идентификатором, совпадающим с идентификатором К объекта Щ, выступает в качестве координатора набора Г, дубликатов объекта.
3.	Тиражирование дубликатов объекта
Одной из важнейших задач П2П является тиражирование дубликатов, обеспечение их аутентичности. Существующие методы тиражирования дубликатов на все узлы являются громоздкими. Поэ-
тому предлагается новый метод наборного (не поголовного, а востребованного, текущего) тиражирования.
Основная идея метода - тиражировать дубликаты изменяемых объектов не во всех узлах сети, а только в активных, т.е. по мере необходимости обращения узлов к дубликатам. Для этого предлагается организация набора заинтересованных узлов, объединяемых координатором. Предусматривается, что собственники дубликатов некоторого объекта организованы в набор Г,. Каждое множество Г, имеет уникальный идентификатор К]. Идентификатор К, набора присваивается с использованием хеширования имени объекта. В качестве координатора для соответствующего набора выступает узел V, с идентификатором, являющимся численно наиболее близким к идентификатору набора К,.
3.1.	Операции метода
Соединение: чтобы получать обновление дубликата, узел, содержащий дубликат, который надо поддерживать в современном состоянии, инициирует операцию «Соединение» (т. е. присоединения к набору).
Разъединение: если узлу не требуется поддерживать свой дубликата в современном состоянии, он инициирует операцию «разъединение» (т. е. отсоединения от набора), тем самым оставив без внимания текущие модификации дубликата, экономя ресурсы (свои и сети).
Восстановление: при восстановлении и возвращении в систему, узел инициирует операцию «восстановление», по выполнении которой получает современную версию дубликата объекта.
3.1.1.	Операция «^единение». На рис. 1, а, приведена схема операции соединение для собственника дубликата объекта.
Шаг 1. Узел р - собственник дубликата объекта просит оверлей вычислить хешированный идентификатор К его объекта Щ.
Шаг 2. р просит оверлей послать сообщение соединение М=^ё, соединение, К) узлу V, с идентификатором ¡ё, наиболее близким к хешированному идентификатору К .
Шаг 3. р получает ответ от координатора, что он стал членом набора Г,.
При получении координатором сообщения соединение он начнет выполнять следующие шаги (см. рис. 1, б):
Шаг 1. Координатор V, или кандидат получает сообщение М (соединение).
Шаг 2. Координатор V, проверяет, пришло ли это сообщение от собственника дубликата или нет. Если да, он (на Шаге 3) отправляет собственнику ответ, содержащий текущую версию дубликата объекта.
Шаг 4. Координатор V, проверяет, существует ли набор Г с идентификатором К или нет.
Шаг 5. Если набор существует, это означает, что узел V, уже является координатором множества Г,. В этом случае V, добавляет информацию о собственнике дубликата в список собственников и отправляет сообщение соединение узлу V/, чей идентификатор наиболее близок к нему, чтобы этот узел стал новым кандидатом координатора V,,. Число кандидатов вместе с координатором равно числу дубликатов.
С
Начало
К'-ХЭ	ш(Я/)
2 1	Г
Послать М к координатору
3 1	г
Получить ответ
3 ^		г
Послать ответ
—►
^ Конец ^
а. Собственник дубликата
^ Конец ^
б. Координатор
Рис. 1. Схема операции «соединение»
1
5
6
Шаг 6. Если набор не существует, источник сообщения - собственник дубликата осознает, что он является координатором v; для нового набора собственников дубликатов Г;, поэтому должен создать список Г,- и добавить отправителя сообщения в свой список; в противном случае он будет кандидатом vc для координатора.
3.1.2.	Операция «разъединение». Когда узлу pt не требуется поддерживать свой дубликата в современном состоянии, он инициирует операцию разъединения, чтобы выйти из набора. Координатор, получая это сообщение, удаляет информацию о дубликате узла pt из своего списка и информирует об этом своих кандидатов.
3.1.3.	Операция «воссоединение». Шаги операции восстановления следующие.
Шаг 1. Когда любой узел pt желает получить современную версию дубликата объекта, он посылает своему vj сообщение ВОССТАНОВЛЕНИЕ с указанием имеющейся в узле версии дубликата.
Шаг 2. При получении сообщения ВОССТАНОВЛЕНИЕ, v; определяет различие между последней версией дубликата, находящегося в системе, и версией дубликата узла р.
Шаг 3. Если отличия в дубликатах нет, v; включает узел Pi в набор. Если дубликаты отличаются, v; отправляет сообщение ОБНОВЛЕНИЕ узлу р, содержащее список модификаций OPS.
Шаг 4. При получении сообщения ОБНОВЛЕНИЕ узел Pi выполняет модификации в списке OPS и приводит свой дубликат объекта в соответствие с текущей версией объекта. После этого узел pt включается в набор Г,
4.	Алгоритм взаимного исключения одновременного
доступа для изменения объекта
Вторая важная задача - это взаимное исключение доступа к одному и тему же объекту или его дубликатам, когда одновременный доступ недопустим, нежелателен (один узел хочет читать содержимое объекта, другой записывать или изменять его либо оба узла хотят изменить содержимое объекта). Недостатки существующих методов - в трудности их масштабирования.
Предложенный алгоритм основан на организации набора узлов и передаче сообщений только между запросными узлами и координатором. Поэтому назовем его условно алгоритмом узел-координатор (У2К). Запросные узлы посылают запрос координатору, чтобы получить доступ к объекту. При получении запроса на использование объекта R, координатор v; уведомляет об этом всех своих кандидатов и посылает ответ запросному узлу. Ответ содержит информацию о текущем владельце, работающем с объектом, и очереди ожидающих узлов. После завершения работы с объектом узел посылает координатору сообщение ОСВОБ. Когда v; получает сообщение ОСВОБ от текущего владельца объекта, он уведомляет об этом все запросные узлы набора, включая
и кандидатов координатора, и, если только что завершивший работу с объектом узел производил модификацию объекта, сообщает им о новой версии объекта, а при необходимости тиражирует ее.
Полномочие доступа к объекту предоставляется при одновременном соблюдении следующих условий:
a)	Допустимо множество операций чтения в одно и то же время.
b)	Разрешается только одна операция записи в одно то же время.
c)	Отсутствие (запрет) пары или поле операций «чтение - запись» в одно и то же время.
Шаги алгоритма У2К следующие.
Входящими данными алгоритма являются:
¡ё: идентификатор узла ¡;
с/. идентификатор клиента, владеющего объектом Щ; / время получения полномочий (разрешения) на доступ к объекту Щ; 4„: временная отметка, переменная состояния, всегда хранящаяся в р, изначально ноль;
pQ¡. частичный перечень ожидающих запросов, который содержит сведения о запросах всех клиентов, упорядоченных по времени; 2 полная очередь запросов, изначально пустая, используется только координатором;
Т время аренды, полномочие на доступ объекта предоставляется на некоторое время Т. Координатор отслеживает время окончания блокировки и снимает ее, когда время Т истекает;
Я/, идентификатор объекта,;
М: сообщения между узлами, которые обычно содержат: ^ - идентификатор источника сообщения, запросного узла р; 1ео - временная отметка запроса; р2 - частичная очередь запросов; с1- пункт доставки сообщения; (с,/ - текущий собственник и временная отметка; Тип сообщения: (ЗАПРОС, ОСВОБОЖДЕНИЕ (ОСВОБ), ОТВЕТ).
Шаг 1. Когда узел р1 хочет получить доступ к определенному объекту Щ, он посылает координатору сообщение ЗАПРОС(s=id, 4„, ё=К). В качестве координатора рассматривается узел системы с идентификатором, наиболее близким к хешированному идентификатору К, ассоциированного объекта Щ.
Шаг 2. Когда узел V,, который выступает в качестве координатора для набора дубликатов, получает запрос на доступ к объекту Щ от узла р, он определяет, доступен объект Щ или нет. Если да, то он блокирует объект Щ для узла р1 (т. е. с=р, tcj=M•tJ, посылает сообщение ОТВЕТ «Да» запросному узлу и информирует об этом его кандидатов. В противном случае он добавляет запрос в очередь.
Шаг 3. Когда узел р1 получает сообщение ОТВЕТ «да», он проверяет, является ли он сам владельцем объекта или нет. Если да, он может войти в критическую секцию (КС) и начать использовать
объект Щ. Когда он заканчивает свою работу в КС, он посылает V, сообщение ОСВОБ. В противном случае, если он получает сообщение ОТВЕТ «нет», ему требуется ждать в течение определенного времени ожидания ^=1^к, где I - число узлов в очереди р2, 4с - время нахождения узла в КС.
Шаг 4. При получении координатором сообщения ОСВОБ от текущего владельца КС, он проверяет, пуста ли очередь запросов. Если нет, он исключает из очереди нового владелица, посылая ему ОТВЕТ «да», и рассылает сообщение ОСВОБ всем остальным узлам очереди <2. Если координатор не получит от текущего узла сообщение ОСВОБ в течение прогнозного времени (Т), он поймет, что владелец объекта вышел из строя. Тогда он даст полномочие на доступ к объекту следующему узлу в очереди. Если очередь закончилась, координатор ожидает, новые запросы.
Шаг 5. При получении от координатора сообщения ОСВОБ, узел р1 ждет свою очередь. Если узел р1 не получает сообщение ОТВЕТ или ОСВОБ в течение прогнозного времени ^, он вновь (шаг 1) посылает сообщение ЗАПРОС узлу в качестве координатора.
Итак, шаги 1-5 повторяются по мере того, как узлы хотят получить доступ к совместно используемому объекту Щ.
5.	Свойства У2К
Теперь рассмотрим, какие свойства имеет У2К
и,	следовательно, каким требованиям он удовлетворяет.
Первое свойство - упорядоченность. Прежде всего отметим, что У2К соответствует требованию упорядоченности, т. к. запросы удовлетворяются в порядке «первым пришёл, первым обслужен (FCFS)». Действительно, только координатор V , содержит 2 и принимает решение относительно доступа к объекту в соответствии со своей информацией. После получения сообщения (ЗАПРОС или ОСВОБ) координатор проверяет состояние объекта. Если он свободен, V, посылает сообщение «ДА» следующему в очереди узлу. Это сообщение содержит разрешение на использование объекта, доступ в его КС. По его получении запросный узел входит в КС. Только V, может предоставить полномочие на доступ к общему объекту. Таким образом У2К обладает свойством упорядоченности.
Второе важное свойство - степень загрузки сети служебным трафиком. Как нетрудно убедиться, она будет ниже, чем в существующих алгоритмах, поскольку У2К использует меньшее количество операций, чем другие алгоритмы. На самом деле обмен сообщениями в алгоритме осуществляется только между запросными узлами и координатором вместо обмена сообщениями со всеми узлами как в существующих алгоритмах. Например, сообщение ЗАПРОС посылается только координатору, а не всем узлам, хранящим п дубликатов, как в других алгоритмах, основанных на кворуме [7, 8].
Свойство децентрализации. У2К достигает лучших показателей децентрализации и отказоустойчивости, т. к. Qj хранится в v; и его кандидатах, а частичные очереди - во всех запросных узлах. Поэтому все узлы локально определяют следующего владельца объекта при получении сообщения ОСВОБ или по окончании времени аренды объекта. Несмотря на то, что Qj хранится в координаторе и кандидатах, У2К гарантирует взаимное исключение, но с другой стороны У2К отказоустойчив: когда координатор и кандидаты выходят из строя одновременно, запросные узлы могут и узнают об этом, не получая сообщение ОСВОБ от текущего владельца объекта в пределах времени аренды. Это означает, что когда координатор выходит из строя, запросные узлы вновь посылают свои запросы с частичными очередями (pQ) новому координатору. Новый координатор объединит все полученные pQj в одну полную очередь Qj.
Свойство аутентичности. Требование аутентичности удовлетворяется, если в любой момент времени содержимое всех востребованных дубликатов объекта одинаково (т. е. удовлетворяется условие тождественности всех копий одной). Это требование можно обеспечить разными путями. Первый -одновременной заменой всех старых дублей измененного объекта новой редакцией (тиражированием новых дублей) сразу же по окончании изменения объекта до выполнения следующего по очереди запроса. Второй путь, описанный в п. 2, выдачей последней редакции дублей только тем узлам, которые за ними сейчас обращаются. Ясно, что при этом, чтобы обеспечить аутентичность дубликатов последней версии объекта, У2К, использующий метод отслеживания активных дубликатов объекта, в случае остановки, сбоя или тиражирования нового дубликата объекта вначале должен обновить содержимое старого дубликата объекта.
6.	Результаты имитационного моделирования У2К
Для сравнения У2К и других известных [7, 8] алгоритмов взаимного исключения применим подход имитационного экспериментирования с алгоритмами. Программную реализацию предложенного и существующих алгоритмов взаимного исключения выполним на основе системы FreePastry [9, 10]. Разработанная программа, стартуя, создает набор узлов, расставленных согласно сетевой топологии Pastry. Цели моделирования - проверить масштабируемость и загрузку сети служебным трафиком (т. е. определить число сообщений).
Одним из главных качеств алгоритма взаимного исключения является его пригодность к масштабируемости сети, т. е. к увеличению количества узлов сети. Для экспериментального компьютерного исследования масштабируемости У2К по сравнению с другими, хорошими по этому показателю, алгоритмами, выполняем их одинаковую программную реализацию. Для этого следует реализовать на ЭВМ компьютерные модели сетей и запустить на компьютере несколько раундов работы смоделиро-
3000	4000
Ч1СЛО узлов
Рис. 2. Сравнение алгоритмов по среднему количеству сообщений
ванных сетей. Выполняем несколько раундов моделирования (в среднем свыше десяти) и находим средние значения экспериментальных результатов. В каждом раунде каждая сеть (точнее её модель) проделывает весь тот объем работы, который проделывают узлы в реальной сети. При этом от раунда к раунду может меняться число узлов сети, а также число запросов доступа к объектам, посылаемых множеством случайно выбранных узлов. Делается это таким образом, что одинаковые показатели параметров сети остаются неизменными для всех сравниваемых в том же раунде алгоритмов. А именно, в каждом раунде узел наугад освобождает 50 % удерживаемых им объектов. Число объектов, дубликатов и запросов в каждом раунде постоянно и составляет 65, 10 и 20 соответственно.
На рис. 2 представлено сравнение У2К с алгоритмами Sigma [7], E2E [8] и NONE2E [8] по среднему числу сообщений. Как видно из рисунка, все зависимости почти линейны относительно числа узлов. В У2К загрузка сети служебным трафиком в среднем в 2 раза меньше, чем в сквозном Е2Е алгоритме. Следовательно, У2К имеет лучшие свойства
по масштабируемости. В правой части рис. 2 представлены отношения выборочного среднеквадратического отклонение о к среднему х числу сообщений. Как видно из приведенных данных, представленные на рисунке зависимости характеризуются сравнительно малой стохастичностью (отношения О/- - единицы либо один, два десятка %), т. е. близки к функциональным. Это подтверждает справедливость выводов по результатам имитации.
Выводы
Описаны новые алгоритмы тиражирования дубликатов и взаимного исключения в П2П. Обоснована актуальность разработки и приведены модель системы, общее описание алгоритмов, их операции и свойства. Полученные результаты имитации алгоритма взаимного исключения выявили, что он обладает намного лучшей эффективностью, чем существующие алгоритмы, и хорошо масштабируем. Таким образом, алгоритм способен поддерживать большее количество узлов. Предложенные алгоритмы инвариантны к его разной сетевой реализации в структурированных П2П.
СПИСОК ЛИТЕРАТУРЫ
1.	Мартин Дж. Системный анализ передачи данных. - М.: Мир, 1975. - Т. 1. - 256 с.
2.	Обейдат А.А., Губарев В.В. Обзор алгоритмов распределенного взаимного исключения в динамических пиринговых системах // Сб. научных трудов НГТУ. - 2007. - № 2 (48). - С. 63-68.
3.	Ganesan P., Gummadi P.K., Garcia-Molina H. Canon in G major: Designing DHTS with hierarchical structure // ICDCS. - Tokyo, 2004. - P. 263-272.
4.	Kumar A. Hierarchical Quorum Consensus: A New Algorithm for Managing Replicated Data // IEEE Transactions on Computers. -1991. - V. 40. - № 9. - P. 996-1004.
5.	Stoica I., Morris R., Karger D., Kaashoek M.F., Balakrishnan H. Chord: A scalable peer-to-peer lookup service for internet applications // Proc. of ACM SIGCOMM. - 2001 [Электронный ресурс]. - Режим доступа: - URL: http://iptps04.cs.ucsd.edu/ pa-pers/karger-subgroup.pdf/. - 15.05.2007.
6.	FIPS 180-1, «Secure hash standard», Tech. Rep. Publication 180-1, Federal Information Processing Standard (FIPS), National Institu-
te of Standards and Technology, US Department of Commerce, Washington, D.C., April, 1995.
7.	Shiding Lin, Qiao Lian, Ming Chen, Zheng Zhang. A practical distributed mutual exclusion protocol in dynamic peer-to-peer systems // 3rd International Workshop on Peer-to-Peer Systems (IPTPS’04). - San Diego, CA, USA, Feb., 2004. - P. 1-10.
8.	Muhammad M., Cheema A.S., Gupta I. Efficient mutual exclusion in peer-to-peer systems // 6th IEEE/ACM International Conference on Grid Computing. - 2005. - P. 296-299.
9.	Hoye J. Freepastry [Электронный ресурс]. - Режим доступа: http://freepastry.rice.edu/FreePastry/. - 15.01.2007.
10.	Rowstron A., Druschel P. Pastry: Scalable, distributed object location and routing for large-scale peer-to-peer systems // Proceedings of Middleware, Nov. 2001 [Электронный ресурс]. - Режим доступа: research.microsoft.com/~antr/PAST/pastry.pdf. - 15.01.2007.
Поступила 03.04.2009 г.

=====



﻿A = A + A,	(3)
где A - сообщение не содержит атаку, A - сообщение содержит атаку, но она не обнаружена активными элементами межсетевого экрана.
P(А) = І - Pa	(4)
Найдём P( A ) . Для этого надо умножить вероятность того, что сообщение содержит атаку на вероятность того, что эта атака не будет обнаружена активными элементами. Вероятность того, что атака не будет обнаружена равна (1- Py) *
* (1-Pag) * (1-P,ds). Отсюда
P( A) = Pa [(І-Ppf ) * (І-Pag ) * (І- Pids)] ;
P(A) = P(A) + P(A) = І - Pa + Pa [(І - Ppf )] * (І - Pag ) * (І - Plds ) =
0,93224.
Вероятность того, что атака будет обнаружена активными элементами межсетевого экрана P(A) = І - P(A) = 0,06776.
Для сравнения, вероятность обнаружения атаки из заданного множества атак А только при использовании пакетного фильтра составляет 0,022.
Предложенная архитектура межсетевого экрана позволяет создать межсетевой экран, который сочетает в себе функции пакетного фильтра и шлюза прикладного уровня.
Кроме того, отличительной особенностью такого межсетевого экрана является использование интегрированных систем обнаружения вторжений и почтового фильтра, что позволяет обеспечить максимальную безопасность корпоративных сетей при их взаимодействии с публичными и общедоступными сетями.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Олифер В.Г., Олифер Н.А. Компьютерные сети - СПб: Питер, 2001. - 864 с.
2.	Лукацкий А.В. Firewall - не панацея. - http://www.citforum.ru
3.	Польман Н., Кразерс Т. Архитектура брандмауэров для сетей предприятия / Пер. с англ. - М.: Изд. дом «Вильямс». 2003. - 432 с.
4.	Лукацкий А.В. Новые грани обнаружения и отражения угроз. - http://www.citforum.ru
М.К. Климов Россия, г. Ростов-на-Дону, РВИ РВ
ЗАЩИТА ИНФОРМАЦИИ В КРИТИЧЕСКИ ВАЖНЫХ СЕГМЕНТАХ СИСТЕМ АВТОНОМНОГО ЭЛЕКТРОСНАБЖЕНИЯ С КОМПЬЮТЕРИЗИРОВАННЫМ УПРАВЛЕНИЕМ
В настоящее время критически важные сегменты (средства управления) систем автономного электроснабжения с компьютеризированным управлением предназначены для выполнения весьма ответственных задач обеспечения гарантированного электроснабжения объектов и комплексов специального назначения. Сис-
темы автономного электроснабжения состоят из энергетических силовых установок и средств управления ими. Они полностью автоматизированы.
Чтобы обеспечить высокую надежность и более гибкое управление системой автономного электроснабжения осуществляют компьютеризацию средств управления путем внедрения цифровой аппаратуры со специальным программным обеспечением (СПО).
Для того чтобы компьютеризированная система автономного электроснабжения (КСАЭ) функционировала в автоматическом режиме и была управляема, необходимо:
-	контролировать с помощью датчиков параметры КСАЭ, например, напряжение, частоту тока, мощность, время работы;
-	осуществлять сбор и обработку информации, получаемой от датчиков КСАЭ, доставлять эти данные по каналам связи в автоматизированное рабочее место (АРМ) пункта управления;
-	производить сравнение текущих значений параметров КСАЭ с базой данных эталонных значений;
-	вычислять разностный сигнал для автоматизированного оптимального управления КСАЭ.
Схема защиты информации критически важных сегментов перспективных систем автономного электроснабжения с компьютеризированным управлением представлена на рис. 1.
Специфической особенностью критически важных сегментов КСАЭ является то, что информация управления, расчетные программы и микропроцессорные устройства непосредственно управляют электроустановкой в реальном масштабе времени. Наиболее опасной угрозой является несанкционированное включение электроустановки путем использования уязвимостей в тракте сбора, передачи и выдачи информации на пункт управления. Нарушение функционирования КСАЭ можно считать наиболее существенным фактором преднамеренного вывода из строя объектов и комплексов специального назначения.
Объектом защиты в КСАЭ является технологическая информация, включающая:
-	оцифрованные сигналы от датчиков, контролирующих необходимые параметры КСАЭ;
-	базу эталонных параметров КСАЭ;
-	пакеты данных, получаемые с пункта управления КСАЭ и передаваемые на него по проводным и радиоканалам связи, обеспечивающих программное управление функционированием КСАЭ;
-	данные, используемые для цифрового программного управления адаптером, обеспечивающим информационное взаимодействие между датчиками и интерфейсами АРМ со средствами формирования сигналов управления КСАЭ;
-	сведения о нештатных ситуациях в КСАЭ, например, несанкционированное ее включение или выключение.
Нарушение безопасности информации в КСАЭ может произойти путем:
-	внедрения ложных программ и эталонных параметров,
-	программно-технического воздействия (ПТВ) на сигналы управления КСАЭ, передаваемые по различным технологическим каналам.
Все эти воздействия могут привести к частичному либо полному нарушению технологического процесса управления КСАЭ.
Рис. 1. Схема защиты информации критически важных сегментов перспективных систем автономного электроснабжения с компьютерным
управлением
На схеме приняты обозначения:
•—►	- уязвимые места КСАЭ;
О	- критически важные сегменты КСАЭ.
Опасность нарушения функционирования КСАЭ состоит в том, что измеряемые ее параметры не носят строго конфиденциальный характер. Преднамеренное искажение этих значений или деструктивное программно-техническое воздействие на базу эталонных данных и на передаваемую в каналах связи информацию о сигналах управления дезорганизует работу КСАЭ и, как следствие, приводит к полному выводу ее из строя.
При разработке средств защиты информации для инфраструктуры КСАЭ ее уровни защиты от угроз безопасности информации могут реализовываться следующим образом (рис. 1):
-	контролем физического доступа к элементам КСАЭ путем организации технических мероприятий по недопущению посторонних лиц (1 - й уровень);
-	защитой доступа к информации, передаваемой по различным технологическим проводным и радиоканалам связи, установкой в коммуникационном оборудовании программных (программно-технических) средств разграничения доступа к сигналам управления КСАЭ (2 - й уровень);
-	защитой информации в микропроцессорных устройствах и адаптерах с цифровым программным управлением путем специальных проверок микропроцессорных устройств и адаптеров на предмет наличия не декларированных возможностей (3 - й уровень);
-	защитой базы данных эталонных контролируемых параметров и специального программного обеспечения обработки информации о сигналах управления КСАЭ, формируемых в АРМ пункта управления, от несанкционированного доступа (НСД) и ПТВ путем внедрения сертифицированных программных (программно-технических) средств защиты информации (4 - й уровень);
-	защитой информации от НСД, ПТВ и воздействия компьютерных вирусов на уровне общего программного обеспечения АРМ пункта управления путем настройки средств защиты информации операционной системы, системы управления базой данных и установки антивирусных программ (5 - й уровень).
Контролируемыми параметрами (событиями безопасности) при реализации уровней защиты информации в КСАЭ и проверке порядка функционирования являются: время запуска или переключения системы, допустимые значения параметров (напряжение, частоту тока, мощность и т.д.) при переводе системы в различные режимы функционирования и номинальные значения параметров при штатной работе КСАЭ.
Таким образом, к наиболее опасным угрозам нарушения безопасности информации в КСАЭ следует отнести несанкционированное включение, искажение сигналов от датчиков и нарушение проверочных данных. Реализацию защищенного информационного тракта в КСАЭ целесообразно осуществлять на основе комплексного использования средств защиты информации на всех уровнях протоколов передачи данных и разработки специального программного обеспечения в защищенном исполнении и средств защиты информации АРМ пункта управления и КСАЭ.

=====



﻿7.	Kwitt R., Hofmann U. Robust Methods for Unsupervised PCA-based Anomaly Detection. IEEE/IST Workshop on Monitoring, Attack Detection and Mitigation, Tuebingen, Germany, September 28-29, 2006.
8.	Lincoln labs. KDDCup’99. http://kdd.ics.uci.edu/databases/kddcup99/kdd-cup99.html,
2003.
9.	Gu G., Fogla P., Dagon D., Lee W., Skoric B. Measuring Intrusion Detection Capability: An Information-Theoretic Approach. ASIACCS'06, March 21-24, 2006 Taipei, Taiwan.
10.	Levin I. KDD-99 Classifier Learning Contest:	LLSoft’s	Results Overview.	ACM
SIGKDD Explorations 2000, pp. 67-75, January 2000.
11.	Pfahringer B. Winning the KDD99 Classification	Cup:	Bagged	Boosting.	ACM
SIGKDD Explorations 2000, pp. 65-66, January 2000.
12.	Miheev V., Vopilov A., Shabalin I. The MP13 Approach to the KDD’99 Classifier Learning Contes». ACM SIGKDD Explorations 2000. - P. 76-77, January 2000.
13.	. .,	.	.
// -. - . . - / , 2008. 1.
- C. 10-14.
Карайчев Глеб Викторович
Южный федеральный университет.
E-mail: kgv_rostov@mail.ru.
344091, г. Ростов-на-Дону, пр. Стачки, 235/1, кв. 47.
Тел.: +7 (928) 1252607.
Факультет математики, механики и компьютерных наук; кафедра информатики и вычислительного эксперимента; ассистент.
Karaychev Gleb Viktorovich
South Federal University.
E-mail: kgv_rostov@mail.ru.
App. 47, 235/1, prosp. Stachki, Rostov-on-Don, 344091, Russia.
Phone: +7 (928) 1252607.
Faculty of mathematics, mechanics and computer science; Department of informatics and computing experiment; junior member of teaching staff.
УДК 510.6:656.001
Е.А. Пакулова
МОДЕЛЬ СОВРЕМЕННОЙ СИСТЕМЫ МОНИТОРИНГА ПОДВИЖНЫХ
ОБЪЕКТОВ С ГАРАНТИРОВАННОЙ ДОСТАВКОЙ СООБЩЕНИЙ В ГЕТЕРОГЕННОЙ БЕСПРОВОДНОЙ СЕТИ
Основной целью данной статьи являлось построение модели системы мониторинга транспортных средств (ТС) с использованием нескольких беспроводных . : -, -тов, построена модель системы мониторинга ТС, определены события и команды в модели, а также связи между компонентами модели. В заключение статьи выделены дальнейшие планы работы, направленные на разрабютку и реализацию методов рационального управления технологиями беспроводной связи.
Моделирование; теория множеств; беспроводные технологии связи; система мониторинга транспортных средств.
E.A. Pakulova
THE MODEL OF MODERN MONITORING SYSTEM OF MOBILE OBJECTS
WITH ASSURED DELIVERY OF MESSAGES IN HETEROGENEOUS WIRELESS NETWORK
The main subject of this article is development of transport monitoring system model with the usage of wireless technologies. In this connection the following tasks were decided: the research methods were chosen, which are based on the set theory and the finite automata theory, the events and commands were defined in the model, the connections between the components of the model were specified. The future plans of work directed to development and realization of methods of efficient management of wireless technologies were given in the conclusion.
Modeling; set theory; wireless technologies; transport monitoring system.
Сегодня, в условиях современной жизни, в виду террористических угроз, мы все чаще задумываемся о своей безопасности. Правительства различных стран принимают решения о тотальном контроле значимых объектов, транспортных , . -ются уже зарекомендовавшие себя технологии: системы охранного телевидения, системы управления и контроля доступа, охранно-пожарные сигнализации и мно-.
Отдельной задачей становится обеспечение безопасности граждан на транспорте. В августе 2008 года Правительством РФ было принято постановление №641 «Об оснащении транспортных, технических средств и систем аппаратурой спутниковой навигации ГЛОНАСС или ГЛОНАСС/GPS». Согласно данному постановлению оснащению аппаратурой спутниковой навигации ГЛОНАСС или
/GPS	,	,
( ), -
зуемые для перевозки пассажиров, специальных и опасных грузов [1].
На этом фоне получили большое развитие системы мониторинга ТС. Как пра-
, , технических и эксплуатационных характеристик ТС, контроля маршрута передвижения рейсовых ТС, оповещения владельца в случае тревоги через сервисы . -жую архитектуру. В ее состав входят множество бортовых устройств (или треке), , ( ), -мация с подвижных объектов, и где она анализируется. Для осуществления изложенных функций наиболее часто используется следующий набор технологий: GPS/ГЛОНАСС для определения местоположения объекта и GSM/GPRS для обмена информацией между ДП и ТС. При нормальных погодных условиях, а также
GSM	.
, -, . этом случае должна предоставлять резервные работоспособные каналы для пере, .
:
•	инкассаторская служба;
•	;
•	.
В данной статье рассматривается статичная модель системы мониторинга ТС с использованием нескольких альтернативных друг другу беспроводных технологий передачи данных.
, . -ложим, что система мониторинга ТС состоит из следующих компонентов:
•	бортовые устройства или трекеры - устройства, устанавливаемые на подвижных объектах и собирающие информацию о технических и эксплуатационных характеристиках ТС, а также информацию,
GPS	;
•	ретрансляционные станции (PC)	- неподвижные объекты,
устанавливаемые в городе и выполняющие роль ретрансляторов в
;
•	ДП - пункт, выполняющий функции сбора, анализа и хранения
, .
Все перечисленные компоненты находятся в тесной взаимосвязи: трекер собирает информацию со штатных датчиков и диагностических систем ТС, формирует пакет и отправляет его ДП. Если передача данных ДП в силу каких-либо при, -
, . отправленный пакет получила PC, то она, в свою очередь, отправляет его ДП. Если пакет получил другой трекер, что он также пытается отправить его ДП. Если ДП недоступен, то пакет перенаправляется другому трекеру, ближайшему к ДП, .
,
и станций. Также предположим, что в системе функционирует несколько ДП, на, . -му трекеру или PC не зависит от принадлежности трекеров к определенному ДП.
Дадим представление рассматриваемой модели, построенное на теории .
Представим компоненты системы мониторинга ТС как непустое конечное множество KS. Оно состоит из подмножеств, то есть KS = {TU , SU , CU}, где
TU = {tu1, t„2, ..., V} (Tracker Unit) есть непустое конечное множество бортовых устройств (или трекеров) в системе,
SU = {su1,su2,., sus} (Station Unit) - непустое конечное множество PC,
CP= {cu1, cu2, ... , cuc} (Control Point) есть непустое конечное множество ДП в .
.	TU
-	,
свойствами. Для описания свойств всех элементов универсума введем базу переменных P1, P2,..., Pp, характеризующих показатели соответствующих свойств эле-TU
A; = {ac, ab ..., aa}, где i = 1,., e.
, :
•	P1	A1	=	{a11,	a12,	.	,	a1r},
номер конкретного трекера в системе (каждое бортовое устройство имеет определенный идентификатор или номер, по которому его можно
);
•	Р2 есть значение	из множества А2	= {а21, а22 , ...	,	a2w}, обозначающее
принадлежность	ТС, на котором	установлен трекер, к определенной
службе;
•	Р3 есть значение	из множества А3	= {а31, а32 , ...	,	а3у}, определяющее
количество подключаемых к трекеру датчиков ТС	(в	составе каждого ТС
есть штатные датчики, измеряющие все необходимые эксплуатационные параметры, они могут быть дискретными или аналоговыми);
•	Р4 есть значение из множества А4 = {а41, а42 , ... , а4о}, определяющее наличие сетевых средств (Как правило, современные ТС имеют в своей составе различные сетевые среды для передачи сигналов и команд. Они могут использоваться для подключения новых блоков и устройств, не входящих в базовый набор любого ТС [2]);
•	Р5 есть значение из множества А5 = {а51, а52 , ... , a5g}, определяющего наличие диагностической системы на ТС (как правило современные ТС имеют в своем составе системы бортовой диагностики, позволяющие контролировать состояние систем двигателя, топливной системы, системы зажигания, системы рециркуляции отработавших газов и т.п.).
Аналогичным образом опишем множество РС БИ. Для описания свойств всех элементов данного множества введем базу переменных 2Ь 22, ..., 2Ч, характеризующих показатели соответствующих свойств элементов из множества БИ и принимающих значения из множеств Б; = {Ь0, Ь1, ., Ъь}, где 1 = 1,.. .Д
Опишем некоторые из свойств:
•	<21 есть значение из множества Б1 = {Ь11, Ь12, ... , Ь1Б}, определяющее номер конкретной РС в системе (каждая РС имеет определенный идентификатор или номер, по которому ее можно однозначно отличить от
);
•	22 есть значение из множества Б2 = {Ь21, Ь22, ... , Ь2Б}, определяющее местоположение определенной станции (РС являются неподвижными
,	).
Предположим, что множество СР также является множеством универсумом, содержащим в себе элементы с определенными свойствами. Для описания свойств всех элементов универсума введем базу переменных 01, 02,..., 0С, характеризующих показатели соответствующих свойств элементов из множества СР и принимающих значения из множеств
И; = {го, гь ..., гк}, где ; = 1,., с.
Получим некоторые из свойств:
•	01 есть значение из	множества Ш =	{г11, г12, ... , г1г}, определяющее
номер ДП в системе	(поскольку ДП в	системе может быть несколько, то
);
•	02 есть значение из множества И2 = {г21, г22, ... , г2ё}, определяющее местоположение определенного ДП ОДП являются неподвижными
,	).
•	03 есть значение из множества И3 = {г31, г32, ... , г3w}, определяющее принадлежность к определенной службе (каждый ДП принадлежит к
-	);
•	04 есть значение из	множества И4 =	{г41, г42, ... , г4и}, определяющее
количество обслуживаемых трекеров	(как было указано выше, каждый
);
,	TU,	SU	CP
P1,
P2^ • ^ Pp , Qb Q2, •••, Qq И O1, O2,., °.
Следует также выделить, что все компоненты системы осуществляют долговременное хранение данных, за исключением РС. На ДП осуществляется долговременное хранение данных и их анализ. Трекеры сохраняют информацию в энер-. ,
, -ный промежуток времени в случае сбоя работы системы. Кроме того, в процессе функционирования в компонентах системы происходят различные процессы обра-.
, -
нечное множество процессов обработки информации PS (Processing) и память (или множество блоков памяти) MS (Memory), то есть
Ks= {Ms, Ps},
где PS = {PS1 PS2, PS3}, причем PSi определяет подмножества процессов обработки информации элементов компонентов системы, например,
PS; = { PSy PS;,2 , •••, PS;,r } есть множество процессов обработки информации любого из подмножеств TU, SU или CP, где PSy# 0.
MS = {DB, MT} - множество блоков памяти элементов компонентов системы, где DB (Data Base) есть множество блоков памяти ДП (или баз данных) и MT (Memory Tracker) -	:
DB = {db1,db2, ..., dbc},
MT = {mt1, mt2, ., mtr }.
,	TU,
SU CP	PSi,j
MSi,j.
Взаимодействие элементов компонентов системы происходит через инфор-.	-
рации обмена информацией между элементами компонентов системы. Определим
IS (Information). -
скольку любая передача данных в системе между элементами компонентов инициируется событиями или командами, то определим непустое конечное множество событий в системе EM (Event Message) и непустое конечное множество команд CM (Command Message).
EM = {em1, em2, ., emm},
CM = {cm1, cm2, ., cmcd}.
IS.
определим множество информационных потоков следующим образом:
IS = {EM, CM}.
Под событиями будем понимать сообщения, формируемые в результате вы-
-	-. :
• ;
• события включения/выключения бортового устройства;
•	,
;
• ;
•
;
• ;
•	(
);
•	(
, );
•	.
Под командами будем понимать сообщения, инициирующие какие-либо действия со стороны участников взаимодействия. Как правило, команды формируются на ДП и предназначаются для РС и трекеров.
Выделим некоторые из команд в системе:
•	команды запроса данных с трекера (имеют место быть в случае, если ДП
);
•
обеспечения трекеров и РС;
•	команды управления исполнительными механизмами ТС (например,
);
•	(
);
•
(
);
•	;
•	.
Для РС и трекеров существуют команды оповещения получения пакета с .
При формировании множества информационных потоков 1Б возможно будет удобно рассматривать их по отношению к компонентам системы, то есть, рассматривая компоненты системы, выделять их информационные потоки. Тогда множество информационных потоков системы может быть получено объединением множеств информационных потоков компонентов системы:
18 = 1ТИ и 1БИ и 1СР.
Количество информационных потоков, функционирующих в определенный момент времени - величина переменная, так как элементы компонентов системы находятся в движении. В связи с этим мы можем определить максимальное количество информационных потоков, а в процессе функционирования системы будут возникать одни информационные потоки и исчезать другие.
,
( , ). -TS = {TS1, TS2, .	,	TSt} (Technology).
При использовании беспроводных технологий связи всегда следует учитывать возможность их недоступности при определенных условиях или при наличии каких ■-либо преград. Поэтому выделим непустое конечное множество преград распространению сигнала N = {N1, N2, ., Nsp} (Noise).
Множество помех информационных потоков составляется путем наложения множества элементарных помех обмена информацией на информационный поток:
NIsi = { N1Isi , NIsi , ... , NspIsi}.
Тогда множество помех распространению сигнала в информационном потоке может быть получено следующим образом:
NIS = IS N.
, -вить как ISYS = {TU, CP,SU,PS,MS, IS, NS, TS} (рис. 1).
Рис. 1. Структурная схема модели системы мониторинга ТС
В результате мы получили формальную модель системы мониторинга ТС, построенную на теории множеств. Она представлена в статичном виде и не передает .	-
сов предполагается использовать	теорию	конечных автоматов.	В	перспективе	также	планируется	детализировать	полученную	модель	системы	мониторинга	ТС,
разработать и реализовать методы рационального управления технологиями бес.	-
ных подвижных объектов в режиме реального времени, даже при плохих погод, .
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Постановление Правительства Российской Федерации от 25 августа 2008 г. N 641 "Об оснащении транспортных, технических средств и систем аппаратурой спутниковой навигации ГЛОНАСС или ГЛОНАСС/GPS" // Собрание законодательства Российской Федерации. - М.: “Юридическая литература администрации президента Российской Федерации”, 2008. - №35. - С. 4037.
2.	Пакулова Е.А. Аспекты безопасности в системе мониторинга транспортных средств // Материалы I Всероссийская молодежная конференция по проблемам информационной безопасности ПЕРСПЕКТИВА-2009. - Таганрог: Изд-во ТТИ ЮФУ, 2009. - С. 24 - 28.
Пакулова Екатерина Анатольевна
Технологический институт Федерального государственного образовательного учреждения высшего профессионального образования «Южный федеральный университет»
. .
E-mail: pakulova_e@mail.ru.
347928, .	,	.	,	2,	" ".
Тел.: 8 (8634) 312-018.
Кафедра безопасности информационных технологий; аспирант.
Pakulova Ekaterina Anatolyevna
Taganrog Institute of Technology - Federal State-Owned Educational Establishment of
Higher Vocational Education “Southern Federal University”.
E-mail: pakulova_e@mail.ru.
Block “I”, 2, Chehov str., Taganrog, 347928, Russia.
Phone: 8 (8634) 312-018.
The Department of Security of Information Technologies; post-graduate student.
УДК 681.324
EX. Абрамов
ПОСТРОЕНИЕ АДАПТИВНОЙ СИСТЕМЫ ИНФОРМАЦИОННОЙ
БЕЗОПАСНОСТИ
Предлагается методика построения системы защиты информации, позволяющая с помощью методов теории иммунных систем, нечёткой логики, искусственных нейронных сетей, нечеткого многокритериального выбора решений и численных методов оптимизации создать и поддерживать в актуальном состоянии систему защиты информации, в которой обеспечивается поддержание уровня защищенности, адекватного текущим угрозам. Кроме того, решается задача оценки эффективности получившейся новой структуры СЗИ без изменения режима функционирования текущей конфигурации средств защиты.
Иммунные системы; нечёткая логика; искусственные нейронные сети; нечеткий многокритериальный выбор; имитационное моделирование.
E.S. Abramov DEVELOPMENT OF ADAPTIVE SYSTEM OF INFORMATION SECURITY
There is method of constructing a system of information protection, which allows using the methods of the theory of immune systems, fuzzy logic, artificial neural net-

=====



﻿позиционных систем, могут успешно применяться в таких системах на базе ком.
выполняется путем расчета пробных шагов и последующих переводов системы в
,
заданием и реальным положением объекта за минимальное время при строгом выполнении технологических требований и ограничений координат. Непрерывно вычисляется рассогласование по положению между эталонной и действительной тра-.
управления приводом с ограничениями рывка, ускорения и скорости, по аналогии с . -гласования и путь торможения с нее до останова. Найденная максимальная скорость отработки рассогласования алгебраически суммируется с заданной скоро, -нимальное время без перерегулирования. Если сумма скоростей окажется больше допустимого значения для данной системы, то ее следует ограничить. Движение привода на суммарной скорости продолжается до тех пор, пока отклонение эталонной от действительной траектории движения не станет меньше ранее определенного пути торможения. Далее изменение скорости привода выполняется с учетом ограничения на рывок и ускорение как в позиционной системе на участке торможения в функции рассогласования. Задание по скорости на привод на участке торможения определяется суммой двух составляющих от эталонной траектории движения и от алгоритма изменения скорости отработки рассогласования в функции уменьшающейся ошибки по положению.
Заключение
Методика последовательного многошагового синтеза позволяет реализовывать предельные динамические возможности и автоматизировать сложные произ-, -мы, обеспечивать операторов в реальном масштабе времени «советами» по управлению высокоскоростными подвижными объектам.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1. Беллман Р. Динамическое программирование. - М.: Изд-во “Иностранная лит-ра”, 1960. - 400 с.
2. Мясн иков В А., Игнатьев М.Б., Покровский А.М. Программное упр авление оборудованием. - Л.: Машиностроение, Ленингр. отд., 1974. - 243 с.
3.	Дорри М.Х. Импульсное управление глубиной погружения подводного аппарата // Сборник трудов XXXIV Всероссийской конференции «Управление движением морскими судами и специальными аппаратами». - М.: ИПУ РАН, 2007. - С. 20-25.
УДК: 519.6
С.В. Киор, А.М. Романов
ЦИФРОВОЙ МНОГОФУНКЦИОНАЛЬНЫЙ КОНТРОЛЛЕР ЭЛЕКТРОПРИВОДА ЦМКП-В2
Современное развитие микроэлектроники, в том числе наличие высокопроизводительных вычислителей и быстродействующих цифро-анадоговых (^АП) и аналогово-цифровых преобразователей (АЦП), позволяет построить высокопроиз-
водительный многофункциональный контроллер электропривода для нужд робототехники и мехатроники. К такому контроллеру предъявляются следующие требования:
♦ Работа со всеми основным и типами электродвигателей, применяемыми в робототехнике, а именно с двигателями постоянного тока, асинхронными, синхронными и шаговыми.
♦ Обработка нескольких датчиков разных типов (тока, момента, скорости, положения) имеющих различные как цифровые, так и аналоговые ин-
.
♦ Использование современ ных алгоритмов управления, в том числе на интеллектуальных технологиях, таких как ассоциативная память, искусственные нейронные сети, нечеткая логика [1].
♦
.
♦ Наличие высокоскоростных интерфейсов, обеспечивающих взаимодействие между несколькими контроллерами.
♦	Наличие стандартизированных интерфейсов, обеспечивающих быструю интеграцию как в новые разработки, так и в уже существующие системы.
♦
для отладки программного обеспечения и диагностики контроллера.
В рамках поставленной задачи на кафедре «Проблемы управления» МИРЭА был разработан цифровой многофункциональный контроллер привода (ЦМКП-В2).
Архитектура контроллера представлена на рис. 1. Ядром ЦМКП-В2 является программируемая логическая интегральная схема (ПЛИС) Spartan 3E [2] с частотой тактового генератора 50 МГ ц.
Программно-аппаратное обеспечение (ПАО) ПЛИС основано на модульной архитектуре с открытой шиной Wishbone. Модульная структура подразумевает наличие отдельных стандартных модулей, которые автоматизировано компонуются в требуемую конфигурацию. Структурная схема программно-аппаратного обес-
. 2.
Выбранная архитектура позволяет реализовать многоконтурную систему
( ),
процессорах или с использованием специализированных вычислителей, что увеличивает производительность и устойчивость к сбоям. Так, например, формирование управляющих сигналов отдельными двигателями становится аппаратнонезависимым. Межпроцессорное взаимодействие может быть реализовано: при помощи общей шины, с использованием общих массивов памяти либо выделенных портов обмена данными. В качестве основного процессора общего назначения для системы реализован модуль процессора C16. Это стековый 16разрядный процессор адаптированный для работы с кодом, написанным на языке C.
реализации функций управления процессоров цифровую обработку сигналов ( ). -дификация процессора DSPuva16. По сравнению с оригинальной версией этого процессора была добавлена возможность проведения 24-битных вычислений с фиксированной точкой и системой прерываний.
Рис. 1. Архитектура контроллера ЦМКП-В2
Для увеличения производительности контроллера в контуре цифровой САУ использованы отдельные модули реализующие быстрое вычисление тригонометрических функций по алгоритму СОКШС.
Для решения задач управления на базе разработанного контроллера могут быть аппаратно реализованы технологии нейронных сетей [3] и ассоциативной
.
помощи специализированной САПР.
К инструма ггалы іон ПЭВМ
Рис. 2 Структурная схема ПОА ПЛИС ЦМКП-В2
,
ЦМКП-В2 реализован технологический интерфейс. Он позволяет оператору подключиться к контроллеру с помощью инструментальной ПЭВМ по интерфейсу USB. Технологический интерфейс обеспечивает доступ ко всем модулям системы по общей шине Wishbone, а также к микропроцессорам, модулям нейронной сети и ассоциативной памяти при помощи выделенного порта.
Подключение цифровых датчиков осуществляется при помощи дискретных входов/выходов. Плата ЦМКП-В2 имеет 24 дискретных входа 14 дескретных выхо-, .
ПЛИС каждый датчик обрабатывается отдельным модулем, который подключает к остальной системе по общей шине данных. На данный момент реализованы модули обработки инкрементных квадратурных датчиков, датчиков с интерфейсами SSI, SPI, I2C, а также датчиков имеющих на выходе ШИМ- и ЧИМ-сигналы.
Для подключения аналоговых датчиков в контроллере реализован 8-каншьный 12-р^рядный АЦП с частотой дискретизации 250 кГц, который с
SPI.
случае, если для работы датчика требуется формирование задающего аналогового сигнала (например, датчики СКВТ), его можно сформировать при помощи одного из 2-х 10-р^рядных ЦАП, которые также управляются по интерфейсу 8Р1.
Многофункциональный контроллер электропривода ЦМКП-В2 позволяет работать с двигателями постоянного тока, асинхронными, синхронными и шаговыми .
Типовые схемы подключения двигателей к контроллеру представлены на рис. 3. Совокупность интерфейсов системы подразумевает два основных подхода к их управлению:
♦	непосредственное формирование напряжения на обмотках двигателя при
- - , -
ля мощности;
♦	управление частотным преобразователем (контроллером шагового двигателя) при помощи аналогового токового интерфейса, сигналами дискретных выходов или цифрового интерфейса стандарта Я8422/485.
г.
УМ	—/■—►	дпт
Д
Д/А
3		3,	Синхр./
■У—►	УМ		асинхр.
д		Д	двигатель
ЦМКП-В2
ш
|г$-485
■+	►
ЦМКП-В2	-7^	ПЧ
Д
А
Синхр./ асинхр двигатель
№
А — аналоговый сигнал Д — дискретный сигнал ЩА — дискретны с и аналоговые сигналы ПЧ — преобразователь частоты
Рис. 3. Типовые схемы подключения двигателей к контроллеру>
В первом случае для подключения к усилителю мощности (УМ) могут быть использованы 10 дискретных выходов типа открытый коллектор. Это позволяет при помощи одного контроллера управлять одним двигателем переменного тока или двумя двигателями постоянного тока. Для использования в ПАО ПЛИС разра-
ботаны модули управления высокомоментными бесколлекторными двигателями постоянного тока и векторного управления двигателями переменного тока.
Для управления двигателями переменного тока при помощи частотного преобразователя предпочтительнее использовать токовый интерфейс, так как он имеет более высокие быстродействие и помехозащищенность. Для формирования аналогового сигнала необходимо воспользоваться одним из 2-х расположенных на плате 10. -мощи дискретного интерфейса RS422/485. Для считывания и записи специальных флагов частотного преобразователя (р^решение/запрет движения, наличие перегрузки по току) могут быть использованы дискретные входы/выходы ЦМКП-В2.
Для управления тормозными муфтами и электромагнитными пускателями на плате контроллера реализованы 6 сильноточных дискретных выходов на оптоси-.
Разработанный цифровой многофункциональный контроллер электропривода имеет 8 высокоскоростных интерфейсов стандарта RS422/485 со скоростью передачи данных до 16 Мбит/c. Это позволяет реализовать оперативный обмен командной и телеметрической информацией между ЦМКП-В2 и системой управления верхнего уровня и между контроллерами в режиме группового электропривода.
Использование интерфейсов RS422/485 позволяет не только просто интегрировать контроллер с остальными частями системы управления при новых разра-, .
Функционал ЦМКП-В2 можно расширить дополнительными интерфейсами, так как в конструктиве предусмотрен разъем подключения и места для закрепления .
входят платы интерфейсов: RS232, PS/2, USB1.1, VGA. Ведется разработка модуля интерфейса FastEthemet. Также существует мезонин высокопроизводительного контроллера ARM9 Cortex 3 с установленным Ethernet и CAN интерфейсами на .
Разработанный контроллер прошел комплексные испытания в составе системы управления промышленных транспортного робота «Электроника НЦТМ25м» и манипуляционного робота «РМ-01» [4]. Испытания показали высокое качество , .
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Интеллектуальные системы автоматического управления / Под ред. И.М. Макарова, В.М. Лохина. - М.: ФИЗМАТЛИТ, 2001.
2.	Зотов В.Ю. Проектирование цифровых устройств на основе ПЛИС фирмы Xilinx в САПР WebPack ISE. - М.: Горячая линия - Телеком, 2003.
3. Еремин Д. М., Киор С. В. Методы аппаратной реализации цифровых нейронных сетей на
. / XII	-
учно-технического семинара «Современные технологии в задачах управления, автоматизации и обработки информации», Алушта, 2003.
4. Черноусько Ф.Л., Болотник КН., Градецкий ВТ. Манипуляционные роботы. - М.: Наука, 1989.

=====



﻿УДК 004.891.2 В.В. Симонов
Оценка эффективности параллельных алгоритмов для моделирования многослойного персептрона
Дано краткое описание параллельного алгоритма моделирования многослойного персептрона и параллельного алгоритма обучения iRprop. Алгоритмы используют параллельные вычисления с разделяемой памятью и параллельность на уровне инструкций процессора. Приведено сравнение быстродействия последовательного и параллельного алгоритмов, а также динамика изменения их быстродействия за последние 6 лет. Ключевые слова: многослойный персептрон, обучение многослойного персептрона, параллельные вычисления с разделяемой памятью, SIMD инструкции.
Введение
Алгоритмы моделирования и обучения нейронных сетей имеют высокую вычислительную сложность. Во многих приложениях ИНС, вычислительная сложность пропорциональна квадрату количества настраиваемых связей ИНС. Обучение больших ИНС может занимать несколько дней. Ускорение процесса их обучения поможет исследователям быстрее находить оптимальные топологии и добиваться более точных результатов прогнозирования и распознавания. Также быстродействие моделей ИНС очень важно для систем принятия решений в реальном времени, например систем, использующих машинное зрение.
Объем задач, решаемых с помощью ИНС, непрерывно растет. Увеличивается сложность моделей, ужесточаются бизнес-требования, предъявляемые к моделям. Все это приводит к увеличению вычислительной сложности.
Ранее созданные программы не могут использовать даже половину вычислительной мощности современных процессоров, так как не используют параллельные вычисления, а потенциал увеличения производительности отдельно взятого процессорного ядра практически исчерпан. Быстродействие ранее созданных алгоритмов на современных компьютерах будет повышаться медленнее роста сложности задач, что приведет к неэффективности систем, использующих эти алгоритмы. Поэтому сейчас очень важно создавать новые, параллельные реализации моделей ИНС, чтобы они могли использовать возрастающую вычислительную мощь современных ЭВМ и легко масштабировались для решения больших и сложных практических задач.
Проблема разработки параллельных алгоритмов встала относительно недавно, но ее актуальность непрерывно растет. На данный момент имеется совсем немного теоретических разработок и методов организации параллельных вычислений. Поэтому необходимо искать новые способы распараллеливания алгоритмов, разрабатывать методы выделения шагов, способных выполняться параллельно.
Использование параллельных вычислений позволит повысить энергоэффективность процесса моделирования и обучения, измеренную в миллионах операций с плавающей точкой (mflops) на затраченный ватт электроэнергии.
1.	Постановка задачи
Для популярных в настоящее время математических моделей ИНС и моделей их обучения необходимо разработать параллельные алгоритмы, позволяющие в полной мере использовать вычислительную мощь современных многоядерных процессоров. Параллельные алгоритмы должны хорошо масштабироваться. Это означает, что со временем количество вычислительных потоков, способных выполняться одновременно, будет расти, и алгоритмы должны быть построены таким образом, чтобы обеспечить работой как можно большее количество параллельных потоков.
2.	Выбор метода исследования
Быстродействие реализации сравнивается с быстродействием алгоритмов, реализованных в библиотеке Fast Artificial Neural Network Library (FANN) версии 1.2.0 [1]. Реализация ИНС из библиотеки FANN обладает отличным быстродействием и использует оптимизации, такие как оптимизация доступа к данным, разворачивание циклов (loop unrolling).
Быстродействие измерялось в секундах, затраченных реализациями алгоритмов на выполнение одних и тех же вычислений. Высчитывалось среднее время из десяти проходов для каждой реализации.
В ходе тестирования было установлено, что реализации многослойного персептрона и iRprop [2] не требовательны к пропускной способности памяти. Их быстродействие ограничено только быстродействием процессора. Было проведено тестирование реализации на различных процессорах Intel от 2004 до 2009 года выпуска, от Pentium 4 до Core i7, что позволит сделать некоторые выводы относительно масштабируемости реализаций и спрогнозировать будущие изменения быстродействия.
3.	Описание параллельных алгоритмов
3.1.	Параллельная реализация многослойного персептрона
Многослойный персептрон реализован в виде класса Perceptron. Этот класс отвечает за прямое распространение сигнала в нейронной сети и информацию о топологии сети.
Perceptron содержит данные двух видов: данные для чтения (Structure) и данные для чтения и записи (Data). Во время функционирования нейронной сети ее структура не меняется, т.е. описание структуры сети используется только для чтения, в то время как Data полностью перезаписывается при прямом распространении сигнала в сети. Чтобы можно было выполнять прямое распространение сигнала параллельно, необходимо создать копию экземпляра Perceptron для каждого потока, но так как структура персептрона при этом не меняется, ее можно не копировать. Для этих целей был создан метод Perceptron::ParallelCopy. Таким образом, объект Structure может использоваться несколькими объектами Perceptron. Для разделяемых объектов Structure реализован подсчет ссылок, это позволяет удалить класс Structure, если на него не ссылается ни один из Perceptron.
При прямом распространении сигнала выходной сигнал для каждого нейрона слоя рассчитывается параллельно. Это реализовано с помощью стандарта OpenMP [3].
Число синапсов каждого нейрона сети сделано кратным четырем. Например, если число синапсов нейрона - 13, оно будет увеличено до 16. Однако пользователь по-прежнему может работать только с 13 синапсами, веса добавленных 3 синапсов всегда равны нулю. Добавление дополнительных синапсов делается для того, чтобы можно было применить векторные инструкции для SSE (Streaming SIMD Extension) [4, 5] для вычисления взвешенной суммы входов нейронов. Инструкции SSE позволяют выполнить одну и ту же арифметическую операцию над 4 вещественными числами одинарной точности одной командой. Использование SSE позволило увеличить быстродействие сети в 2,5 раза.
3.2.	Параллельная реализация алгоритма iRprop
При обучении ИНС с помощью алгоритма iRprop ей сначала предъявляются все примеры обучающей выборки, для каждого примера вычисляется ошибка аппроксимации (разность между выходом нейронной сети и полученным значением). Происходит обратное распространение ошибки, т.е. распространение сигнала от выхода нейронной сети ко
dE
входу. Вычисляется оценка частной производной -, где E(W) - функция ошибки
нейронной сети от всех весов сети W; wj - вес нейронной сети, связывающий i нейрон с j, wij е W .
Эти шаги можно выполнить параллельно. Для этого каждый вычислительный поток должен иметь параллельную копию многослойного персептрона (можно использовать Per-ceptron::CloneParallel), копию массива отклонений (ошибок) каждого нейрона в сети и копию массива оценок частной производной функции ошибки по весу для каждого настраиваемого веса в сети.
4.	Постановка эксперимента
В результате выполнения данной работы была написана библиотека классов, содержащая параллельную реализацию многослойного персептрона и параллельную реализацию алгоритма обучения iRprop.
Было произведено тестирование библиотеки. Для этого была взята большая нейронная сеть с 200 входами, 100 нейронами в скрытом слое, 1 нейроном в выходном слое. Сеть представляла собой многослойный персептрон, в котором каждый нейрон последующего слоя был связан со всеми нейронами предыдущего слоя. Для сравнения быстродействия использовалась библиотека FANN [1]. Для компиляции параллельной и последовательной (FANN) реализаций использовался компилятор Microsoft C++ Compiler 10.
Веса нейронной сети инициализировались каждый раз одними и теми же значениями, одинаковыми для FANN сети и для описываемой реализации. Далее на каждой тестовой машине проводились 100 эпох обучения нейронной сети и измерялось среднее время для 10 попыток обучения. Это позволило сразу задействовать алгоритмы прямого распространения сигнала в нейронной сети и алгоритм iRprop, сравнивать разные реализации алго-
ритмов в одинаковых условиях и увеличить точность оценок за счет повторения экспериментов.
Были проведены тесты параллельной реализации с различным количеством вычислительных потоков. На каждой системе были проведены тесты с использованием одного вычислительного потока (то же самое, что использовать последовательные вычисления), двух, и т.д. до n, где n - максимальное количество параллельных вычислительных потоков в системе. Например, для процессора Intel Core i7 920 с 4 физическими ядрами, каждое из которых содержит два логических, этот показатель будет равен 2^4 = 8. Была вычислена оценка эффективности параллельных вычислений. Эффективность распараллеливания показывает, какой процент времени вычислительные потоки тратят на эффективную работу, на вычисления. Значение 60% означает, что вычислительные потоки 60% времени выполняют полезную работу и 40% времени простаивают или тратят на синхронизацию. Эффективность вычислялась по формуле
5= Гпос • 100%,	(1)
n•^пар
где Tпос - время, затраченное на последовательное вычисление; Tпар - время, затраченное на параллельное вычисление; n - количество вычислительных потоков.
5. Результаты эксперимента
Результаты измерения времени обучения многослойного персептрона для описываемой реализации и FANN приведены в табл. 1.
Таблица 1
Результаты измерения времени, затрачиваемого различными реализациями алгоритма
N п/п	Процессор	Дата начала выпуска	Время FANN, с	Описываемая реализация последовательно, время, с	Описываемая реализация параллельно, время, с	Эффективность рас-параллели-вания, %
1	Pentium 4 HT @3.0	01.02.2004	24,26	13,07	11,35	57,6
2	Pentium D 805 @2.66	01.03.2006	24,42	13,17	7,52	87,5
3	Core 2 Duo E6400 @2.14	27.07.2006	11,82	6,28	3,58	87,8
4	Xeon E5345 (x2) @2.33	01.10.2006	11,85	6,50	1,89	81,4
5	Core 2 Quad Q6600 @2.4	07.01.2007	12,74	6,34	1,57	100,8
6	Core 2 Duo E7200 @2.53	20.04.2008	10,14	5,33	3,06	87,1
7	Core 2 Duo E8400 @3.0	20.01.2008	8,58	4,46	2,48	90,1
8	Core 2 Quad Q8300 @2.53	30.11.2008	10,16	5,34	1,59	84,1
9	Core i7 920 (w/o HT) @2.66	01.11.2008	9,16	4,78	1,31	90,9
10	Core i7 920 (HT) @2.66	01.11.2008	9,16	4,77	1,06	56,3
11	Core i7 860 @2.8	01.09.2009	8,75	4,56	1,12	51,0
12	Core i5 750 @2.66	08.09.2009	10,59	4,80	1,31	93,6
В колонке «Процессор» приведено наименование процессоров Intel и тактовая частота в гигагерцах, на которой работал процессор во время тестирования. Тактовая частота следует после символа «@».
В табл. 1 видно, что в последовательном режиме описываемая реализация работает примерно в 2 раза быстрее, чем реализация FANN. Достигается это за счет использования SSE инструкций процессора. Эти инструкции позволяют выполнять 4 одинаковых операции за одну инструкцию или за два такта процессора [5].
Для каждого процессора по формуле (1) была вычислена эффективность распараллеливания. В среднем эффективность распараллеливания составила около 90% при использовании нескольких физических ядер и 60% при использовании технологии Intel Hyper-Threading. Intel Hyper-Threading (HT) - технология, позволяющая организовать два вычислительных потока на одном процессорном ядре путем удвоения количества регистров и дублирования очереди команд. Эта технология позволяет оптимально загружать устройства процессора работой. В данном тестировании процессоры Pentium 4 HT, Core i7 920 и Core i7 860 используют HT. Стоит отметить, что для Core i7 920 приведены результаты
как с включенной HT (строка №10), так и без нее (строка №9). Эффективность распараллеливания без HT выше, чем с HT. Время вычислений с включенной HT меньше, чем без нее. HT позволяет получить более высокое быстродействие при том же самом количестве физических ядер, но снижает эффективность распараллеливания программ.
Эффективность распараллеливания могла быть и выше, если бы вычислительным потокам давались более крупные задания, что привело бы к сокращению накладных расходов на запуск и остановку потоков. Но в описываемой реализации этого намеренно не сделано. Кроме создания эффективной параллельной реализации, также стояла задача выявить как можно большее количество участков кода, способных выполняться параллельно с тем, чтобы потом можно было использовать эти наработки при переходе на другие стандарты параллельного программирования, такие как OpenCL.
Тестирование на процессоре Core 2 Quad Q6600 показало эффективность распараллеливания более 100%. Это можно объяснить только аномально низким быстродействием программы при последовательном режиме. Возможно, это было вызвано активностью фоновых программ или частыми промахами процессора в кэш память [5].
Также в табл. 1 приведены даты выпуска процессоров, что позволяет оценить скорости роста быстродействия последовательных и параллельных вычислений за 2004-2009 гг., применительно к задаче обучения искусственных нейронных сетей. На рис. 1 показана зависимость времени обучения нейронной сети от даты выпуска процессора для параллельных и последовательных вычислений.
♦ Параллельная программа, время ■ Последовательная программа, время
Рис. 1. Зависимость времени вычисления от даты выхода процессора
График построен с использованием логарифмической оси. Согласно закону Мура, быстродействие вычислительной техники растет экспоненциально, соответственно уменьшается время, необходимое для выполнения одной и той же вычислительной задачи. Тогда прирост производительности должен дать на графике с логарифмической шкалой прямую линию. По методу наименьших квадратов построим линии тренда для последовательных и параллельных вычислений. Из рис. 1 видно, что скорость параллельных вычислений со временем возрастает в 2 раза быстрее, чем скорость последовательных.
В табл. 2 приведена зависимость времени работы описываемого параллельного алгоритма от количества параллельных вычислительных потоков. Номера строк соответствуют номерам строк из табл. 1. Количество вычислительных потоков взято меньше или равным количеству параллельных потоков в системе. Поэтому для системы на Core 2 Duo -это только 2 потока, а для Core i7 - 8.
На рис. 2 показана зависимость времени обучения нейронной сети от количества вычислительных потоков.
Для процессоров, не использующих HT, график представляет собой гиперболу (с поправкой на эффективность распараллеливания, см. табл. 1).
Иначе дела обстоят с процессором Core i7 920. Для первых вычислительных потоков график представляет собой гиперболу, но затем уменьшение времени замедляется. Связано это с тем, что на 4 физических ядрах может параллельно выполняться только 4 потока, при увеличении количества потоков на одном ядре процессора начинает выполняться по 2 логических потока (благодаря HT). Производительность продолжает расти, но эффективность распараллеливания падает.
Таблица 2
Зависимость времени вычисления от количества параллельных вычислительных потоков
№ п/п	Зависимость времени обучения от кол-ва потоков
1	2	3	4	5	6	7	8
1	13,07	11,35
2	13,17	7,52
3	6,28	3,58
4	6,50	3,54	2,47	1,89	1,60	1,43	1,23	1,00
5	6,34	3,15	2,07	1,57
6	5,33	3,06
7	4,46	2,48
8	5,34	2,86	2,02	1,59
9	4,78	2,56	1,75	1,31
10	4,77	2,55	1,75	1,43	1,41	1,31	1,18	1,06
11	4,56	2,47	1,76	1,52	1,38	1,26	1,24	1,12
12	4,80	2,56	1,75	1,31
Количество параллельных потоков, шт.
Рис. 2. Зависимость времени обучения нейронной сети от количества параллельных потоков
Пара процессоров Xeon E5345 (2 процессора по 4 ядра) позволяет нам взглянуть на будущее параллельных настольных вычислительных систем.
Заключение
Разработана, создана и протестирована эффективная параллельная реализация многослойного персептрона и алгоритма обучения iRprop. Алгоритмы оформлены в виде библиотеки классов на C++, что обеспечивает высокое быстродействие и позволяет повторно использовать эти классы в приложениях.
В ходе проведенных экспериментов установлено, что использование параллельных вычислений позволяет получить прирост скорости вычисления от 60 до 600%, по сравнению с последовательными вычислениями.
Литература
1.	Сайт проекта Fast Artificial Neural Network Library (FANN) [Электронный ресурс]. - Режим доступа: http://leenissen.dk/fann/, свободный (дата обращения 21.04.2010).
2.	Igel С. Improving the Rprop Learning Algorithm / C. Igel, M. Husken // Proceedings of the Second International Symposium on Neural Computation. - 2000. - С. 115-121.
3.	Открытая спецификация OpenMP API для параллельного программирования [Электронный ресурс]. - Режим доступа: http://openmp.org/wp/, свободный (дата обращения 21.04.2010).
4.	Свободная Интернет энциклопедия «Википедия». Статья «SSE» [Электронный ресурс]. - Режим доступа: http://ru.wikipedia.org/wiki/SSE, свободный (дата обращения 21.04.2010).
5.	Intel® 64 and IA-32 Architectures Optimization Reference Manual November 2009 [Электронный ресурс]. - Режим доступа: http://www.intel.com/assets/pdf/manual/248966.pdf, свободный (дата обращения 21.04.2010).
6.	Открытый стандарт параллельного программирования для гетерогенных сред OpenCL [Электронный ресурс]. - Режим доступа: http://www.khronos.org/opencl/, свободный (дата обращения 21.04.2010).
Симонов Василий Владимирович
Аспирант каф. автоматизированных систем управления ТУСУРа
Тел.: +7-960-971-77-53
Эл. почта: simonov.vasiliy@gmail.com
Simonov V.V.
Efficiency estimation of parallel algorithms for multilayer perceptron modeling
There is a brief description for parallel algorithm for modeling of multilayer perceptron and iRprop learning algorithm, introduced in this article. The algorithms has been developed using parallel calculations with shared memory model and parallel instructions for CPU. The performance comparison for serial and parallel programs and the analysis of their dynamics over the past 6 years have been done. Keywords: multilayer perceptron, multilayer perceptron training, parallel calculations with shared memory, SIMD instructions.

=====



﻿УДК 004.4 233 Д.А. Эдель
Языковая модель исполнимых кодов
ПО аналогии с методами сравнения естественных языков строится языковая модель исполнимого кода на основе однородных Марковских цепей и приводятся результаты экспериментальных исследований предложенной модели. Ключевые слова: машинный код, Марковские цепи, классификация.
Введение. В настоящее время существует множество задач, при решении которых необходимо применять методы анализа и трансформации программ. Это задачи обеспечения безопасности программ, генерации и верификации исходных кодов, а также обратной инженерии. С целью решения таких задач используются дизассемблеры и декомпиляторы, при работе которых встает целый ряд подзадач, уже имеющих решения на текущий момент. Однако существуют и задачи, требующие более эффективных решений, чем существующие. Одна из таких задач - разделение неопределенных участков программ на код и данные.
В работе [1] описывается результативность существующих методов разделения таких участков, суть которых сводится к сигнатурному анализу, не способному полностью решать поставленную проблему. В данной статье проверяется гипотеза, что однородные Марковские модели первого порядка смогут эффективно моделировать исполнимый код для задачи разделения неопределенных участков программ на код и данные, и исследуется эффективность метода на практике.
Основной текст. Любую последовательность байт длины более 16, согласно спецификации Intel IA-32 [2], можно дизассемблировать как последовательность команд, причем единственным образом. Если дизассемблирование производить с разных позиций, то появится эффект наложения команд, детально описанный в статье [3], при котором один и тот же байт может входить в несколько исполнимых команд, как показано в табл. 1.
Таблица 1
Эффект наложения команд
Двоичное представление кода	14 53	Последовательность 1	Последовательность 2	Последовательность 3
add esp, 14
push ebx
83 ec 0c	sub esp, c	sub esp, c
or al, 8b
8b 5c 24 14	mov ebx, 14	mov ebx, 14
pop esp
and al, 14
8b 53 04	mov edx, 4	mov edx, 4	mov edx, 4
8b 0b	mov ecx, ebx	mov ecx, ebx	mov ecx, ebx
Дизассемблированные иструкции
Следовательно, одна и та же последовательность байт может формировать различные последовательности исполнимых команд в зависимости от позиции начала дизассемблиро-вания. Указанный факт является основной проблемой в задаче разделения неопределенных участков программ на код и данные, т.к. любой фрагмент данных можно интерпретировать как код, хотя он таковым не является, и при его исполнении на центральном процессоре произойдет ошибка выполнения.
Так как код программы представляет собой логически завершенную последовательность команд, реализующую конкретный алгоритм на языке высокого уровня, то порядок команд строго фиксирован в цепочке и логически упорядочен. Указанная семантическая особенность команд исполнимого кода является их специфическим отличием от команд, полученных при дизассемблировании случайного фрагмента данных. Аналогич-
но в естественных языках слова в предложениях, как правило, имеют упорядоченность на основе семантики и синтаксиса языка. Некоторые комбинации слов и букв соответствуют различным языкам.
Пример корректной исполнимой последовательности команд языка Ассемблер представлен в табл. 2.
Таблица 2
Пример корректной исполнимой последовательности команд
Байт код команд	Команда	Значение
55 8B EC 83 EC 18	PUSH EBP MOV EBP,ESP SUB ESP,18	Стандартный код начала функции
6A 00 6A 00 6A 00 E8 23 24 FE FF	PUSH 0 PUSH 0 PUSH 0 CALL 00445606	Передача параметров Вызов функции
85 C0 0F 84 F0 9D FD FF	TEST EAX,EAX JE SHORT 0043CFDB	Проверка условия Условный переход
В приведенной таблице показано, что первые три команды, как правило, представляют начало функции, три «push» и «call» представляют собой вызов функции с передачей ей параметров, а «test» и «je» представляют собой проверку условия и условный переход. Жирным выделены значения в байтовой последовательности, отвечающие за сами команды, оставшиеся байты - параметры команд.
В лингвистике одним из наиболее успешных методов определения языка по тексту (из конечного числа языков) являются Марковские модели [4]. В данной работе на основе аналогии с методами сравнения естественных языков проверяется гипотеза, что однородные Марковские модели первого порядка смогут эффективно моделировать исполнимый код в задаче разделения неопределенных участков программ на код и данные.
За последовательность дискретных случайных величин {Xn}, n > 0 примем последовательность команд (без параметров), в которой
P(Xn+1 = in+1 \ Xn = in, Xn-1 = in-1, ••, X0 = i0) = P(Xn+1 = in+1 \ Xn = in),	(1)
т.е. на вероятность появления следующей команды в цепочке влияет только текущая команда. Тогда {Xn} образует однородную Марковскую цепь первого порядка, в которой n -номер команды в последовательности. На начальном этапе проверки гипотезы матрицу переходных вероятностей Pj(n) = P(Xn+i = j \ Xn = i) построим на основе серии экспериментов. Тогда, приняв за {Oj}, j = 0...L - тестируемую последовательность команд, которую необходимо классифицировать, вероятность принадлежности ее определенной модели M будет выражаться по формуле
Pm(O) = Pm(Oi)x PM(02\0I) х PM(03^) X ... x PmOOl-I)-	(2)
Отметим, что если {Oj} представляет собой корректную исполнимую последовательность команд длиной L, то существует только одна последовательность байт {Bj}, представляющая эту последовательность.
Основываясь на том факте, что в теле программы код функции может начинаться в любой позиции файла, можно получить несколько его интерпретаций в виде последовательностей команд. Различие в интерпретации будет определяться позицией дизассембли-рования первой команды последовательности. В работе [3] изучен и доказан тот факт, что дизассемблированные последовательности команд, начатые с разных позиций файла (как показано в табл. 1), сойдутся с большой вероятностью менее чем через 32 байта в одну последовательность. Следовательно, для любого фрагмента программы более 64 байт можно получить последовательность команд {Oj} длиной L, из которых первые K (< 32 < L) будут командами «схождения» (различными командами на одинаковых позициях последовательностей), а оставшиеся L — K команд будут истинными командами последовательности при дизассемблировании. Следовательно, при полном дизассемблировании фрагмента длиной более 64 байт можно с большой вероятностью получить истинную последовательность команд, которую она представляет, либо построить ложную последовательность, не характерную для исполнимых файлов.
Экспериментальные исследования. Построим модели исполнимых и неисполнимых последовательностей команд. Матрицы переходных вероятностей моделей изначально предлагается строить обучением на основе выборок файлов. Команды обоих видов моде-
лей на первом шаге примем равновероятными. Обучаемую выборку файлов (для построения матриц переходных вероятностей) будут представлять набор из исполнимых файлов формата Windows PE и различные файлы неисполнимых форматов. Согласно проводимому в работе сравнению естественных языков и машинного, по аналогии с разбиением текстов естественных языков на корпуса [4], разделим исполнимые и неисполнимые файлы обучаемой выборки на классы и для каждого класса на основе описанного ниже алгоритма построим языковую модель, представляющую данный класс.
Для построения матрицы переходных вероятностей модели исполнимых файлов необходимо получить последовательности команд исполнимых файлов. Для этого необходимо построить граф потока управления и команд, начиная с точки входа в программу, и выделить все пути как корректные последовательности команд для обучения модели исполнимых файлов.
Для проверки, какой модели соответствует тестируемый файл (участок программы), предлагается следующий алгоритм:
1.	Для каждой позиции файла строится дизассемблированная команда, начатая в этой позиции (на основе спецификации Intel IA-32 [2]).
2.	Для каждой позиции файла строится последовательность команд, которая обрывается на позиции, с которой невозможно получить корректную команду.
3.	На основе последовательностей, найденных в п. 2, формируются все возможные их подпоследовательности команд Sj длины T.
4.	Для каждой подпоследовательности команд Sj по формуле (2) вычисляются вероятности соответствия исполнимым классам моделей. Среди всех подпоследовательностей выбирается одна S', с самой большой вероятностью для любой модели исполнимого класса.
5.	Найденная подпоследовательность S', имеющая максимальную вероятность среди исполнимых моделей на файл (наилучший кандидат на исполнимую последовательность команд), аналогично п. 4 проверяется на соответствие оставшимся моделям неисполнимых классов.
6.	Подпоследовательность команд S' будем считать исполнимой, если она наиболее вероятна какому-нибудь классу исполнимой модели, иначе она считается неисполнимой.
7.	Тестируемый фрагмент файла, участок программы будем считать исполнимым, если S' была принята за исполнимую подпоследовательность, иначе - не исполнимым.
Описанный алгоритм позволяет классифицировать неопределенные участки программ на код и данные. Минимальная длина подпоследовательности команд, которая используется при классификации, определяется экспериментально.
Подготовка выборки файлов для обучения моделей. Для формирования моделей было отобрано 23126 исполнимых и 62883 неисполнимых файлов. С помощью средства PeID (сигнатурный детектор компиляторов и упаковщиков программ [5]) вся выборка исполнимых файлов была разделена на 13 классов. Неисполнимая выборка была разделена по формату файлов на 3 класса. Тестируемую выборку представлял набор из 30 файлов, не входящих в обучаемую: 15 исполнимых и 15 неисполнимых форматов. В моделях было 342 уникальные команды.
Условия эксперимента. Для проведения экспериментов использовался алгоритм, описанный выше, с тем изменением, что сначала длина T находилась экспериментально. Алгоритм прекращал работу, как только все файлы обучаемой выборки успешно классифицируются. Было установлено, что при T > 30 обучаемая выборка успешно классифицируется.
При построении матриц переходных вероятностей моделей на основе встречаемости команд в подпоследовательностях возможен случай, когда паросочетание команд встречается в одной модели и отсутствует в другой. Согласно свойствам матриц переходных ве-H
роятностей, ^ Pij (n) = 1,Vn eN для каждого j, где H - общее количество уникальных ко-
j=1
манд. После нахождения частот встречаемости паросочетаний команд, каждая модель дополняется нулями для соответствующих пар, далее матрица переходных вероятностей нормируется и приводится к стохастическому виду. При нормировании используется формула
Pij(n) = Pij(n) х K + 1,	(3)
где K = 2х(М - 1) - коэффициент нормирования; М - количество различных уникальных команд в цепочках.
В табл. 3 представлена нормированная и приведенная к стохастическому виду матрица переходных вероятностей Р^(п) для Марковской модели последовательности команд из табл. 2.
Таблица 3
Стохастическая матрица переходных вероятностей
call	je	mov	push	sub	test
call	0,063	0,063	0,063	0,063	0,063	0,063
je	0,167	0,167	0,167	0,167	0,167	0,167
mov	0,063	0,063	0,063	0,063	0,688	0,063
push	0,239	0,022	0,239	0,457	0,022	0,063
sub	0,063	0,063	0,063	0,688	0,063	0,063
test	0,063	0,688	0,063	0,063	0,063	0,063
Нормирование матриц является необходимым действием при построении моделей, иначе вероятность подпоследовательности, вычисляемая по формуле (2), станет равной 0 как только встретится одно из паросочетаний команд, отсутствующее в модели.
Наилучший результат соответствия модели последовательности команд дает та последовательность, на которой она строилась. Так, последовательность команд из табл. 2 имеет вероятность соответствия построенной модели, равную произведению соответствующих вероятностей для каждого паросочетания, вычисляемую по формуле
Р(О) = P(movpush)xP(sub\mov)xP(push\sub)xP(pushpush)xP(pushpush)xP(callpush)x хР^^саи)хР(]е^) = 0,239x0,688x0,688x0,457x0,457x0,239x0,688x0,688 = 0,003. (4) В табл. 4 приведены значения вероятностей соответствия построенной модели различным последовательностям команд.
Таблица 4
Вероятности соответствия различных последовательностей
Последовательности команд									P
Команды	je	je	push	mov	mov	call	je	sub	call	2E-08
Pi,(n)	0,167	0,167	0,239	0,063	0,063	0,063	0,167	0,063	-
Команды	je	push	je	mov	je	call	je	je	call	1E-08
Pjn)	0,167	0,022	0,167	0,063	0,167	0,063	0,167	0,167	-
На основе приведенного примера в табл. 2 можно сделать вывод о том, что модель, построенная по алгоритму, способна классифицировать неопределенные участки программ на код и данные. С целью проверки данного вывода и модели была проведена серия экспериментов.
Результаты. В табл. 5 представлен результат экспериментов.
Таблица 5
Результат экспериментов
Файл	Наилучшая модель	Вероятность	Значение Т(длина последовательности)	Последовательность команд
1.doc	DOCs_old	0,15455	30 (Ттах)	add - add - ... - add
2.doc	DOCs_old	0,00034	8	add - add - add - add -add - add - push - push
3.doc	DOCs_old	0,87917	3 (Тт1п)	add - add - add
15.doc	DOCs old	0,82434	4	add - add - add - add
1.exe	EXEs	0,99199	2 (Т тах)	leave - retn
2.exe	EXEs	0,99199	2 (Т т1п)	leave - retn
15.exe	UPX	0,94009	2	pusha - mov
В представленной таблице Тт1п - наименьшая длина подцепочки, при которой хотя бы один файл тестируемой выборки успешно классифицировался. Значение Ттах представляет собой минимальное Т, при котором все файлы тестируемой выборки успешно классифицировались. Таблица отражает тот факт, что у исполнимых файлов встречаются паросочетания команд, вероятность которых максимальна для исполнимых классов моделей и минимальна для неисполнимых. В то же время существуют и такие комбинации команд, при которых неисполнимый файл на длинных последовательностях классифицируется как исполнимый. В табл. 6 представлен ход работы алгоритма на файле «3.doc» из табл. 5.
Таблица 6
Результат работы алгоритма для файла F
Шаг	Детектированный вид модели	Вероятность	Модель	T, длина цепочки	Позиция в файле	Последовательность команд
1	EXE	0,002923977	EXEs	2	540	cwde - mov
2	EXE	0,151741296	Borland Delphi	2	540	cwde - mov
13	EXE	0,894492567	Macromedia Windows Flash	2	2	adc - mov
14	EXE	0,000175179	MEW	3	540	cwde - mov - add
15	EXE	0,004765652	Borland Delphi	3	540	cwde - mov - add
26	DOC	0,879173038	DOCs old	3	23	add - add - add
Результат	DOC	0,879173038	DOCs_old	3	23	add - add - add
В приведенной таблице показано, что согласно алгоритму поиска подпоследовательности команд с максимальной вероятностью находятся случайные команды в файле, исполнимое представление которых в виде команд дает большие значения на исполнимых моделях, что при очень больших размерах файла может давать неверные результаты.
Выводы. Алгоритм классифицирования неопределенных участков программ, основанный на основе однородных Марковских цепей и построенный как языковая модель исполнимого кода, успешно работает в решении задачи гарантированного выделения только исполнимых команд из общей выборки. Но в общем случае при решении задачи разделения неопределенных участков программ его необходимо усилить более качественной исходной выборкой данных, а также выделить из всего набора исполнимых команд наиболее значимые для построения модели каждого класса.
Литература
1.	Linn C. Obfuscation of Executable Code to Improve Resistance to Static Disassembly / C. Linn, S. Debray // ACM Portal - The Guide to computing literature [Электронный ресурс]. - Режим доступа http://portal.acm.org/ citation.cfm?id=948149, платный (дата обращения: 29.04.2010).
2.	IA-32 Assembly Language Reference Manual [Электронный ресурс]. - Режим доступа http://docs.sun.com/app/docs/doc/806-3773, свободный (дата обращения: 29.04.2010).
3.	Rosenblum N. Machine Learning-Assisted Binary Code Analysis / N. Rosenblum, X. Zhu, B. Miller, K. Hunt // NIPS 2007 Workshop on Machine Learning in Adversarial Environments for Computer Security [Электронный ресурс]. - Режим доступа http://mls-nips07.first.fraunhofer.de/abstracts/16-Rosenblum.pdf, свободный (дата обращения: 29.04.2010).
4.	Silic A. N-grams and Morphological Normalization in Text Classification: a Comparison on a Croatian-English Parallel Corpus. / A. Silic, J. Chauchat, B.D. Ba^ic, A. Morin // SpringerLink [Электронный ресурс]. - Режим доступа http://www.springerlink.com/content /t45u6740713896x5/, платный (дата обращения: 29.04.2010).
5.	PeID [Электронный ресурс]. - Режим доступа http://www.peid.info/, свободный (дата обращения: 29.04.2010).
Эдель Дмитрий Александрович
Научный сотрудник ФГНУ НИИ «Спецвузавтоматика», г. Ростов-на-Дону. Тел.: 8 (863) 201-28-22 Эл. адрес: sva@rsu.ru
D.A. Edel
Language model of binary codes
Current paper proposes comparison of the words of natural and machine languages based on the language model of executable code. This language model is constructed on basis of homogenous Markov chains. The results of experimental studies of proposed model are also provided. Keywords: Machine code, Markov chain, gap completion.

=====



﻿УДК: 004.652 А.В. Маликов
Ориентированные графы в реляционных базах данных
Рассматриваются и исследуются методы управления данными, представленными в виде орграфов. Исследуются вопросы эффективного моделирования орграфов в реляционных базах данных по критериям компактности хранения и высокой производительности манипулирования данными. Приводятся примеры запросов манипулирования данными орграфов.
Ключевые слова: реляционные базы данных, иерархические структуры, ориентированные графы, модификация иерархических данных, запросы манипулирования данными.
Моделирование ориентированных графов в реляционных базах данных
Очень часто возникает необходимость в обработке больших массивов данных, представленных в виде иерархии. Если в качестве структурной абстракции при моделировании данных используется реляционная модель данных, то для моделирования иерархических структур должны использоваться специальные методы и подходы. В настоящее время не существует единого подхода к управлению иерархическими структурами данных. Наиболее исследованными, обладающими высокой эффективностью хранения и обработки данных в реляционных системах, являются методы управления деревьями. Основные направления в области моделирования деревьев в реляционных базах данных [1, 2]:
1.	Использование отношения типа «родитель-потомок».
2.	Использование типа данных XML.
3.	Использование концепции «материализованного пути» (Materialized Path).
Последнее направление является самым молодым и предполагает использование специального ключа, сопоставляемого каждой вершине дерева и содержащего в себе информацию обо всех вершинах по пути из корня дерева в саму вершину. Существует несколько подходов к вычислению материализованного пути. Множественная модель дерева [3] предполагает сопоставление каждой вершине дерева v е V, где V — множество вершин дерева, пары целочисленных значений (lef tv ,righ tv) , такой что, если u е V , u ^ v , то lef tv < lef tu , righ tu < righ tv . В [4] для реализации идеи материализованного пути каждой
вершине дерева ставится в соответствие матрица размера 2x2, содержащая целочисленные значения. Операциям модификации дерева ставятся в соответствие операции на матрицах. В [5] вводится новый тип данных на основе строкового типа данных для хранения значений материализованного пути как конкатенации символьных строк идентификаторов вершин на всех уровнях по пути из корня дерева в искомую вершину и расширяется набор функций для выполнения основных операций модификации дерева и извлечения данных. Похожий подход использован корпорацией Microsoft при создании в версии СУБД SQL Server 2008 нового типа данных Hierarchyld [1, 2], являющегося расширением двоичных данных переменной длины.
Очень часто в реляционных системах возникает необходимость в моделировании иерархий данных, описываемых в виде ориентированных графов. Возможны две модификации описанных ранее методов. Так как в общем случае число вершин и дуг орграфа различно, то, в отличие от деревьев, необходимо использовать не одно реляционное отношение, а два — отдельно для хранения данных о вершинах и о характере связей между вершинами. Пусть мощность множества вершин орграфа равна n, а множества дуг — m, тогда использование концепции типа «родитель — потомок» предполагает создание реляционного отношения с вершинами мощностью n и отношения с дугами мощностью m, содержащего пару атрибутов JlDparent, IDchildJ, являющихся внешними ключами к первичному ключу отношения с вершинами орграфа. По всей видимости, данный подход предполагает наиболее компактное хранение данных об орграфе и обладает низкими вычислительными затратами на операции модификации орграфа. Проблема такого подхода заключается в крайне низкой эффективности запросов выборки данных и, соответственно, низкой производительности решения вычислительных задач на графах.
Доклады ТУСУРа, № 2 (18), часть 2, декабрь 2008
Непосредственное использование концепции материализованного пути невозможно. Для этого необходимо без потери информации заменить орграф деревом. Возможны реализации нескольких алгоритмов такой замены, например алгоритм обхода ориентированной сети [6]. Реализация такого подхода возможна только для небольших орграфов, в противном случае это может привести к значительному росту мощности отношения с данными о дугах дерева замены, а длина ключа материализованного пути может превысить ограничения СУБД для индексных структур. Действительно, если в ключе материализованного пути зашифрована информация обо всех предках вершины, включая саму вершину, то длина ключа L некоторой вершины на уровне l ориентированной сети равна
L = ——1 • ceil (log2 b) ,
а -1
где а > 1 — среднее число родителей вершин орграфа; b е (1,») — среднее число детей вершин орграфа; ceil() — функция, возвращающая минимальное целочисленное значение, большее аргумента; ceil (log2 b) — длина фрагмента ключа для кодирования одной вершины на пути из корня дерева. Вообще значение длины фрагмента ключа кодирования определяется способом формирования ключа материализованного пути. Здесь использован самый оптимистичный способ кодирования, при котором для всякого родителя порядковый номер вершины-потомка кодируется битовой строкой переменной длины.
Приблизительная оценка длины ключа может быть вычислена по формуле
L < lal-1 • ceil (log2 b) .
Методы повышения эффективности моделирования ориентированных графов в реляционных базах данных
Обе описанные концепции можно обобщить, что позволит использовать достоинства каждой из них. Концепция типа «родитель — потомок» моделирует в реляционных таблицах бинарное отношение непосредственной достижимости на множестве вершин орграфа. Рефлексивно-транзитивным замыканием отношения непосредственной достижимости является отношение достижимости на орграфе. Данное отношение рефлексивно, транзитив-но, антисимметрично и может быть представлено квадратной матрицей достижимости. Для реализации матрицы достижимости в реляционной системе создается две таблицы: в первой хранятся данные о вершинах, во второй — данные о достижимости между вершинами в виде пар {предок, потомок}. Назовем данную концепцию типа «предки — потомки».
Таблица с данными о вершинах:
CREATE TABLE HierarchyObject
(ID int NOT NULL primary key, — идентификатор вершины,
name varchar(50),	— наименование вершины,
level int)	— уровень вершины в ориентированной сети.
Таблица с данными о достижимости между вершинами:
CREATE TABLE HierarchyLink
(IDancestor int NOT NULL,	— идентификатор вершины предка,
IDdescendant int NOT NULL)	— идентификатор вершины потомка.
Атрибуты HierarchyLink.IDancestor и HierarchyLink.IDdescendant являются внешними ключами по отношению к атрибуту HierarchyObject.ID. В большинстве запросов к таблице HierarchyLink будет накладываться фильтр по атрибуту IDancestor и/или ID-descendant, поэтому для повышения производительности таких запросов по каждому из атрибутов строится отдельный некластерный индекс типа B-дерево, в котором листовые узлы будут ссылаться на конкретные значения данных. По атрибуту с более низкой селективностью рекомендуется построить кластерный индекс, что позволит в запросах на выборку данных считывать меньшее число страниц памяти, вследствие упорядочивания записей таблицы на диске.
Предложенный подход позволяет моделировать материализованный путь в более привычном для реляционных систем виде: в виде конечного множества кортежей. На рис. 1 показано сравнение методов кодирования и хранения дерева с использованием концепции типа «предки — потомки» и материализованного пути.
Таблица HierarchyLink построена на основе матрицы достижимости вершин дерева.
Доклады ТУСУРа, № 2 (18), часть 2,декабрь 2008
Оценим мощности отношений Шегаг^уО^ееЪ и HierarchyLink. Мощность Шегаг-^уО^ееЪ равна числу вершин орграфа п . Мощность Н отношения HierarchyLink сопос-
б - с использованием концепции типа «предки - потомки»; с - с использованием концепции материализованного пути
Матрица достижимости вершин дерева
вершины	1	2	3	4	5	6
1	1
2	1	1
3	1		1
4	1	1		1
5	1	1			1
6	1		1			1
Матрица достижимости антисимметрична, следовательно, мощность отношения HierarchyLink может быть оценена как площадь прямоугольного треугольника с ячейка-
2
,, n + n „
ми под главной диагональю матрицы достижимости: H <-. Полученная оценка дос-
2
таточно грубая, так как заполненность описываемого треугольника признаками наличия пути между парами вершин может быть произвольной и зависит от характера связей между вершинами. Всякая вершина уровня l ориентированной сети имеет
A = (а0 + a1 + а2 +•.• + < + al-1j< lal-1 достижимых вершин. Если а = 1, то ориентированная
сеть является деревом и число достижимых вершин равно A = l. Если а е (1,»), то сумма
а1 -1
ряда равна A =-< n . Если ориентированная сеть состоит из l уровней, то мощность
а-1
отношения HierarchyLink можно оценить по формуле H <а—1 • n < lal-1n . Для дерева
а-1
справедливо а = 1, H < l • n .
Манипулирование данными ориентированных графов
Рассмотрим несколько примеров, демонстрирующих особенности формирования запросов к таблицам HierarchyObject и HierarchyLink.
Задача 1: найти общих предков вершин @ID1, @ID2, @ID3. Запрос на Transact SQL имеет вид:
SELECT hl3.*
FROM HierarchyLink hl1, HierarchyLink hl2, HierarchyLink hl3 WHERE hl1.IDdescendant=@ID1 and hl2.IDdescendant=@ID2 and
Доклады ТУСУРа, № 2 (18), часть 2, декабрь 2008
hl3.IDdescendant=@ID3 and
hl 1 .IDancestor=hl2.IDancestor and
hl2.IDancestor=hl3.IDancestor
Задача 2: найти общих потомков вершин @ID1, @ID2, не являющихся потомками вершины @ID3. SELECT hl3.*
FROM HierarchyLink hll, HierarchyLink hl2, HierarchyLink hl3
WHERE hl1.IDancestor=@ID1 and
hl2.IDancestor=@ID2 and
hl3.IDancestor=@ID3 and
hl 1 .IDdescendant=hl2.IDdescendant and
hl2.IDdescendant<>hl3.IDdescendant
Запросы на выборку данных из таблиц HierarchyObject и HierarchyLink обладают высокой производительностью, наглядностью и не предполагают изменения предикатов при изменении структуры орграфа.
Операции добавления, удаления и модификации дуг орграфа предполагают обработку подмножества записей таблицы HierarchyLink. Наиболее трудоемкой предполагается операция удаления дуги, при выполнении которой необходимо удалить записи о предках множества вершин-потомков. Если таблица HierarchyLink содержит только пару атрибутов {IDancestor, IDdescendant}, то на основе содержащихся в них данных невозможно гарантированно определить, какие записи подлежат удалению. Данное ограничение обусловлено возможностью существования в орграфе альтернативных путей между парами вершин. Существуют, как минимум, два способа решения данной проблемы. Во-первых, возможно дополнение таблицы HierarchyLink новыми атрибутами, отражающими характер связей между вершинами, например введение признака наличия дуги между вершинами. Тогда для выполнения операций удаления и модификации дуги необходимо выполнять рекурсивный поиск всех связанных вершин для определения их подмножества, которое будет удалено в запросе. Такой подход не может считаться удачным, так как снижает производительность запросов удаления, модификации дуг и значительно загружает аппаратные ресурсы сервера базы данных. Во-вторых, возможна модификация без потери информации исходного орграфа к орграфу, не содержащему альтернативных путей между парами вершин. Проведение такой модификации возможно с использованием специальных алгоритмов, реализованных в нормализованных на основе операций выборки и соединения базах данных [7]. Рассмотрим особенности запросов добавления, удаления и модификации дуг орграфа, в котором отсутствуют альтернативные пути между парами вершин. Исходной информацией для запросов являются значения двух переменных {@IDparent, @IDchild}, идентифицирующих конкретную дугу орграфа.
Задача 3: добавить в орграф дугу {@IDparent, @IDchild}. INSERT HierarchyLink SELECT b.IDancestor, a.IDdescendant FROM HierarchyLink a, HierarchyLink b
WHERE a.IDancestor=@IDchild and b.IDdescendant=@IDparent
Предложение SELECT формирует все возможные пары из потомков вершины @IDchild, включая ее саму, и предков вершины @IDparent, включая ее саму.
Задача 4: удалить из орграфа дугу {@IDparent, @IDchild}.
DELETE HierarchyLink
FROM HierarchyLink a, HierarchyLink b
WHERE a.IDancestor=@IDchild and b.IDdescendant=@IDparent and HierarchyLink .IDancestor=b.IDancestor and HierarchyLink.IDdescendant=a.IDdescendant
Задача 5: заменить в орграфе дугу {@IDparentOld, @IDchild} дугой {@IDparentNew, @IDchild}.
DELETE HierarchyLink
FROM HierarchyLink a, HierarchyLink b
WHERE a.IDancestor=@IDchild and b.IDdescendant=@IDparentOld and
HierarchyLink .IDancestor=b.IDancestor and
HierarchyLink.IDdescendant=a.IDdescendant
INSERT HierarchyLink
SELECT b.IDancestor, a.IDdescendant
Доклады ТУСУРа, № 2 (18), часть 2,декабрь 2008
FROM HierarchyLink a, HierarchyLink b
WHERE a.IDancestor=@IDchild and b.IDdescendant=@IDparentNew Выводы
Наиболее популярные методы моделирования деревьев в реляционных базах данных: отношение типа «родитель — потомок», тип данных XML, концепция материализованного пути. Обладая высокой эффективностью управления данными, представленными в виде деревьев, они не позволяют эффективно управлять данными, представленными в виде орграфов. Для моделирования орграфов в реляционных базах данных предложенные методы должны быть модифицированы. Перспективным направлением представляется отображение в реляционной системе матрицы достижимости, т.е. моделирование бинарного отношения достижимости между вершинами орграфа. Для управления множеством вершин создается отдельное реляционное отношение. Второе реляционное отношение используется для хранения отношения достижимости между парами вершин. Предложенный подход позволяет реализовать концепцию материализованного пути в более привычном для реляционных систем виде: как конечное множество кортежей реляционного отношения. По атрибутам последнего отношения строятся индексы типа сбалансированного дерева, что позволяет добиться высокой производительности запросов выборки данных. Мощности отношений оцениваются полиномиальными функциями от мощности множества вершин исходного орграфа. Представлены запросы поддержания орграфа в актуальном состоянии.
Литература
1.	SQL Server 2008 Books Online (May 2008), Using hierarchyid Data Types (Database Engine) [Электронный ресурс]. - Режим доступа:
http://technet.microsoft.com/enus/library / bb677173(SQL.100).aspx, свободный.
2.	SQL Server 2008 Books Online (May 2008), hierarchyid (Transact-SQL). [Электронный ресурс].
-	Режим доступа: http://technet.microsoft.com/en-us/library/bb677290(SQL.100).aspx, свободный.
3.	Celko J., Trees in SQL [Электронный ресурс]. - Режим доступа свободный. http://www.intelligententerprise.com/ 001020/celko.shtml
4.	Tropashko V. Nested Intervals Tree Encoding with Continued Fractions [Электронный ресурс].
-	Режим доступа: http://arxiv.org/abs/cs.DB/0402051, свободный.
5.	Roy J., Using the Node Type to Solve Problems with Hierarchies in DB2® Universal Database [Электронный ресурс]. - Режим доступа свободный.
http://www-106.ibm.com/developerworks/db2/library/techarticle/0302roy/0302roy.html
6.	Malikov A. Mathematical model for storing and effective processing of directed graphs in semistructured data management systems / A. Malikov, Y. Gulevskiy, D. Parkho-menko // ARTIFICIAL INTELLIGENCE, KNOWLEDGE INGINEERING and DATA BASES (AIKED '08) (UK, Cambridge, University of Cambridge). - 2008. - P. 541-548.
7.	Маликов А. Проектирование реляционных баз данных на основе операций выборки и соединения. Исследование их свойств. - Ставрополь: СевКавГТУ, 2002. - 245 с.
Маликов Андрей Валерьевич
Д-р техн. наук, доцент, проф. кафедры информационных систем и технологий Северо-Кавказского государственного технического университета Тел.: (8652) 56-39-10 Эл. почта: malikov@ncstu.ru
A.V. Malikov
Directed graphs in relational databases
Methods for managing data, which are represented as directed graphs, are considered and studied. Problems of compact storage and high data management performance of directed graphs in relational data bases are analyzed. Power evaluation of relations keeping directed graphs data is given. Examples of data management queries are shown.
Key words: relational databases, hierarchical structures, directed graphs, hierarchical data modification, database queries
Доклады ТУСУРа, № 2 (18), часть 2, декабрь 2008

=====



﻿Книга [2] целиком посвящена распознаванию фрактальных (пред фрактальных) графов, порожденных одной затравкой. Вопрос же о распознавании фрактальных (предфрактальных) графов, порожденных множеством затравок, оставался открытым до недавнего времени.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Емеличев В.А., Мельников О.И., Сарванов В.И., Тышкевич Р.И. Лекции по теории графов. - М.: Наука, 1990.
2.	КочкаровА.М. Распознавание фрактальных графов. Алгоритмический подход. — Нижний Архыз: РАН САО, 1998.
УДК 004.422
Ю.И. Рогозов РАЗРАБОТКА МЕТОДА ПОСТРОЕНИЯ ИНФОРМАЦИОННЫХ ФУНКЦИОНАЛЬНО-ОРИЕНТИРОВАННЫХ МОДЕЛЕЙ ПРЕДПРИЯТИЯ
Информационное обеспечение является базой, на которой строится вся управленческая деятельность. Информацию здесь следует рассматривать как некую совокупность различных сообщений, сведений, данных о соответствующих предметах, явлениях, процессах, отношениях и т.д. Эти сведения, будучи собранными, систематизированными и преобразованными в пригодную для использования форму играют в управлении исключительную роль. Необходимым условием для успешного функционирования любого промышленных предприятий является нормальная работа следующих процессов:
-	целенаправленный сбор, первичная обработка информации;
-	организация каналов доступа пользователей к собранной информации;
-	своевременное использование собранной информации для принятия решений.
Основная проблема сбора необходимой информации состоит в том, чтобы обеспечить:
-	полноту, адекватность, непротиворечивость и целостность информации;
-	минимизацию технологического запаздывания между моментом зарождения информации и тем моментом, когда к информации может начаться доступ.
Обеспечить это можно только современными автоматизированными методиками, базирующимися на основе информационных систем. Крайне важно, чтобы собранная информация была структурирована с учетом потребностей потенциальных пользователей и хранилась в форме, позволяющей использовать современные технологии доступа и обработки. Разработка информационных систем управления (ИСУ) является довольно сложным процессом, который требует значительного времени и ресурсов [1-4]. Современные крупные проекты ИСУ характеризуются, как правило, следующими особенностями:
-	сложность описания (достаточно большое количество функций, процессов, элементов данных и сложные взаимосвязи между ними), требующая тщательного моделирования и анализа данных и процессов;
-	наличие совокупности тесно взаимодействующих компонентов (подсистем), имеющих свои локальные задачи и цели функционирования (например, традиционных приложений, связанных с обработкой транзакций и решением регламентных задач, и приложений аналитической обработки (поддержки принятия решений), использующих нерегламентированные запросы к данным большого объема);
-	отсутствие прямых аналогов, ограничивающее возможность использования каких-либо типовых проектных решений и прикладных систем;
-	разобщенность и разнородность отдельных групп разработчиков по уровню квалификации и сложившимся традициям использования тех или иных инструментальных средств;
-	существенная временная протяженность проекта, обусловленная, с одной стороны, ограниченными возможностями коллектива разработчиков, и, с другой стороны, масштабами организации-заказчика и различной степенью готовности отдельных ее подразделений к внедрению ИСУ.
Для успешной реализации проекта объект проектирования (ИСУ) должен быть прежде всего адекватно описан, должны быть построены полные и функциональные непротиворечивые и информационные модели ИСУ. Кроме того, в процессе создания и функционирования ИСУ информационные потребности пользователей могут изменяться или уточняться, что усложняет разработку и сопровождение таких систем. В настоящее время один из наиболее сложных и важных этапов разработки ИСУ, этап построение информационной модели, остается во многом не формализованным. Начальные фазы проекта имеют решающее влияние на достигаемый результат, так как в них принимаются основные решения, определяющие качество информационной системы. Доля вклада в конечный результат концептуальной фазы [1] достигает 30%.
Построение информационных моделей требует использования известных и разработки новых методов формализации процесса предпроектного исследования. Процесс моделирования включает в себя четыре этапа: сбор данных об объекте управления - предпроектное обследование; построение графической модели бизнес процессов происходящих на предприятии; разработка формализованной модели бизнес процессов; исследование бизнес путем оптимизации формализованной модели. Из известных методов предпроектного обследования наиболее перспективным, с точки зрения его автоматизации, является метод предложенный в [14]. Метод включает в себя сбор и первичную обработку информации. В результате проведения первичной обработки получаем не массу несисте-матизиро ванной первичной информации, а информационную базу [10], содержащую данные о предприятии, пригодную для дальнейшего непосредственного автоматического анализа. Именно такое представление результатов обследования мы будем использовать в дальнейшей работе.
Поставим задачу построения информационной модели, которая позволяла бы отражать не только связи между структурными подразделениями предприятия и их вес, но и оценивать суть происходящих в организации процессов. В данном случае - какие операции (функции) над информацией (документами) выполняются внутри организации. В дальнейшем будем называть такую информационную модель функциональной ориентированной. Получение такой модели позволит ставить задачу оптимизации организационной структуры предприятия
по новым критериям, например, по загруженности отдельных функций, по равномерной загрузки и т.д.
Полученная функционально-ориентированная модель позволит реализовать методику построения организационной модели предприятия «снизу»: на первом этапе выявить весь перечень функций, которые должны быть реализованы на данном предприятии, для эффективного управления и достижения поставленной цели; определить внутренние и внешние связи между функциями; оценить количество информации проходящей по этим связям; провести реорганизацию отделов и служб путем перераспределения данных функций по признаку подобия функций. На этом этапе автоматически будет реализована связь между отделами
-	через связь между функциями вновь организованных отделов и служб. Возможно введение новых функций, документооборота и т.д.
Для формального описания и анализа графической модели бизнес процессов может использоваться достаточно широкий класс математических теорий (третий и четвертый этап), которые более подробно мы рассмотрим в данной работе.
Анализ существующих подходов к построению информационной модели предприятия
Автоматизация управления предприятием (организацией) в настоящее время все еще является весьма важной и актуальной проблемой [4, 16, 19, 23], так как интуиции и личного опыта руководителя часто уже не достаточно для принятия эффективных и своевременных управляющих решений. Поэтому современный подход к управлению предполагает не столько вложение больших средств на приобретение дорогостоящего оборудования, сколько создание и внедрение автоматизированных систем (АС) поддержки принятия управленческих решений. Создание АС всегда было и остается до сих пор сложным системным процессом, усугубленным следующими обстоятельствами:
-	современное предприятие - это достаточно сложная система взаимодействующих элементов (подразделений);
-	каждое предприятие уникально и типовые проектные решения требуют сложной адаптации;
-	уникальны и потоки (информационные и материальные), связывающие подсистемы предприятия, а также предприятие с окружающей средой. Вот почему при разработке АС требуется тщательное предварительное исследование информационных потоков. Для этого необходимо создать адекватную информационную модель предприятия [13]. Сам по себе этот процесс тоже не прост.
В настоящее время есть комплексы инструментальных средств, облегчающих процесс создания информационной модели, например, СЛ8Б-средства [9]. С их помощью можно существенно упростить процесс создания собственно модели. Однако предварительные этапы, связанные с описанием предметной области, остаются вне компетенции СЛ8Б-средств и выполняются неформально на вербальном уровне [13]. А между тем именно от качества их выполнения существенно зависит адекватность информационной модели. Подчеркиваем, что с точки зрения функционирования существенно важна именно информационная модель (ИМ), так как именно она определяет в значительной степени эффективность работы всей АС. Для самой же ИМ существенно важен только документооборот (движение или трафик документов) и только при тщательном изучении этого трафика возможно его оптимизировать, т.е. организовать его так, чтобы документы поступали вовремя и не образовывали очереди. Иначе говоря, на уровне всей АС обеспечивалась бы возможность своевременного принятия
управляющих решений. Конечно от технической реализации АС тоже многое зависит, но это только необходимое, но недостаточное условие эффективной работы АС.
Одной из разновидностей ИСУ являются так называемые корпоративные информационные системы (ИС) [20]. За последнее время в практике создания таких ИС достигнуты большие результаты [20]. Это стало возможным во многом благодаря тому, что вся информация, которой располагает корпорация, занесена в общую интегральную базу данных (ИБЗ) и к этой базе имеют в соответствии со своей компетентностью все подразделения корпорации. ИБЗ - это база данных многопланового применения. ИБЗ - важнейшая, но не единственная компонента ИС. Другой ее важной частью является сеть связи, включающая и обычные каналы телефонной, телеграфной и т.д. связи. То есть сеть связи постепенно преобразуется так называемую сеть интегрального обслуживания [14]. Информационная компонента, таким образом, присутствует в любой ИСУ, определяя ее как информационную подсистему и существенно влияя на структуру и эффективность ИСУ. Таким образом, имеет смысл изучать и оптимизировать ИС в отдельности. Сделать это можно, строя модели ИС. При этом всегда надо исходить из того, в какой предметной области и в какой мере адекватно собирается в ИС информация.
Итак, при изучении ИС следует исходить из того, что накапливаемая в ней информация представляет собой модель некоторой области реального мира. Основное требование к любой ИС - обеспечение адекватности этой модели.
Основными инструментами повышения эффективности работы сложных информационных систем являются: оперативный анализ ситуации, составление оперативно-календарного плана работы, моделирование процессов управления. Под моделированием понимается замещение одного объекта (оригинала) другим объектом, называемым моделью, и изучение свойств оригинала путем исследования свойств модели. Необходимость использования моделей возникает, когда получение решений на реальном объекте дорого, сложно или вообще невозможно. Модель упрощает, удешевляет и ускоряет процесс исследования оригинала.
Бизнес-процесс - совокупность нескольких связанных между собой процедур либо функций, которые совместно реализуют некую задачу в контексте организационной структуры, описывающей функциональные роли и отношения.
Используя процессный подход к управлению, выделяют и детально описывают существующие процессы и работы, определяя возможные сценарии их развития. При этом получают модель, в значительной степени соответствующую реальной системе. Исследование модели заключается в обосновании причинноследственных связей элементов данной структуры, обосновании улучшения ее параметров. Итогами моделирования процессов являются:
-	Оптимизация документооборота.
-	Ликвидация узких мест.
-	Устранение избыточных этапов.
-	Устранение дублирования.
-	Сокращение времени выполнения задач.
-	Определение мест и методов контроля процесса.
Модель называется абстрактной (концептуальной) либо материальной (физической) в зависимости от того какой системой она представлена, т.е. от выбора средств моделирования.
В дальнейшем под моделированием будем понимать описание потока работ (бизнес-процесса) в виде формальной модели, состоящей из взаимосвязанных операций. Моделирование системы процессов - абстрактное представление организации как системы взаимосвязанных и взаимодействующих процессов.
Рассмотрим существующие методы и подходы к процессу моделирования информационных систем.
В большинстве методов получения количественных решений лежит идея использования математических моделей оптимизации. Оптимальными называются наилучшие по определенному критерию из всех допустимых решений или альтернатив для достижения цели системы. Критерий оптимизации (критерий эффективности) представляет собой количественную оценку (меру) достижения цели системы. Для многих практических задач разработаны общие подходы и модели для получения количественных решений. Это стало возможным вследствие того, что по своей форме многие задачи тождественны, причем, задачи одного и того же класса возникают в самых различных отраслях. Помимо этого, каждый класс задач объединяет одинаковый вид математической модели для их описания. В настоящее время наибольшее распространение получили модели для следующих классов задач:
-	составление расписаний и календарное планирование;
-	массовое обслуживание;
-	распределение;
-	управление запасами;
-	износ и замена оборудования;
-	конфликтные ситуации.
В поддержку создания служб и систем управления потоками работ предлагаются методологии, стандарты и специализированное программное обеспечение, образующие в комплексе инструментальные средства разработчика.
Методология - это совокупность методов применяемых в жизненном цикле разработки процесса и объединенных одним общим подходом. В настоящее время получила распространение методология SADT. (Structured Analysis and Design Tecchnique) — методология структурного анализа и проектирования, которые дают ряд преимуществ в системах управления:
-	формализацию описания потоков работ;
-	переносимость: модели процессов, созданные в рамках одной системы, могут работать под управлением другой системы;
-	универсальность: применение единого механизма описания управления потоками работ в различных сферах деятельности.
На данный момент разработан ряд стандартов для описания реальных потоков работ, которые можно разбить на две категории:
-	Графовые модели отражающие древовидную структуру процесса.
-	Блочные модели, наиболее приближенные к блочной структуре языков программирования.
Итак, модели, указанные выше, в ряде случаев удобно использовать для эффективного описания окружения системы и ее функционирования. Между тем, по большому счету определяющей в любой системе является информация о потоках, обслуживающих систему. Поэтому имеет смысл исследовать не просто модель системы, а ее информационную модель (ИМ) детализированную до уровня функций и ее заполняемость информационными потоками, а не блоков системы. Такую модель можно называть функционально ориентированной ИМ
(ФИМ). Использование ФИМ важно и для построения модели функциональной структуры системы. Использование ФИМ позволяет ставить и решать новые задачи на уровне организационной и функциональной структуры, например, определять загрузку функций, перераспределять (оптимизировать) документооборот между отдельными функциями с целью обеспечения их полной загрузки и т.д.
Прежде, чем обсуждать эффективность ФИМ надо обратить внимание на то, что само исходное понятие информации оказывается до сих пор неоднозначно. В самом прагматическом аспекте - это набор документально оформленных сообщений, важных для системы. Информацию можно оценивать не только объемом, но и различными параметрами, среди которых важнейшими являются: своевременность, релевантность, ценность, старение, достоверность и т.д. Кроме того, информация может быть четкой, вероятностной и нечеткой. Способы ее восприятия и переработки в каждом случае разные.
Целью работы является разработка и исследование методов построения функционально ориентированные организационные структуры предприятий и ее оптимизация по заданным критериям.
Для достижения поставленной цели необходимо решить следующие задачи:
-	разработать методику формального построения функционально ориентированной модели организационной структуры предприятия, учитывающей документооборот;
-	выбор критериев оценки загруженности функциональных блоков подразделений;
-	разработка метода формального описания загруженности функциональных блоков подразделений (ФБП);
-	разработка методов оптимизации загруженности ФБП с учетом организации документооборота (интерфейса);
-	разработка методики по оптимальному распределению функций между структурными подразделениями предприятия;
-	разработка алгоритмов программ по автоматизации предложенных методик.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Информационные системы /Под ред. ПетровВ.Н. — СПб.: Питер, 2002. — 688 с.
2.	Смирнова Г.Н. и др. Проектирование экономических информационных систем: Учебник. — М.: Финансы и статистика, 2002.
3.	Экономическая информатика: Учебник для вузов /Под ред. Евдокимова. В.В. — СПб.: Питер, 1997. — 592 с.
4.	Миняев М.Ф. Информационные технологии управления: В 3-х книгах. Книга 2. Информационные ресурсы. — М.: Омега , 2003. — 432 с.
5.	Антипина Г.С., Гайфуллин Б.Н. Современные информационные технологии. Обучение и консалтинг. — М.: СИНТЕГ, Интерфейс-ПРЕСС, 2000. — 187 с.
6.	Алиев Т.М. и др. Автоматизация информационных процессов в интегрированных АСУ промышленными предприятиями. —М.: Энергоиздат, 1981.
7.	Марка Д.А., Мак Гоуэн К. Методология структурного анализа и проектирования. — М.: МетаТехнология, 1993.
8.	Вендров А.М. СЛББ-технологии. Современные методы и средства проектирования информационных систем. — М.: Финансы и статистика, 1998.
9.	Трофимов С.А. CASE-технологии: практическая работа в Rational Rose. — М.: Изд-во БИНОМ, 2001. - 272 с.
10.	Вендоров А.М. Проектирование программного обеспечения экономических информационных систем: Учебник. — М.: Финансы и статистика, 2002. — 325 с.
11.	Уокер Р. Управление проектами по созданию программного обеспечения. — М.: Лори, 2002. - 448 с.
12.	Основы построения АСУ /Под ред. Костюка И.В. — М.: Советское радио, 1977.
13.	Коберн А. Современные методы описания функциональных требований к системам. — М.: Лори, 2002. - 288 с.
14.	Свиридов А.С.. Методика проведения предпроектного обследования с целью проектирования информационной сети предприятия. — М.: Телекоммуникации, 2004. Вып. 4.
15.	ВасильевВ.И. Системы связи: Учебное пособие для вузов. — М.: Высшая школа, 1982.
16.	Данилевский Ю.Г. и др. Информационная технология в промышленности. — Л.: Ма-миностроение, 2002.
17.	Организованные структуры управления производства /Под редакцией Михьнера Б.З.
—	М.: Экономика, 1975.
18.	Рогозов Ю.И., Свиридов А.С. Концепция построения информационной модели предприятия. — М.: Техноцентр, 2004.
19.	МесаровичМ., ТакахараИ. Общая теория систем. —М.: Мир, 1978.
20.	Э.Д. Якубойтис. Локальные информационно-вычислительные сети. — Рига: Зинатне, 1985.
21.	УрсулА.Д. Природа информации. — М.: Наука, 1968.
22.	Хакен Г. Информация и самоорганизация. — М.: Мир, 1991.
23.	Волкова В.Н. и др. Теория систем и методы системного анализа в управлении и связи.
—	М.: Радио связь,1983.
УДК 519.7
Е.В. Заргарян КРИТЕРИИ НЕЧЕТКОГО БАЛАНСА ЭНЕРГЕТИЧЕСКИХ ПРЕДПРИЯТИЙ
Рассматриваются системы, состоящие из элементов производства энергоресурсов и потребителей видов энергоресурсов. Равновесными будут назваться такие системы, связанные с производством-потреблением, когда ни один из элементов производства или элементов потребления видов энергоресурсов не стремится к изменению состояния.
Каждый потребитель выбирает и приобретает для себя желаемый набор энергоресурсов, а каждый из элементов производства производит виды энергоресурсов, которые считает нужным. Регулятором в подобной системе служат цены на энергоресурсы, которые будут называться равновесными, если в системах «производство-потребление» установлено равенство между производимыми и потребляемыми энергоресурсами.
Равновесная система сбалансирована по материальным потокам, то есть суммарное производство энергоресурсов должно быть в точности равно потреб -ляемому количеству. Данное представление соответствует идеалу.
На практике всегда существуют ограничения и на производимые и на потребляемые энергоресурсы, поэтому в реальных системах существует «неравновесное равновесие» [1].

=====



﻿и	Ш -			Е
к		(Р> —^
1	V		г
К*
к*
и*
дш
*
I
Рис. 1. Общая схема формирования информационных потоков в процессе шифрования при переходе от действительного к виртуальному информационному пространству
Предложенная стратегия открывает новую область исследований, позволяющую реализовывать дополнительные потенциальные возможности уже известных методов и способов защиты информации, а также получать принципиально новые решения, обеспечивающие выполнение условий теоретической недешифруемости.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Галлагер Р. Теория информации и надёжная связь. - М.: Советское радио, 1974. —
720с.
2.	Величкин А.И. Передача аналоговых сообщений по цифровым каналам. - М.: Радио и связь, 1983. - 240 с.
3.	Котенко В.В., Румянцев К.Е., Поликарпов С.В.. Новый подход к оценке эффективности способов шифрования с позиций теории информации // Вопросы защиты информации. 2004. №1. - С.16 - 22.
О.О. Варламов
Россия, г. Москва,
Московская академия рынка труда и информационных технологий
ПОЛЬЗОВАТЕЛЬСКАЯ ТЕХНИЧЕСКАЯ КОМПЬЮТЕРНАЯ УГРОЗА И СПОСОБЫ ЗАЩИТЫ ОТ НЕЕ НА ОСНОВЕ ОБРАБОТКИ ИЗБЫТОЧНЫХ И ЗАКРЫТЫХ ЗАПРОСОВ К БАЗАМ ДАННЫХ
Как известно, для обеспечения технической защиты информации разработана Модель технических компьютерных угроз на основе выделения девяти типов: семантических, алгоритмических, вирусных, разграничительных, сетевых, потоковых, аппаратных, форматных и пользовательских технических компьютерных угроз. В данной работе исследована пользовательская техническая компьютерная
угроза и предложены способы защиты от нее на основе обработки избыточных и закрытых запросов к базам данных.
Объектами защиты от технических компьютерных угроз принято считать компьютерные системы (сети) и характеристики их пользователей и программноаппаратных средств. Девять типов компьютерных угроз необходимо учитывать в первую очередь при обеспечении безопасности информации в ключевых системах информационных инфраструктур - ОБИ КСИИ, являющихся по существу гетерогенными территориально распределенными компьютерными сетями, аналогичными Интернет. Хотя, не все компьютерные сети имеют физическое подключение к Интернету, но практически все они используют однотиповые технические решения. Ранее было доказано, что под компьютерной разведкой (КпР) не достаточно понимать только получение информации из баз данных ЭВМ, включенных в компьютерные сети, а также информации об особенностях их построения и функционирования [1]. В настоящее время КпР - это добывание информации из компьютерных систем и сетей, характеристик их программно-аппаратных средств и пользователей [2]. Существует три типа источников информации для КпР:
1)	данные, сведения и информация, обрабатываемые, в т.ч. передаваемые и хранимые, в компьютерных системах и сетях;
2)	характеристики программных, аппаратных и программно-аппаратных комплексов;
3)	характеристики пользователей компьютерных систем и сетей.
Различным видам КпР посвящено множество научно-исследовательских работ. Так как пользовательская КпР позволяет получать данные непосредственно о пользователях (людях и программах) компьютерных систем и сетей, то необходимо разработать методы защиты от нее. Напомним, что пользователями компьютерных сетей являются не только люди, но и отдельные программы или программно-аппаратные комплексы.
Пользовательская КпР - это добывание информации о пользователях, их деятельности и интересах на основе определения их сетевых адресов, местоположения, организационной принадлежности, анализа их сообщений и информационных ресурсов, а также путем обеспечения им доступа к информации, циркулирующей в специально созданной легендируемой (заманивающей) информационной инфраструктуре (приманка).
Появление и развитие пользовательской угрозы информационной безопасности обусловлено повсеместным использованием компьютерных сетей, когда некоторая информация, самого верхнего уровня, о непосредственных пользовате-лях-людях может добываться техническими средствами, что ранее было прерогативой исключительно "человеческих" агентурных методов. Например, путем системного анализа запросов человека в различные базы данных и к информационным ресурсам, участия его в телеконференциях, получения его адресно-именной информации и т.п. представляется возможным добывание информации о пользователях, их деятельности и интересах. Кроме того, путем обеспечения изучаемым пользователям доступа к информации, циркулирующей в специально созданной легендируемой (заманивающей) информационной инфраструктуре (приманка), также возможно добывание техническими средствами информации об интересах пользователей, их организационной принадлежности, функциональным обязанностям и других сведений (пороках, запросах, проблемах личного характера, психологического портрета и т.п.), которые могут использоваться для агентурных и других целей.
Итак, рассмотрим более подробно обращение пользователей к различным информационным ресурсам и базам данных, которые для краткости будем обозна-
чать - БД. Суть пользовательской КпР заключается в анализе интересов пользователей по их запросам к БД. Следовательно, для защиты от пользовательской КпР необходимо:
1)	либо замаскировать истинные потребности в ресурсах БД избыточными, ложными запросами,
2)	либо скрывать авторов запросов к БД,
3)либо	скрывать сами запросы.
Возможно, есть и другие типы способов, которые еще ждут своих первооткрывателей.
1.	Наиболее простым и широко распространенным способом является маскирование истинных запросов путем генерации избыточных запросов, который будем называть "способ избыточных запросов". Суть данного способа заключается в том, чтобы создавать большой поток самых разнообразных запросов, в котором сложно будет выявить небольшое количество истинных запросов. Образно говоря, надо создать "шум" и скрыть истинные "сигналы". На данном этапе необходимо переходить к количественным оценкам создания подобного шумового фона, разработать методики определения типового разнообразия избыточных запросов.
Способ "избыточных запросов" в настоящее время активно применяется. Например, если какой-либо фармацевтической компании нужно получить у сторонних организаций опытные данные по некоторому конкретному "препарату", то осуществляется закупка всей базы данных для маскирования истинного узкого направления исследований фармацевтической компании. Это аналогично походу в книжный магазин и закупке там, вместо нескольких нужных книг, полного ассортимента имеющихся книг. Конечно же, это огромные затраты, но в некоторых случаях они себя оправдывают: ведь никто не узнает, какие именно книги вам были нужны, а, следовательно, не узнают и чем вы занимаетесь.
На практике хорошо зарекомендовал себя способ создания разнообразного трафика путем выделения многим сотрудникам одного "пользовательского имени", когда внешним наблюдателям неизвестно кто и какую информацию запрашивает внутри организации. В качестве аналога, возможно, следует использовать методы защиты акустических сигналов. Это пока лишь направление для серьезной математической работы и обоснования методик защиты. Многие организации пытаются бороться с "лишним" трафиком, запрещают сотрудникам использование сети в личных и неслужебных целях, однако, с точки зрения защиты от пользовательской КпР - это именно один наиболее доступных способов защиты от нее. Ведь понятно, что когда истинный трафик составляет 5-10 % от общего трафика, то внешним наблюдателям, в том числе и злоумышленникам, будет достаточно сложно получить информацию путем пользовательской КпР.
2.	Вторым способом является скрытие авторства информационных запросов к БД. Это можно осуществить, например, подобно тому, как в библиотеке можно либо просить разных людей взять необходимые вам материалы, либо самому записаться в различные библиотеки и в каждой брать малую долю необходимых материалов, либо записаться в библиотеку под разными фамилиями (реальность этого -отдельный разговор) и опять же под каждой фамилией брать малую долю необходимых материалов. Получаем следующие варианты защиты: получать требуемые материалы через различных пользователей малыми долями; обращаться к различным источникам информации за малыми долями; зарегистрироваться разными пользователями - "масками" и получать те же самые малые доли требуемой информации. При этом, важно обеспечить маскирование и избыточные для вас запросы и от истинных пользователей, и от ваших "масок". Методика регистрации разных "масок" требует, возможно, "входа в сеть" действительно с физически раз-
личных мест подключения к сети. Впрочем, при достаточных усилиях, все эти методы могут быть реализованы уже в настоящее время. Побочным эффектом первого и второго направления является избыточный трафик, подобный "спаму", но это еще необходимо исследовать.
3.	Скрытие самих запросов. В этом направлении защиты возможны два основных варианта: 1) скрытие самого факта запроса и 2) при известном "легальном" запросе скрытие содержания запроса. Для скрытия самого запроса необходимо использовать "вирусоподобные" и/или "разграничительные" (несанкционированный доступ - НСД) методики, которые в данной работе не рассматриваются.
Наибольший интерес в определенных "легальных" применениях представляет проблема при известном запросе скрытия именно и только содержания запроса. В данном направлении выделим, прежде всего, такую область, которую принято называть: обработка закрытых запросов (ОЗЗ). В работах Дмитрия Валерьевича Асонова [3-9] предложен оригинальный подход к решению проблемы "обработки закрытых запросов". Кратко опишем предлагаемые решения, а желающим более подробно разобраться в данном методе рекомендуем обратиться к указанной выше литературе. Итак, в докладе Асонова Д.В. [3] рассматриваются две нестандартные проблемы обработки запросов к базам данных (БД).
Первая проблема ОЗЗ заключается в обработке запроса к БД так, что:
-	сервер (и владелец) базы данных не может получить никакой информации о содержании и результате запроса пользователя и
-	пользователь не получает никакой информации о БД, за исключением ответа на свой запрос.
Подчеркнем, что доступ к БД нам разрешен, но никто, кроме нас, не должен в принципе знать ни о нашем вопросе, ни о полученном ответе. Администратор БД видит только факт самого запроса и размер полученных по этому запросу данных. Это позволяет владельцу БД выставить соответствующий счет на оплату услуг.
Известны три категории решения данной проблемы:	1) теоретические,
2)	криптографические и 3) ОЗЗ на защищенном вычислительном устройстве (ЗВУ). Теоретические методы в разных вариациях рассматривают копирование всей БД. Криптографические решения существуют на основе доработок нестандартными методами, но для них обязателен доступ в реальном времени и перебор всей базы данных. Например, владелец БД пересылает заказчику всю БД в зашифрованном виде, что исключает возможность воровства информации. Заказчик через каталог или аннотации выбирает из БД требуемую ему одну запись и также шифрует ее "поверх" шифра владельца. Используемые шифры должны быть гомоморфными (или коммуникативными), что позволяет осуществлять замену шифров. Заказчик не может прочесть запись, так как она зашифрована владельцем. Заказчик отправляет зашифрованную запись владельцу БД, который также не может прочесть эту запись, ведь ему не известен шифр заказчика. Далее, владелец "снимает" свой шифр, выставляет счет на оплату и после получения денег пересылает запись заказчику. Заказчик после оплаты и получения записи расшифровывает ее и использует для своих целей. Получаем, что заказчик получает только одну запись, но ее содержание не известно никому, ведь она зашифрована самим заказчиком. Владелец БД отдает заказчику только одну запись, ведь все остальные записи зашифрованы именно владельцем. По каналам связи передается только зашифрованная информация, что исключает доступ к ней посторонних лиц. У этого класса криптографических решений существует огромный недостаток, обусловленный необходимостью перебора всей БД, что значительно увеличивает время между заказом и получением требуемой записи. Учитывая огромные размеры современных БД, этот недостаток делает невозможным реальное использование криптогра-
фических методов для решения проблемы обработки закрытых запросов к большим и/или часто обновляемым БД.
Обработка закрытых запросов на защищенном вычислительном устройстве. Защищенные вычислительные устройства - ЗВУ, представляют собой специальный класс устройств для хранения защищенных данных и исключения доступа к ним людей, даже системных администраторов и владельцев. При попытке проникновения в ЗВУ все данные на нем немедленно физически уничтожаются и проводится оповещение соответствующих служб. Это устройство выполняет функции "третьего доверенного лица", которому доверяют и владелец, и заказчик. Если любого человека хотя бы теоретически можно подкупить, то ЗВУ подкупить невозможно. Отметим, что ЗВУ используются для решения различных задач и достаточно большим количеством способов. В данной работе целесообразно для примера проанализировать только несколько способов. В целом ЗВУ представляют собой "черный ящик", который встраивается в оборудование владельца информационного ресурса. Возможно, что такое "встраивание" является рискованным и психологически сложным для владельца.
Рассмотрим запрос заказчика на получение конкретной записи от владельца БД. Заказчик посылает свой зашифрованный запрос к ЗВУ, которое его расшифровывает. Далее ЗВУ получает поочередно все записи из БД, но "откладывает", запоминает у себя внутри только одну - нужную заказчику. После выполнения финансовых действий, владелец разрешает ЗВУ отослать зашифрованную этим ЗВУ запись заказчику. Этот шифр знают только ЗВУ и заказчик, который после получения самостоятельно расшифровывает требуемую ему запись и использует ее. Таким образом, никто, кроме ЗВУ, не знает, какую запись получил заказчик, а заказчик не видит остальных записей БД владельца.
Разработаны различные модификации применения ЗВУ для сокращения времени обработки запросов и обеспечения их защищенности. Применяют различные виды препроцессинга и другие виды обработки БД. Например, можно хранить в ЗВУ специальным образом "перемешанный" каталог реальной БД, на основе которого значительно ускоряется время обработки запросов заказчика, ведь уже нет необходимости при каждом запросе перебирать всю БД, а заказчик заказывает и получает требуемую запись по преобразованному в ЗВУ номеру. Для повышения защищенности такой каталог в ЗВУ регулярно обновляют и осуществляют "пер-мутацию", т.е. случайное перемешивание.
Вторая проблема ОЗЗ заключается в обработке запроса на пересечение двух баз данных таким образом, что:
-	владельцы баз данных не могут получить никакой информации о БД партнера, а также о результате запроса на пересечение;
-	пользователь не может получить никакой информации из баз данных, за исключением результата запроса на пересечение.
В этом случае заказчик не узнает ничего лишнего о БД, кроме прямого ответа на свой запрос. ОЗЗ позволяет получать заказчикам такие ответы и не показывает никому содержание самих БД. Например, две компании могут проводить статистические исследования пересечений своих пользователей, но исходные данные о своих клиентах эти компании друг другу не показывают (только обобщенные статистические результаты и зависимости). Другой пример, когда транспортные компании перевозят пассажиров и собирают все данные на них, а внешние службы безопасности имеют списки "злоумышленников" ("стоп-списки"). Задача состоит в том, что бы при решении совместных задач по обеспечению безопасности пассажиров никто из злоумышленников, включенных в "стоп-списки", не мог попасть на транспорт и при этом, чтобы транспортные компании не знали самих "стоп-
списков", а службы безопасности не знали о перемещениях лиц, не входящих в "стоп-списки". Таким образом, формально решается задача получения взаимного доступа только к пересечениям двух баз данных, но владельцы этих БД не знают ничего другого о чужих БД. Решение этой проблемы также возможно криптографическими способами, аналогичными выше указанным способам. К недостаткам этих способов можно отнести то, что они способны выявлять только полное равенство (совпадение) признаков записей из разных баз данных. Более перспективным является применение защищенных вычислительных устройств. Такие ЗВУ внутри себя получают доступ ко всем базам данных и могут не только выявлять полное равенство (совпадение) записей из разных БД, но и определять степень их близости (находить близкие записи или подобные).
Потенциальные приложения этих двух проблем ОЗЗ очень разнообразны и включают, помимо технической защиты от пользовательской КпР, такие области, как коммерческая безопасность, антитеррористические меры, экономика (банковское дело, трейдинг, маркетинг, реклама, электронные магазины, и т.д.), биомедицина, патентное дело, и т.д. В настоящее время проводятся исследования по следующим основным направлениям в области обработки закрытых запросов: комбинирование криптографических методов и защищенных вычислительных устройств; закрытые запросы к сверхбольшим базам данных в режиме времени, близком к реальному; закрытые запросы к нескольким базам данных, а также по другим направлениям. Таким образом, в актуальной области пользовательской компьютерной разведки появляются новые угрозы и своевременно разрабатываются методы защиты от них. Извечная борьба средств нападения и защиты продолжается на новом (компьютерном) уровне развития технического прогресса.
Выводы. Для обеспечения технической защиты информации предложен и обоснован новый актуальный подход к исследованию пользовательской технической компьютерной угрозы или, другими словами: пользовательской компьютерной разведки. Предложены три вида способов защиты от нее на основе маскирования запросов, обработки избыточных и закрытых запросов к базам данных. Особый интерес представляет, предложенный Д.В. Ассоновым метод защиты от пользовательской технической компьютерной угрозы путем обработки закрытых запросов на основе защищенных вычислительных устройств.
БИБЛИОГРАФИЧЕСКИЙ СПИСОК
1.	Меньшаков Ю.К. Защита объектов и информации от технических средств разведки. - М.: Российский гос. гуманитарный ун-т, 2002. - 399с.
2.	Варламов О. О. О системном подходе к созданию модели компьютерных угроз и ее роли в обеспечении безопасности информации в ключевых системах информационной инфраструктуры // Известия ТРТУ, Тематический выпуск "Информационная безопасность", - Таганрог: Изд-во ТРТУ, 2006, № 7 (62). - С. 216-223.
3.	Асонов Д.В. Обработка закрытых запросов. Доклад на семинаре Московской секции ACM SIGMOD, ВМК МГУ. 26.04.2007
4.	Rakesh Agrawal, Dmitri Asonov, Murat Kantarcioglu, Yaping Li: Sovereign Joins. ICDE 2006: 26
5.	Dmitri Asonov: Querying Databases Privately: A New Approach to Private Information Retrieval Springer 2004
6.	Dmitri Asonov, Ramakrishnan Srikant: Enabling Sovereign Information Sharing Using Web Services. SIGMOD Conference 2004: 873-877
7.	Dmitri Asonov, Johann Christoph Freytag: Almost Optimal Private Information Retrieval. Privacy Enhancing Technologies 2002: 209-223
8.	Dmitri Asonov, Johann Christoph Freytag: Repudiative information retrieval. WPES 2002: 32-40
9.	Dmitri Asonov: Private Information Retrieval. GI Jahrestagung (2) 2001: 889-894

=====



﻿РАЗРАБОТКА СИСТЕМ УПРАВЛЕНИЯ НОРМАТИВНО СПРАВОЧНОЙ ИНФОРМАЦИЕЙ
ДЛЯ СИСТЕМ ОБРАБОТКИ СТАТИСТИЧЕСКОЙ ИНФОРМАЦИИ
К.А. Линев,
аспирант кафедры кибернетики Московского института электроники и математики (технического университета). Адрес: г. Москва, Б.Трехсвятительский переулок, д. 3, e-mail: ZnTenshi@hotmail.com.
В статье рассматривается задача построения систем управления нормативно справоч- | ной информацией (СУ НСИ) для систем сбора, контроля качества и обработки статистической информации. Выделяются особенности, характерные для СУ НСИ, предназначенных для использования в области автоматизации статистических исследований, формулируются требования к таким системам. Рассматриваются подходы к построению некоторых из компонентов изучаемых систем на основании опыта построения СУ НСИ для Всероссийской переписи населения 2010 года (ВПН-2010).
V	>
Ключевые слова: мастер-данные, древовидный спрвочник, стаститичкие обзоры, компьютерная поддержка, статитический справочник.
Под термином нормативно-справочная информация (НСИ), или мастер-данные, как правило, понимают условно-постоянную часть всей корпоративной (учрежденческой) информации, не претерпевающую существенных изменений в процессе повседневной деятельности организации, на основании которой формируются текущие документы. [1]
В крупных, особенно — территориально-распре-деленных компаниях, в силу исторического их развития, часто сосуществует большое количество действующих систем ведения НСИ, в том числе и не автоматизированных, а также различных спра-
вочников, часто никогда не предназначавшихся для использования в 1Т инфраструктуре. При этом в каждой такой системе присутствуют собственные источники пополнения НСИ. Эта ситуация оказывается серьезным препятствием на пути интеграции корпоративной 1Т-инфраструктуры и вызывает огромные трудности при обмене данными между локальными приложениями, а также при создании сводных аналитических отчетов.
Одним из ярких примеров предприятий, которым приходится работать с большим количеством НСИ, являются органы государственной статистики и частные статистические компании. Огромное
количество различных справочников и таблиц используется при обработке данных различных исследований, проводимых этими организациями. При этом справочники постоянно обновляются по результатам уже проведенных исследований, территориально-административных изменений, изменений законодательства и по множеству других причин. Рассмотрению вопросов организации СУ НСИ в контексте работы именно таких предприятий и посвящена эта работа.
СУ НСИ наряду с самой информацией включает также комплекс средств ее поиска, хранения, обработки и распределения, методов ее ведения, поддержания в актуальном состоянии, а также совокупность организационно-распорядительных документов и регламентов, регулирующих использование и ведение данных НСИ. [2]
Любая претендующая на промышленное использование информационная система должна поддерживать управляемые ею данные на высоком уровне качества. Важную роль играют критерии, которые на сегодня универсальны для любых типов корпоративных данных, такие как полнота, непротиворечивость, корректность и актуальность. Причем применительно к данным НСИ, жизненный цикл которых по определению превышает аналогичный цикл для оперативных данных, они имеют еще большее значение.
Вместе с тем, помимо этих классических критериев (реализация которых на сегодня обеспечивается вполне отработанными методиками проектирования данных и надежными программными продуктами), существуют и более специфические, характерные именно для НСИ. Это идентифицируемость и уникальность, которые обеспечивают однозначную и уникальную идентификацию данных, что необходимо для установления ссылок на них из других элементов НСИ и прикладных документов [2].
СУ НСИ для систем информационного обеспечения статистических исследований обладают рядом особенностей, которые приводят к особенной актуальности качественного управления НСИ в таких системах. Перечислим наиболее заметные из этих особенностей.
Полный цикл жизни СУ НСИ в течение сравнительно небольшого промежутка времени. Поскольку практически каждое статистическое исследование уникально за счет как различия требований разных организаций к содержимому статистической информации, так и изменения представления о содержании исследования на основании уже про-
веденных аналогичных исследований, для каждого исследования необходимо заново производить первичную загрузку и развертывание системы. Каждое исследование также потребует новых способов работы с бизнес-приложениями.
Высокая стоимость восстановления утерянных в результате ошибок данных. Поскольку сбор информации и представляет собой суть исследования, в случае ее потери стоимость восстановления утраченных данных равняется стоимости их изначального получения. Таким образом, каждый сбой в СУ НСИ наносит серьезный урон всему исследованию. Это в свою очередь делает низкокачественное управление НСИ неприемлемым в информационных системах, связанных с обработкой статистической информации.
Географическая удаленность элементов системы друг от друга. Любое крупное исследование связано с управлением большими объемами данных, получаемыми в удаленных друг от друга узлах системы. Это создает ряд специфических сложностей, начиная с проблем со связью между узлами, заканчивая различиями в местном времени.
Централизованность. В силу природы поставленной задачи, поток информации при сборе статистической информации всегда направлен к одному центральному узлу системы, в котором должна быть произведена обработка собранных данных. Эту особенность таких систем можно использовать при построении СУ НСИ для упрощения, а соответственно — повышения надежности таких систем.
Таким образом, разработка программного обеспечения для СУ НСИ сталкивается со следующим набором задач: 4- Первичная загрузка мастер-данных 4- Организация хранения мастер-данных 4 Организация обновления и распространения мастер-данных
4 Организация интерфейсов с бизнес-приложениями.
При выполнении всех этих операций, НСИ должна в каждый момент времени отвечать обозначенному выше набору критериев качества.
Для каждой из этих задач характерен собственный круг вопросов, которые необходимо решить при разработке ПО СУ НСИ.
При первичной загрузке данных возникает задача преобразования большого объема существующих разнородных справочников к некоторому эталонному виду. Типичной является ситуация, когда при проведении очередного большого статистического исследования приходится создавать для обработ-
ки его результатов отдельную информационную систему. Наиболее характерный способ хранения справочников в компаниях со слабой автоматизацией бизнес-процессов — электронные таблицы. Как правило, это файлы Excel или легко приводимые к ним форматы. Конечно, можно вручную переносить справочники, однако объемы справочной информации могут быть невероятно большими. Например, представьте себе всероссийский справочник, сопоставляющий городские кварталы и сельские населенные пункты их индексам. Даже если проделать всю эту работу вручную, количество допущенных в ней ошибок может обесценить справочник. Таким образом, возникает вопрос о необходимости автоматического преобразования данных.
Для решения этой проблемы в рамках проекта по техническому обеспечению Всероссийской переписи населения 2010 года была решена задача автоматического преобразования множества взаимосвязанных свободно редактируемых справочников, сохраненных в формате Excel в инструкции на языке T-SQL для СУБД Microcoft SQL Server по заполнению таблиц БД содержащимися в справочниках мастер-данными. Поскольку таблицы Word и многих других офисных приложений легко преобразуются в таблицы Exel путем прямого копирования данных, это решение фактически позволяет решить проблему первичного заполнения БД, входящей в СУ НСИ на основании эталонных справочников, хранящихся в виде электронных документов.
Приложение использует при работе метаданные о структуре справочников в формате XML и с помощью компонента Aspose Cells производит обработку документов Excel. Оно поддерживает сложные представления данных, такие, как древовидные справочники или связь записей различных справочников на основании их геометрического расположения на листе Excel. При загрузке производится контроль целостности данных, то есть загруженные мастер-данные гарантированно имеют корректную структуру.
Вторым по популярности после электронных документов способом хранения справочников в организациях являются «малые» СУБД, такие, как, например, Microsoft Access. Причем зачастую БД, в которых хранится НСИ, спроектирована неудачно и не обеспечивает должного качества НСИ. Кроме того, необходимо обеспечение связи между справочниками, загружаемыми из различных, до того не связанных источников.
В рамках того же проекта было создано приложе-
ние, решающее и эту задачу. Приложение работало с объемным, порядка 180000 записей, территориальным справочником, имеющим древовидную структуру. Оно обеспечивало обработку множественных локальных БД, содержащих часть этого справочника в виде плоских таблиц, и заполняло централизованный справочник с обеспечением всех нужных ссылок для формирования древовидного справочника.
После загрузки данных необходимо решить задачу об организации их хранения, обновления и распространения. В этом вопросе существуют три возможных подхода [1]:
♦	Централизованный, характеризующийся централизованным хранением эталонов мастер-данных
♦	Децентрализованный, характеризующийся созданием распределенного виртуального хранилища НСИ
♦	Смешанный, представляющий собой попытку объединить наилучшие качества предыдущих двух подходов.
Первый поход обладает целым рядом преимуществ, таких, как простота разработки и автоматическое решение проблемы поддержания целостности данных при условии замены всех копий на эталоны.
С другой стороны, представим себе систему, узлы которой расположены по всей России, каковым свойством обладает система, обеспечивающая работу любого всероссийского статистического исследования. Необходимость при каждой операции обращаться к некоторому центральному хранилищу, допустим, расположенному в Москве, не только приведет к катастрофическому падению скорости работы системы в узлах, расположенных в восточной Сибири, но и в ряде случаев просто сделает работу системы невозможной из-за отсутствия каналов связи с центральной системой.
Однако и традиционный распределенный подход в случае с всероссийским исследованием также не годится. Традиционным методом обновления справочников и поддержания целостности системы является ночная нормализация данных, когда никакие пользовательские операции не производятся. Однако что будет делать такая система, если в одном ее узле полночь, а в другом скоро полдень?
Таким образом, необходимо разработать некоторый гибридный механизм работы с распределенными данными, позволяющий обеспечить максимум преимуществ централизованного подхода, но при этом способный справиться со специфическими трудностями при работе на обширной территории.
Для решения этой проблемы предлагается с помощью методов теории графов оптимальным с точки зрения затрат сетевого трафика и времени образом разделить сеть на подсети, управляемые централизованным способом. Каждая такая подсеть должна быть связана с другими подсетями с помощью специального набора программных инструментов, позволяющего незаметно для подсети обеспечивать доставку в нее обновлений из центрального узла и передачу результатов работы. Важно отметить, что для обеспечения максимальной эффективности должны поддерживаться самые различные способы связи, начиная от защищенной передачи через Интернет и заканчивая транспортировкой данных на физических носителях.
В связи с последним требованием приходиться признать, что информационная система, скорее всего, сможет гарантировать актуальность данных только в центральном узле, в подсетях же будет поддерживаться только локальная целостность и информация, необходимая для связывания данных с, возможно, изменившимися данными центрального узла в тот момент, когда это будет возможно.
Таким образом, будет обеспечена, с одной стороны, централизация управления НСИ в каждой отдельной подсети, с другой стороны, ценой необходимости поддержания репликации данных лишь на небольшом числе узлов будет достигнута гибкость и масштабируемость распределенной системы.
На данном этапе в ходе работы над СУ НСИ для статистических исследований удалось выделить свойственные таким системам особенности, кото-
рые должны учитываться при разработке. Поставлены основные задачи, которые должны решаться системой. Продемонстрирована возможность эффективного решения одной из поставленных задач — выполнения первичной загрузки данных из имеющейся у клиентской организации слабоструктурированной информации — путем создания модулей, выполняющих загрузку данных из электронных документов и слабо структурированных БД в систему таблиц НСИ заданной структуры. Предложен способ решения задачи организации хранения, распространения и обновления данных с помощью двухуровневой схемы хранения, сочетающей свойства централизованной и децентрализованной моделей хранения данных.
В настоящее время производится исследование возможностей по практической реализации предложенной в статье схемы хранения, обновления и распространения данных. Кроме этого ведется разработка механизма взаимодействия СУ НСИ с бизнес-приложениями, который предоставлял бы возможности максимально гибкого ввода и вывода данных в различных представлениях, сохраняя при этом идентифицируемость и уникальность всех записей, управляемых системой. ■
Литература
1.	Ярослав Помазков, «Системы НСИ: мировой опыт и тенденции развития», журнал PC Week, №522, Москва, 2006 г.
2.	Дмитрий Гулько, «Мастер-данные: найден кратчайший путь к СОА», CNews, Москва, 2006 г.

=====



﻿УДК 001; 681.3 В.С. СМОРОДИН
АГРЕГАТНАЯ СИСТЕМА АВТОМАТИЗАЦИИ МОДЕЛИРОВАНИЯ ВЕРОЯТНОСТНЫХ ТЕХНОЛОГИЧЕСКИХ ПРОЦЕССОВ ПРОИЗВОДСТВА
Abstract: Particularities of formalization of system realizing a modular way of imitation for probabilistic technological production processes are formulated. About composition and structure of system for automation of simulation realizing a modular way of imitation is reported. Problems of design modeling of similar processes by means of developped modeling system for automation are enumerated.
Key words: modeling system realizing a modular way of imitation, probabilistic technological processes of production, technology of design modeling.
Анотація: Формулюються осо6лшо^1 формалiзацiї імовiрних технологiчних процеав виробництва за допомогою агрегатiв. Повiдомляється про склад i структуру системи автоматизації iмiтацiйного моделювання, яка грунтується на агрегатному засобi iмiтацiї. Перераховуються задачi проектного моделювання подiбних процеав за допомогою разробленної системи автоматизації моделювання.
Ключові слова: агрегатна система моделювання, імовiрнi технологiчнi процеси виробництва, технологiя проектного моделювання.
Аннотация: Формулируются особенности формализации вероятностных технологических процессов производства с помощью агрегатов. Сообщается о составе и структуре системы автоматизации имитационного моделирования, основанной на агрегатном способе имитации. Перечисляются задачи проектного моделирования подобных процессов с помощью разработанной системы автоматизации моделирования.
Ключевые слова: агрегатная система моделирования, вероятностные технологические процессы производства, технология проектного моделирования.
1.	Введение
Реализация управления технологическими производственными процессами с целью снижения рисков возникновения чрезвычайных ситуаций сталкивается с двумя основными их особенностями: скоростью протекания и многомерностью. Многомерность технологических процессов обусловлена следующими факторами:
-	различной скоростью протекания во времени вероятностных технологических процессов производства (ВТПП) и реактивностью самого процесса в смысле управления его реализацией;
-	иерархическим характером уровней организации ВТПП и вероятностным характером управления каждым из этих уровней;
-	наличием оборудования, надежностные характеристики функционирования которого должны быть достаточно высокими и каждый компонент которого обладает некоторым граничным значением (порогом) наработки, когда превышение этого порога неминуемо приводит к отказу функционирования оборудования;
-	наличием резервного оборудования, которое включается при превышении наработки используемого процессом оборудования.
При высокой скорости протекания процесса проблему многомерности обычно преодолевают путем декомпозиции задачи управления с последующим решением отдельных подзадач теми или иными методами теории автоматического регулирования. При средних и низких скоростях протекания технологических процессов возможно применение для управления многомерных математических моделей. Однако с помощью известных аналитических методов, как показано в [1], не всегда удается получить желаемый результат.
На практике технологические процессы производства представляют собой множество взаимосвязанных микротехнологических операций {МТХОу}, где У, у = 1,п , характеристики выполнения которых являются вероятностными. Некоторые из связей между МТХОу также могут
быть случайными. По этой причине в качестве аппарата описания ВТПП в работе [2] было предложено использовать вероятностные сетевые графики (ВСГР) и сочетать их с имитационным моделированием и методиками Монте-Карло. В этих случаях ВСГР заменяется последовательностью {СГР:}, I = 1, N , обычных сетевых графиков с постоянными параметрами ЫТХОн , где N - количество реализаций ВСГР по методу Монте-Карло. Анализ технологических возможностей систем автоматизации, выполненный в [1], показал на наличие ряда трудностей построения имитационных моделей (ИМ) СГРг с помощью известных систем автоматизации имитационного моделирования (САИМ). Эти обстоятельства и отсутствие инструмента исследования ВСГР определили актуальность разработки системы автоматизации имитационного моделирования ВТПП.
2.	Особенности формализации вероятностных технологических процессов производства с помощью агрегатов
САИМ ВТПП реализует агрегатный способ имитации технологических процессов производства [3], что обеспечивает простоту перехода от ВСГР к структуре ИМ ВТПП . Достаточно заменить
МТХОу и SOBi, где г = 1,п , соответственно агрегатами-имитаторами этих компонентов ВСГР в его текущей реализации СГРг, чтобы получить ИМ I -й реализации ВСГР (ВСГР:). Замена ВСГР последовательностью {СГР1} удобна в том случае, когда эти два основных типа программных модулей-агрегатов (МТХОу и SOBi) являются реентерабельными.
Основными элементами ВСГР1 являются два типа составляющих его компонентов: микротехнологические операции МТХОу и события SOBi. Первый тип компонентов ВСГРг представлен агрегатом-четырехполюсником ЛМТХОу, на входы которого поступают два типа сигналов и с выходов которого формируются также два типа выходных сигналов. Второй тип компонентов ВСГР1 представляет собой агрегат-многополюсник Л8ОВг, который может иметь а1
входов и несколько видов выходов (к1 разветвлений первого типа, к2 кустовых выходов второго типа, к3 кустовых выходов третьего типа). Связь между агрегатами Л8ОВг, ЛМТХОу, Л8ОВ.
3	г	У	]
осуществляется с помощью сигналов, которые могут быть действительными (Sgd) или фиктивными (Sgf). Отличие сигналов друг от друга в агрегатной ИМ состоит в том, что Sgd инициируют выполнение агрегата ЛМТХОу, а Sgf обходят алгоритм выполнения агрегата, не
имитируя при этом выполнение агрегата ЛМТХОу. На выходах ЛSOBi первого типа формируются только действительные сигналы Sgd. На выходах ЛSOBi второго типа (число которых равно к2), являющихся «кустом» с разветвлением из S2 сигналов, только один из
сигналов с номером 5, 5 = 1, S2 , является действительным. На выходах третьего типа (число
которых равно к3 ), называемых резервными, сигналы формируются согласно матрице управления
\уш\, задаваемой до начала имитации технологом на случай отказа оборудования. Резервный
сигнал формируется в том случае, если на п -й вход агрегата ЛSOBj поступает сигнал Sgd с
агрегата ЛМТХО5 , во время выполнения которого была авария на закрепленном за ним на время
выполнения оборудовании. Предусматривая возможность возникновения аварийной ситуации, технолог производственной системы на основе задания значений матрицы управления обеспечивает включение резервных ЛМТХО5,, с помощью соответствующих сигналов Sgd. На
всех остальных разветвлениях выхода ЛSOBj третьего типа будут формироваться фиктивные
сигналы Sgf.
Следующей особенностью использования ВСГР для отображения ИМ ВТПП является возможность задания вероятностных параметров агрегата ЛМТХО5 с помощью соответствующих
функций распределения: времени выполнения ¥у(т) , размеров ресурсов г -го типа Р2П] (V) ,
стоимости (с) , количеств материалов и комплектующих г -го типа ¥Агу (шГ) и Р5гу (ко). Кроме
вероятностных параметров, для выполнения ЛМТХО5 задаются списки индивидуальных ресурсов
SP.INRii, индивидуального оборудования SP.OBORii и исполнителей SP.ISPii. Эти потребности
У	У	У
ЛМТХО5 закрепляются за агрегатом на время имитации его выполнения. Задаются также и характеристики надежности агрегатов-имитаторов оборудования ЛOBINr с помощью функций распределения длин интервалов: между отрезками безотказной работы г -го устройства Фу (тБО ) и отрезками восстановления его работоспособности Ф 2уг (тВО ).
В результате N реализаций ВСГР фиксируются следующие статистики функционирования компонентов СГРг:
-	для ЛSOBi формируются ранние tрil, поздние сроки 1Ы1 и резервы Ril свершения событий;
- для ЛМТХОу фиксируются фактические значения тщ1 времени их выполнения и стоимости выполнения Сщ .
Поскольку между AMTXO:, существует конкуренция за ресурсы, то выполняются
неравенства тщ1 > Tijl и ещ1 > cijl. Увеличение общей стоимости может происходить за счет
ликвидации возникающих аварий оборудования, используемого AMTXOH. Особенностью
формализации является то, что вычисление tpil осуществляется в режиме прямой имитации, а
определение tnil проводится в режиме инверсной имитации.
Полученные согласно процедуре Монте-Карло перечисленные статистики [4] по завершении l -ой реализации запоминаются в базе данных модели (БДМ). В момент перехода на
следующую (l +1 )-ю реализацию все рабочие массивы обнуляются, и далее весь процесс реализации ВСГР1+1 повторяется с фиксацией в БДМ статистик выполнения ASOBi и
AMTXOj в новой реализации ВСГР. По завершении N реализаций в БДМ будут накоплены выборки перечисленных статистик имитации объема N : {tpil} , {tnil} , {Ril}. По этим выборкам определяются математические ожидания и выборочные дисперсии статистик свершения событий, а также формируется граф реализации критических путей {GRKRP} .
3.	Состав и структура агрегатной системы автоматизации имитационного моделирования вероятностных технологических процессов производства
Исследование данной предметной области агрегатным способом имитации [2] автоматизируется с помощью САИМ , которая состоит из следующих компонентов:
-	библиотеки LIB.AGREG типовых имитационных моделей агрегатов AMTXOij и
У
ASOBt;
-	подсистемы PS.FORMGR формирования имитационных моделей агрегатов в имитационную модель ВСГРг;
- подсистемы PS.MONTEK реализации имитационных экспериментов (ИЭ) согласно процедуре Монте-Карло;
- подсистем PS.OBRAB обработки статистики ВСГР1 и PS.VIZUAL визуализации результатов имитации;
-	подсистемы PS.SPRESH анализа результатов и принятия решений;
-	управляющей программы UPMA моделирования агрегатов.
Рассмотрим назначение перечисленных компонентов САИМ. Библиотека LIB.AGREG содержит набор реентерабельных программ агрегатов-имитаторов AMTXOtj и ASOBi,
обслуживающих все элементы ВСГР1 при каждой реализации в обоих режимах (прямой и инверсной) имитации. За время постановки имитационного эксперимента для каждой l -ой реализации ВСГР эти агрегаты циклически переходят в различные состояния под управлением
управляющей программы UPMA. Программы AMTXOiJ и ASOBt библиотеки LIB.AGREG
используются в качестве «заготовок» для конструирования ИМ ВСГР . В этой библиотеке также хранятся программы еще двух типов агрегатов: имитаторов оборудования ВТПП r -го типа AOBORr и имитаторов процедур ликвидации аварий APROCk .
Подсистема PS.FORMGR организует ввод исходной информации, проверяет правильность описания состава сигналов и структуры ИМ ВСГР , сообщает разработчику ИМ о наличии ошибок коммутации в модели ВСГР, организует работу с базой данных модели, проводит верификацию функционирования вновь разработанных ИМ ВТПП. Подсистема PS.MONTEK содержит библиотеку процедур формирования случайных значений, программы реализации процедуры Монте-Карло и вычисления оценок математического ожидания и дисперсий откликов моделирования. Подсистема PS.OBRAB автоматизирует все операции обработки статистики моделирования ВТПП , являясь при этом адаптацией известного пакета STATISTIKA [5]. Подсистема PS.VIZUAL формирует временные диаграммы использования ресурсов и оборудования предприятия, а также графики расхода в модельном времени t0 финансов,
материалов и комплектующих изделий для l -х реализаций ВСГР. Управляющая программа моделирования UPMA организует переход агрегатов из состояния в состояние, обеспечивает сочетание способов прямого и инверсного изменения модельного времени t0 с реализацией
процедур Монте-Карло, а также контроль за моментом вычислений tpil и tnil агрегатов ASOBi.
Важной функцией UPMA является контроль передачи сигналов агрегатами с выхода ASOBi на
вход AMTXO,,, а затем с выхода AMTXOH на вход ASOB. в режиме прямой имитации, и
У	У	J
обратно, в режиме инверсной имитации.
Структура ВСГР формируется последовательностью взаимодействий разработчика с PS.FORMGR , в результате чего осуществляется формирование таблиц структуры AMTXOH и
ASOBi, таблиц коммутации агрегатов, таблиц состава и структуры оборудования, используемого
агрегатами AOBINr . При этом сама структура сигналов также формируется исследователем в
режиме диалога при описании ВСГР1. Окончание формирования базы данных модели означает
завершение «запитки» ИМ ВТПП реальной статистикой исследуемого ВТПП или же экспертными данными (на случай проектирования структуры ВТПП). Отметим, что при создании таблиц коммутации агрегатов проверяется соответствие входов и выходов у агрегатов ASOBi и
AMTXO „.
У
4.	Выводы
В работе предложена методика решения основных задач исследования ВТПП с помощью САИМ, которые имеют важное значение для практики организации вероятностных
технологических процессов производства. Наряду с возможностью решения задач проектного моделирования технологических процессов [6], в первую очередь, система автоматизации имитационного моделирования позволяет решать следующие задачи:
1.	Оценка величины пропускной способности вариантов организации ВТПП с учетом общей стоимости их реализации при имеющемся на предприятии составе ресурсов. Из-за вероятностного характера технологических характеристик производственных систем, значения времени реализации комплекса технологических операций можно оценить только на имитационной модели с высоким уровнем детализации процессов использования средств и ресурсов предприятия.
2.	Нахождение наиболее вероятного критического пути в технологии производственного цикла означает определение «узких мест» в технологическом процессе. Ввиду вероятностного характера взаимодействия микротехнологических операций поиск «узких мест» представляет собой итеративную процедуру, поскольку при каждой реализации ВТПП формируется свой критический путь. В связи с этим исследователю необходимо анализировать полученный граф критических путей. В основу итерационного процесса положена методика выбора наиболее вероятного критического пути и, таким образом, определения тех операций, от которых зависит реализация всего технологического процесса.
3.	Выбор из множества возможных рационального варианта состава ресурсов и оборудования ВТПП по критериям минимальной стоимости и его максимальной пропускной способности. Решение данной задачи также требует значительного числа имитационных экспериментов, поэтому использование САИМ позволит автоматизировать этот процесс, что в итоге дает возможность упростить и удешевить проектное моделирование ВТПП .
Таким образом, способ формализации ВТПП с помощью ВСГР и использование
системы автоматизации имитационного моделирования позволяют исследовать структуру производственной системы, выбрать рациональный вариант организации ВТПП и решать задачи проектного моделирования технологических процессов промышленных предприятий.
Простота описания имитационной модели и высокий уровень автоматизации исследований с помощью системы автоматизации имитационного моделирования обеспечивают перспективу ее дальнейшего использования.
СПИСОК ЛИТЕРАТУРЫ
1. Максимей И.В. Имитационное моделирование на ЭВМ. - М.: Радио и связь, 1988. - 222 с.
2.	Максимей И.В., Смородин В.С., Сукач Е.И. Методика исследования вероятностных технологических процессов производства с помощью агрегатного способа имитации // Управляющие системы и машины. -2006. - № 2. - С. 35-42.
3.	Максимей И.В., Смородин В.С., Сукач Е.И. Система автоматизации экспериментов, реализующая агрегатный способ имитации технологических процессов // Информатика. - 2005. - № 1. - С. 25-31.
4.	Смородин В.С. Организация контроля и сбора статистики имитационного моделирования технологических процессов опасного производства // Реєстрація, зберігання і обробка даних. - 2006. - Т. 8, № 2. - С. 38-52.
5.	Боровиков В.П. Искусство анализа данных на компьютере: для профессионалов. - 2-е изд. - СПб.: Питер, 2003. - 688 с.
6.	Смородин В.С. Методика контроля и принятия решений при имитационном моделировании технологических процессов опасного производства // Проблемы управления и информатики. - 2006. - № 5. - С. 79-91.


=====



﻿Технологии инженерного образования
УДК 328.16:681.3
ИНТЕРАКТИВНЫЕ КОМПЬЮТЕРНЫЕ ТРЕНАЖЕРЫ ПО ИНТЕГРАЛЬНОМУ ИСЧИСЛЕНИЮ И ДИФФЕРЕНЦИАЛЬНЫМ УРАВНЕНИЯМ
В.В. Клыков, А.А. Ельцов, К.Г. Шатлов
Томский государственный университет систем управления и радиоэлектроники E-mail: reddvl@mail.ru, yeltsovaleks@mail.ru, frodo@ms.tusur.ru
Рассматриваются интерактивные компьютерные тренажеры по интегральному исчислению и дифференциальным уравнениям. Показана математическая модель, структура и особенности представления, ввода и анализа математических данных.
Самостоятельная работа студентов любых форм обучения требует наличия средств облегчающих изучение материала. Одним из инструментов при организации самостоятельной работы являются электронный обучающий курс (ЭОК). Формой обучения, основанной на самостоятельной работе, является заочное образование, в том числе и дистанционное.
Дистанционное образование как общественный институт возникло давно и в настоящее время прочно вошло в жизнь как способ получения основного образования и переквалификации в западных странах. В России завершается этап становления дистанционного образования характеризующийся наличием большого числа организаций предлагающих получение образования с использование дистанционных технологий обучения. Так же просматривается тенденция внедрения дистанционных технологий в процесс очного обучения в качестве технического и методического обеспечения самостоятельной работы студента. Одним из ключевых инструментов дистанционных образовательных технологий является ЭОК или «электронный учебник».
Современный электронный обучающий курс это сложный многокомпонентный комплекс способный решать широкий круг задач. В состав ЭОК входят:
•	гипертекстовые лекционный курс и задачник с большим количеством решённых примеров (практикум);
•	блоки виртуальных лабораторных работ и стендов; тестирования и анализа выполнения контрольных работ; генерации заданий для курсового проектирования; обеспечения справочной информацией (в т.ч. глоссарий); презентаций докладов, видео фильмов, мультимедийных
вставок и пр. мультимедийной обучающей информации.
Так как ЭОК призван в максимально возможной степени заменить настоящего преподавателя, он должен обладать высокой степенью интерактивности. Обратная связь осуществляется посредством анализа действий студента в процессе работы с учебником и его компонентами и выражается в структурированной и дозированной подаче учебного материала, адаптивном тестировании и автоматизированном контроле успеваемости студента. Наибольшая доля интерактивности выпадает на «интерактивные компьютерные тренажеры» (ИКТ) -компоненту ЭОК, предназначенную для изучения и закрепления различных практических навыков (усвоение алгоритма, тренаж в решении задач и т.д.) Сложность представления практического материала кроется в том, что именно практические занятия характеризуются максимальным взаимодействием студента и преподавателя. Студент выполняет задания преподавателя не для оценки, а для того, чтобы научиться, «набить руку». Поэтому, со стороны преподавателя необходим постоянный контроль каждого этапа работы студента; более того контроль сопровождается подсказками, рекомендациями, поправками и исправлениями. Зачастую преподаватель демонстрирует решение сам.
Создание ИКТ сложный процесс, требующий высокой квалификации программистов и детально проработанных сценариев работы тренажеров, предоставляемых методистами. Практика показывает, что доля современных электронных учебников, в составе которых есть интерактивные компьютерные тренажеры, все еще очень мала [1]. Полноценные тренажеры должны сочетать в себе функции учителя, демонстратора и контролера и обеспечивать:
•	демонстрацию решения;
•	режим обучения (пошагового решения), в котором работа студента контролируется и направляется на каждом шаге решения; выводятся подсказки, и производится коррекция неверных шагов;
•	режим контроля, в котором тренажер не вмешивается в решение и констатирует только результат.
В круг задач, решаемых интерактивными компьютерными тренажерами, входят:
•	обучение решению хорошо формализованных задач, алгоритм решения которых содержит незначительное количество шагов (3-12);
•	подготовка банка задач, используя режим демонстрации решения с произвольно заданными исходными данными;
•	проведение компьютерных контрольных работ в режиме контроля с генерируемым заданием для каждой задачи [2, 3].
Принцип работы интерактивных компьютерных тренажеров прост: дублирование «бумажной» работы пользователя, сличение результатов на определенных методистом шагах («контрольных точках») и соответствующая выбранному режиму работы реакция (подсказка, исправление, оценка и т.д. и их сочетания). Математическая модель так же проста и легко укладывается в теорию детерминированных автоматов. Работа изучаемого математического алгоритма описывается с помощью следующего детерминированного автомата: М (А, В, Ф, у), где: А - входной алфавит, элементы которого определяют все возможные значения фазовой переменной алгоритма (фазовая переменная - совокупность данных однозначно определяющих со-
стояние работы алгоритма на его определенном шаге); 5 - алфавит состояний, определяет состояние алгоритма, соответствующее текущему шагу его выполнения; В - выходной алфавит, идентичный входному; Ф - выходная функция, определяет изменения фазового состояния алгоритма в соответствии с логикой его работы, задается таблично; у- переходная функция, определяет логику работы алгоритма, задается графом переходов.
Несмотря на относительную простоту модели структура тренажера довольно сложна (рис. 2). В структуру тренажера входят блоки:
•	считывания и интерпретации сценария. Отвечает за подготовку данных для работы тренажера, включая: выбор изучаемого материала, генерацию задания, задание режима контроля, установку опций протоколирования и т.д.
•	графического представления работы алгоритма. Отвечает за вывод формул, построение графиков, формирование таблиц и прочих вариантов наглядного представления работы алгоритма.
•	ввода данных. Обеспечивает ввод данных пользователем в заданной форме (формулы, таблицы, текстовый ввод, указание мышью и т.д.).
•	управления. Интерпретирует введенные пользователем данные согласно сценарию и установкам работы, обеспечивает обратную связь в виде заданной реакции (подсказка, исправление, вывод оценки и т.д.).
•	управления фазового состояния алгоритма. По команде из блока управления производит изменение фазового состояния алгоритма. Например, переход от одного шага к другому, коррекцию текущего состояния (введенные пользователем данные укладываются в заданную по-
Рис. 1. Формирование модели работы вычислительного алгоритма для тренажеров электронного учебника «Методы оптимизации». Описание фазовой переменной приведено для алгоритма вычисления корня функции методом дихотомии
Рис. 2. Структура интерактивного компьютерного тренажера
грешность, но для обеспечения устойчивой работы они корректируются до значений, вычисленным компьютером).
• контроля и протоколирования. По команде из блока управления производит сличение данных, введенных пользователем, с собственно вычисленными значениями, протоколирует шаг и извещает блок управления о результате. Согласно созданной математической модели были созданы комплексы ИКТ с одинаковой структурой для ряда электронных учебников: «Вычислительная математика», «Методы оптимизации», «Высшая математика 2. Интегральное исчисление и дифференциальные уравнения». Последний существенно отличается от предыдущих блоком графического представления работы алгоритма, расширенным вычислительным модулем и мощным блоком интерпретации сценариев, позволившем в девяти исполняемых модулях реализовать около 120 сложных тренажеров.
Особенностью и изюминкой ИКТ по интегральному исчислению и дифференциальным уравнениям является мощный инструментарий для символьного ввода ответов, в данном случае формул. Остановимся на этом подробнее.
Одним из ключевых факторов успешного использования компьютерных технологий в обучении является возможность представлять данные в их естественном виде для каждого рода деятельности. Так композитор, работающий на компьютере, предпочитает видеть ноты, а не символьную их запись или функцию частоты от времени; дизайнер работает с изображением, а не редактирует графи-
ческие файлы текстовым редактором (что, надо признать, принципиально возможно), инженер, работая с профессиональными пакетами прикладных программ, видит соответственно чертежи, формулы и т.д. Однако, в большинстве интерактивных обучающих программ по математическим дисциплинам, пользователь (отнюдь не программист!) зачастую вынужден вводить ответы в псеводокоди-рованном виде. Сравните две записи:
3
J (2x2 - sin3(ax))aX и
-3
DEFINT(-3,3,(2*xA2-pow(sin(alpha*x),3)))dx.
Первая введена с помощью формульного редактора MathType, знакомому каждому, кто хотя бы раз работал с программой MS Word для создания документов, содержащих формулы (например, писал отчет по лабораторной или контрольной работе). Экранная клавиатура с интуитивно понятными символьными обозначениями позволяет легко научиться и быстро вводить формулы любой сложности. Вторая запись - типичный пример ввода ответа в символьном виде. Комментарии по части наглядности и удобства ввода и чтения излишни.
Работа с данными в естественном формате применительно к ИКТ по высшей математике включает в себя несколько подзадач:
•	отображение формул;
•	генерация формул;
•	ввод формул;
•	анализ формул;
•	сравнение формул заданных в аналитическом виде.
Рис. 3. Компонента ввода ответа ИКТ по интегральному исчислению и дифференциальным уравнениям. Экранная клавиатура содержит только необходимые функциональные блоки, остальные скрыты
1 ЭНЙ1 ®ШИ1Ш1НК@10Н
AI
i
X -
ln(x)
4 х"
dx
Ввести ответ:
Вернуть шаблон:
= «
Для решения первых трех задач можно использовать разные подходы, в том числе и разработку собственных инструментальных средств. Целесообразным видится, однако, адаптация существующего ПО типа MathType или Equation Editor к нуждам ИКТ В результате анализа существующего программного обеспечения - формульных редакторов была выбрана программа Formulator украинской лаборатории Hermitech. Программа, аналогичная по функциям, интерфейсу и удобству работы MathType, выгодно отличается от аналогов текстовым форматом хранения данных (международный стандарт MathML и MathML 2.0) и наличием функций Automation, существенно облегчающим использование программы как OLE сервера. Компонентная лицензия Formulator 2.0 предусматривает установку For-mulator-а на компьютер вместе с учебником; так же в составе лицензионного пакета идет SDK (Software Developer's Kit) - инструментарий разработчика, позволяющий использовать функции Formulator-а через модель COM (Component Object Model), что повышает эффективность разработки в результате использования современных средств проектирования, поддерживающих эту модель.
Статические формулы хранятся не в картинках, а в текстовом «описательном» виде в формате MathML. Это позволяет, во-первых, легко отображать формулы, так как Formulator поддерживает два вида ввода формул, графический интерактивный используется для работы с пользователем, текстовый в формате MathML для нужд отображения и преобразования. Во-вторых, текстовая информация хорошо поддается сжатию, что позволило на порядок уменьшить размер базы данных сценариев тренажеров, в которой основное место занимали картинки - формулы.
Генерация формул, опять же, существенно упрощается благодаря текстовому формату хранения данных Formulator. Таким образом, генерация сводится к строковой подстановке определенных параметров в текстовый шаблон формулы. О гене-
рации заданий и тэговой разметке формул поговорим позднее.
Ввод формул. Благодаря наличию функций управления Automation, у разработчика есть возможность полного управления вводом. Контролю поддаются цвет фона, размер и тип шрифта, масштаб изображения, функции работы с буфером обмена и расширенные функции редактирования «отменить» и «повторить». Эмуляция активации любой панели экранной клавиатуры дает возможность создавать свою экранную клавиатуру (рис. 3), отличающуюся от стандартной не только дизайном, но и качественным составом.
Анализ введенных пользователем формул, опять же возможен благодаря текстовому формату хранения данных Formulator. MathML являясь подмножеством XML как международный стандарт имеет развитые средства преобразования и анализа (парсинга; от англ. parse - анализ, разбор).
Полученные в результате анализа данные поступают в вычислитель, где сравниваются с эталонными (вычисленными компьютером). Сравнение аналитически заданных формул очень непростая задача, которая надо признать решена как авторскими коллективами в нашей стране, так и за рубежом (например, известный пакет Mathematica). Однако сложность задачи такова, что ее решение в рамках разработки ИКТ экономически нецелесообразно. Поэтому используется численное сравнение, использованием бесконечности и неопределенности как допустимых вычислительных параметров. Для сравнения двух аналитически заданных формул они сначала разбиваются на структурные элементы (например, подынтегральное выражение и выражение под знаком дифференциала и т.д.) в зависимости от типа тренажера определяемого сценарием, затем для каждой из частей производиться вычисление ее значений на некоторой сетке. Значения попарно сравниваются, и принимается решение о правильности или неправильности введенных данных. Сравнение происходит по мо-
Рис. 4. Анализ введенных пользователем формул с помощью ЕогтиЬОг
дулю и с учетом заданной сценарием относительной погрешности (или абсолютной, если верное значение близко к нулю). Сравнение по модулю позволяет обрабатывать ситуации, в которых знак вынесен из одной проверяемой части формулы в другую. Если все вычисленные компоненты формулы по модулю совпадают с расчитанными компьютером, но различаются знаком, производится дополнительный простой анализ на знаки.
Включение в парсер блока предварительной обработки формул позволяет реализовать такие возможности «умного» анализа, как распознавание пропущенного знака умножения между константами и переменной, скобками и в других случаях; возведение в степень тригонометрических функций (в которых, степень указывается чаще всего после имени функции) и прочих условностей математической нотации.
Теперь поговорим о сценариях тренажеров. Это тот краеугольный камень, на котором зиждется автоматизация создания тренажеров и их функционирование [5, 6]. Сценарий содержит все необходимые данные и метаданные для работы тренажера, определяет его тип, выводимые и вводимые данные, шаблоны ответов и генерируемых формул, параметры генерации и, конечно же, сам вычислительный или другой алгоритм согласно которому компьютер будет вычислять эталонные значения ответов пользователя для каждого шага работы. Сценарии ИКТ по интегральному исчислению и дифференциальным уравнениям реализованы в виде базы данных и распределены в четыре таблицы: типы тренажеров, алгоритмы тренажеров, типы генерируемых параметров для каждого тренажера, области допустимых значений для параметров. Интерес представляет последняя таблица, в которой задается область допустимых значений для каждого параметра каждого тренажера. Так же в таблице заданы недопустимые и «специальные» значения (задание, сгенерированное при помощи которых, представляет какой-либо интерес с точки зрения методиста).
Генерация задания производится следующим образом. В соответствии с типом тренажера из базы данных берется шаблон формулы, в котором присутствуют нумерованные тэги - участки, которые должны быть заменены соответствующими параметрами. Значения параметров вычисляются случайным образом двумя способами: учитывая область допустимых значений и недопустимые параметры, или используя специальные значения. Каждый сгенерированный параметр подставляется во все места формулы, соответствующие его номеру, а так же запоминается тренажером для дальнейших вычислений. Такой подход к генерации позволяет бесконечное количество непротиворечивых заданий, и определенное число «интересных», с использованием специальных значений.
Использование сценариев позволило реализовать около 120 тренажеров, использую всего 9 исполняемых модулей, являющихся по существу проигрывателями сценариев. В будущем возможно создание единого модуля-плеера для всех типов сценариев. Так же, как показала практика, создание сценариев тренажеров является основной и самой трудоемкой задачей для методиста после предоставления лекционного материала.
Заканчивая обзор особенностей ИКТ по интегральному исчислению и дифференциальным уравнениям, надо отметить наличие блока протоколирования, которые, автоматически регистрируя все действия пользователя и настройки программы (режим тренажера, задание и его параметры и т.д.), сохраняет данные в зашифрованном виде. Наличие программы, совмещающей функции декодера и просмотра текстовых документов, позволяет использовать ИКТ для тестирования и проведения удаленных контрольных работ.
В заключение приведем краткую характеристику ИКТ по интегральному исчислению и дифференциальным уравнениям для электронного учебника «Высшая математика 2. Интегральное исчислению и дифференциальные уравнения», разра-
ботанному в лаборатории «Мультимедиа» Томского межвузовского центра дистанционного образования в 2005 г. по бумажным аналогам [7-9].
В состав комплекса интерактивных компьютерных тренажеров входят девять исполнительных модулей, реализующих тренажеры по следующим темам:
Тема	Кол-во тренажеров	Пример задания
Неопределенный интеграл. Подведение под знак дифференциала	39	J (a + bxn) pxn-ldx
Неопределенный интеграл. Простейшие преобразования подынтегрального выражения	14	С {mx + n)dx
J ф2 — (ax + b)2
Неопределенный интеграл. Интегрирование по частям	16	J (ax + b)tg2(ax)dx
Несобственные интегралы первого рода. Сходимость по определению	6	f dx
^ x — 2ax + a2 + b2 a
Несобственные интегралы второго рода. Сходимость по определению	9	a Г dx J xpln4 x
Формула Ньютона-Лейбница и интегрирование по частям в определенном интеграле	14	b J {cx + d )eaxdx a
Неопределенный интеграл. Тригонометрические подстановки	4	r cos3(ax) , 1-2!-dx J sin (ax)
Однородные линейные дифференциальные уравнения с постоянными коэффициентами. Однородные линейные системы дифференциальных уравнений	11	У — (Г + r) y' + +ГГ2 У = 0
Интегрирование рациональных дробей	6	j (ax + b) ^ J (x — xXx — x2)
Всего:	119
Все тренажеры обладают унифицированной структурой и мощным инструментарием символьного ввода формул. Реализованы два режима работы: контроль и обучение. Режимы различаются реакцией на неверный ввод данных пользователем. В режиме «обучение» в таком случае выводится сообщение о неправильности ответа, выводится варрант правильной записи ответа в виде формулы,
разрешается перейти на следующий шаг даже при неправильно решенном предыдущем. В режиме «контроль» выводится сообщение об ошибке, пользователь остается на том же шаге решения до ввода правильных значений.
СПИСОК ЛИТЕРАТУРЫ
1.	Мицель А.А., Клыков В.В. Проблемы и перспективы информационного обеспечения инженерного открытого образования // Открытое образование. - 2004. - № 1. - С. 56-61.
2.	Ельцов А.А., Ельцова Г.А., Магазинников Л.И., Магазиннико-ва А.Л. Итоги эксперимента «Компьютерные контрольные работы» // Современное образование: ресурсы и технологии инновационного развития: Матер. Всеросс. научно-метод. конф.
-	Россия, Томск, 27-28 января 2005 г. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2005. - С. 212-213.
3.	Кручинин В.В., Магазинников Л.И., Морозова Ю.В. Пакет генераторов самостоятельных работ по курсу «Высшая математика» // Современное образование: ресурсы и технологии инновационного развития: Матер. Всеросс. научно-метод. конф.
-	Россия, Томск, 27-28 января 2005 г. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2005. - С. 128-129.
4.	Официальный сайт лаборатории Hermitech: http://www.hemi-tech.ic.zt.ua/
5.	Клыков В.В. Система автоматизированной разработки интерактивных компьютерных тренажеров на базе XML // Дистанционные образовательные технологии. Вып. 1. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2004. -С. 110-127.
6.	Мицель А.А., Клыков В.В. Интерактивные компьютерные тренажеры по математическим дисциплинам // Открытое образование. - 2005. - № 2. - С. 22-28.
7.	Ельцов А.А., Клыков В.В., Шатлов К.Г., Романенко А.В. Математические тренажеры // Современное образование: ресурсы и технологии инновационного развития: Матер. Всеросс. науч-но-метод. конф. - Россия, Томск, 27-28 января 2005 г. -Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2005. - С. 120-122.
8.	Ельцов А.А. Высшая математика II. Интегральное исчисление. Дифференциальные уравнения. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2002. - 232 с.
9.	Ельцов А.А., Ельцова Т.А. Высшая математика II. Практикум по интегральному исчислению и дифференциальным уравнениям. - Томск: Изд-во Томск. гос. ун-та систем упр. и радиоэлектроники, 2005. - 204 с.

=====



﻿УДК 681.3.06
В.В. Кручинин, А.А. Шелупанов
Подходы к созданию защищенного архива на основе разделения секрета
Рассматриваются подходы к созданию защищенных баз данных, основанные на разделении реляционных таблиц на две части: кодирования отношений и множеств доменов,
заданных деревьями И/ИЛИ. Приводится обобщенная структура системы, основанная на таком подходе. Даются приблизительные оценки размеров доменов.
Введение
Принцип разделения секрета предполагает разделение информации на части между участниками таким образом, что только данная группа участников может восстановить секрет, но ни одна другая группа не может восстановить этот секрет [1]. Применительно к реляционным базам данных предлагается разделить таблицы отношений на две части: таблицу кодов и множество доменов. Таблица кодов содержит коды кортежей, полученных из номеров значений атрибутов, хранящихся в доменах. Рассмотрим эту идею более подробно. Каждому кортежу декартового произведения множеств степенью п можно поставить в соответствие число и вместо кортежа в базе данных хранить это число. Для этого зададим отображение
F : А1 х А2 х... х Ап ® Nn , где А1 х А2 х... х Ап —декартово произведение множеств; Nn —множество номеров 0,п .
Если F биективно, то можно задать обратное отображение F 1 : Nn ® А1 х А2 х... х Ап .
Таким образом, биективное отображение F задает алгоритм идентификации кортежа декартового произведения:
пит = Яапк(Д а) ,
где а е А1 х А2 х... х Ап , пит е Nn , D — описание множеств декартового произведения
A[ х A2 х... х An . Отображение F
где a е A\ х A2 х... х An , num е Nn
-1
задает алгоритм генерации значения кортежа по номеру
а = Generate(D, пит) , D — описание множеств. Тогда отношение Я с А1 х А2 х... х Ап
можно однозначно представить подмножеством целых чисел num с Nn .
Используя алгоритмы Rank и Generate, можно предложить следующую структуру базы данных (рис. 1). При записи кортежа в базу данных работает алгоритм Rank, который присваивает номер данному кортежу. Далее этот номер хранится в базе данных. При выборке данных из базы работает алгоритм Generate, который по заданному номеру получает кортеж. Важным элементом является описание множеств декартового произведения D. Рассмотрим подробнее способы организации D, Rank, Generate.
Рис. 1. Описание структуры базы данных
1. Механизм реализации
Рассмотрим способ построения описаний множеств значений доменов D, алгоритмов идентификации Rank и генерации Generate. В качестве такого инструмента предлагается использовать деревья И-ИЛИ [2]. Правила построения дерева И-ИЛИ следующие:
1.	Если некоторое множество разбивается на n множеств {Aj }П=1, то это разбиение можно представить ИЛИ-узлом. При этом должно быть выполнено следующее условие:
Aj n Aj = 0, i * j .	(1)
2.	Если искомое множество является комбинацией элементов из n множеств, то данное преобразование представляется И-узлом. В этом случае условие (1) не требуется, необходимо, чтобы комбинация была уникальной.
Листьями такого дерева являются элементы или множества, разбиение которых не производится. Используя два этих правила, можно строить деревья И-ИЛИ для описания различных классов множеств.
Вариантом дерева И/ИЛИ назовем дерево, которое получается из заданного путем отсечения дуг, кроме одной, у всех ИЛИ-узлов. Корнем варианта будет являться корень дерева И-ИЛИ. На рис. 2 показан пример дерева И-ИЛИ и всех его вариантов.
Рис. 2. Дерево И-ИЛИ и все его варианты
Если дерево описывает некоторое множество, то вариант описывает один элемент множества. Общее число вариантов в дереве (или мощность множества) можно вычислить по формуле:
п
^ ю^) для ИЛИ-узла, г=1 п
ю(г) = "¡Пю^) дляИ-узла,	(2)
г=1 1,
где г — рассматриваемый узел дерева; { sZ } — множество сыновей узла z; n — число сыновей.
Тогда, зная rn(z) для каждого узла, можно предложить следующий алгоритм генерации варианта (Generated:
push
1.	Корень дерева записывается в вариант и заносится в стек Stack — < sroot, L >.
pull
2.	Из стека вынимается пара < z,lz > — Stack . Если стек пуст, то завершить работу.
3.	Определяется тип текущего узла. Если это И-узел, то переход на шаг 4, иначе переход на шаг
5.
4.	Все сыновья {sZрассматриваемого узла z записываются в данный вариант V, вычисляется
Ia(si) , используя выражение
A(sZ) _
.1(Z) mod w(sz) i > 1,
П w(sZ ) j _1
Ia(z)mod m(sZ) i _ 1,
(3)
и пары < sz) > заносятся в стек.
5. Если это ИЛИ-узел, то используя выражение
lO(si) _
lo (z)
при O(z) < ю^), k _ 1,
min[lO(z) - У w(sz)] при lO(sk) > 0, k > 1,
b ^^ j k k j _1
(4)
определяется единственный сын sк и 10 (sk). Сын записывается в вариант V, а пара < sк , 10 ^)>
заносится в стек.
6. Переход на шаг 3.
Анализ данного алгоритма показывает, что временная сложность пропорциональна количеству узлов, которые заносятся в стек, следовательно, пропорциональна числу узлов в варианте. При этом количество делений равно числу сыновей всех И-узлов варианта плюс число сложений и сравнений для ИЛИ-узлов [см. выражения (3) и (4)].
Построим алгоритм нумерации варианта для данного дерева И-ИЛИ. Для этого необходимо найти сопоставление варианта V в дереве D и нахождение соответствующего номера i. Сопоставление производится следующим образом:
Первоначально в стек M1 заносится корень варианта V, в стек M2 — корень дерева D.
Если стек M1 пуст, то завершить работу алгоритма.
Из стека M1 извлекается узел варианта dv, а из стека M2 извлекается узел d.
Если это узлы И, то все сыновья dv заносятся в стек M1 , а сыновья d заносятся в M2 . Переход на шаг 2.
Если это узлы ИЛИ, то сын dv ищется в множестве сыновей узла d. Если найдено совпадение, то сыновья заносятся в стек. Переход на шаг 2.
Если dv и d листья, то они удаляются из стека.
Вычисление номера начинаем производить с рассмотрения листьев варианта V. Все листья варианта имеют значения w(z) _ 1.
После того как сопоставление найдено, выполняем следующие действия:
1.	Для каждого И-узла z вычисляем
lz _ l1 + w(s1)(l2 + rn(s2)(...(ln)rn(sn-1))...)),
где {s. }n_1 — сыновья узла z, а {l. }П_1 — соответствующие номера, полученные для сыновей.
k-1
2.	Для каждого ИЛИ-узла вычисляем lz _ У w(i) +11 , где k — номер соответствия для узла
i _1
ИЛИ в дереве D, l1 — номер варианта для этого сына. Рекурсивно производим вычисления номера, пока не достигнем корня дерева. Полученное число lz для корня варианта будет номером варианта, т.е. V = R( lz). Очевидно, что lz < w(z) . Таким образом, для множества, представленного деревом И-ИЛИ, можно создать алгоритмы Rank и Generate.
2. Преобразование таблицы атрибутов в дерево И-ИЛИ
Рассмотрим построение дерева И-ИЛИ для таблицы атрибутов. Поскольку значение a е A1 х A2 х... х An является комбинацией элементов из множеств {а.}П_1 , то корень дерева будет И-узлом, имеющим n сыновей, каждый i-й сын соответствует множеству а. , графическое изображение такого соответствия показано на рис. 3.
Рис. 3. Соответствие между таблицей и деревом И-ИЛИ
Общее число множества значений вычисляется по формуле
п
ю(Т) = ПЮА).
I=1
Далее для каждого множества А( строится свое дерево И-ИЛИ. В общем случае можно выделить следующие типы:
1.	Множество значений А( представлено справочником.
2.	Множество значений А{ представлено числовым интервалом.
3.	Множество значений А{ представлено деревом И-ИЛИ.
Для представления множества уникальных объектов, которые используются в базе данных некоторого домена, используется справочник. Справочник имеет две части, первая часть содержит пронумерованные уникальные объекты, вторая часть резервная, предназначена для внесения новых объектов. Соответствие между справочником и деревом И-ИЛИ показано на рис.4. Справочник представляется ИЛИ-узлом, а все сыновья являются элементами справочника. Тогда общее число вариантов дерева (или элементов множества) равно
ю(А,-) = п + т .
Рис. 4. Соответствие между справочником и деревом И-ИЛИ
Для представления числового интервала задаются границы и шаг, тогда данное множество можно представить деревом И-ИЛИ, которое имеет ИЛИ-узел в качестве корня, а сыновья — конкретные значения чисел из этого интервала. Графическое изображение такого дерева показано на рис. 5.
Рис. 5. Дерево для представления числа
Тогда общее число вариантов (элементов множества) будет
Ь _ а
w(Aj) =
А
Множество значений А^ может быть представлено деревом И-ИЛИ. Рассмотрим несколько наиболее распространенных примеров. Если А — это дата, то ее можно представить деревом И-ИЛИ (рис. 6)
Рис. 6. Дерево И-ИЛИ для представления даты
Здесь при описании даты год представлен некоторым числовым интервалом. Например, 1950— 2050, Д=1. Тогда общее число вариантов может быть представлено формулой
ю(Дата) = ю(день) ■ ю(месяц) ■ ю(год) .
Аналогично может быть представлен атрибут «время».
3. Пример организации защищенного архива
Рассмотрим применение данного подхода для организации архива удостоверяющего центра с историями сертификатов открытого ключа [3]. Структура такого архива определяется атрибутами полей stdat стандарта сертификата x.509. Перечислим их: C (страна), L (размещение), ST (штат или провинция), O (организация), OU (подразделение), CN (фамилия, имя, отчество), STREET (адрес), E (электронный адрес).
На основе данного стандарта каждый удостоверяющий центр формирует свои собственные атрибуты полей. Например, в поле CN могут быть занесены паспортные данные, номер свидетельства ИНН, номер пенсионного свидетельства и т.д. Для разделения архива на две части необходимо стандартные атрибуты представить в виде дерева И/ИЛИ (рис. 7).
Далее рассматриваем структуру каждого атрибута. Если это атрибут C (страна), то соответствующий домен можно представить простым справочником. Если это атрибут CN, то для него можно задать некоторую структуру. Например, CN = {фамилия, имя, отчество, номер свидетельства ИНН}.
Рис. 7. Дерево И-ИЛИ для атрибутов сертификата
Рассмотрим подробнее домены для построения CN. Уже имеются достаточно большие справочники по именам и фамилиям в Интернете. Так, например, одна из самых объемных баз имен СССР насчитывает около 8000, база фамилий — около 170000 [4]. Очевидно, что число отчеств не будет превышать числа имен. Это говорит, что размеры доменов не такие большие. Предположим, что мощность доменов будет прирастать 5% в год, тогда для доменов имен, отчеств и фамилий необходимо зарезервировать 8000, 8000, 170000 записей дополнительно. Тогда общее число кортежей будет:
ю(ФИО) _ ю(имя) • ю(отчество) • ю(фамилия) _ 16000 х 16000 х 340000 _ 8704 • 1010 .
Аналогичная ситуация будет для адресов: город, улица, номер дома, почтовый индекс.
Мощности доменов будут измеряться 104 -106 . Тогда размеры кортежей возрастут:
n
w(root) _ У Wk ,
k _1
где n — общее число доменов; Wk — мощность k-го домена. Предположим, что n = 15.
С учетов вышеизложенного
w(root) » 10100.
Тогда для представления кода кортежа полученного алгоритмом Rank, необходимо 100 байт при байтовом представлении десятичных цифр, 50 байт при двоично-десятичной системе кодирования, или 333-битовое число.
8
Таким образом, если база данных насчитывает 10 кортежей, то объем ее не будет превышать 1010 байт.
4. Обобщенная структура архива
Обобщенная структура архива показана на рис. 8.
Основные модули и подсистемы:
1)	подсистема ввода сертификата — обеспечивает ввод полей сертификата;
2)	подсистема поиска — обеспечивает контекстный поиск в архиве;
3)	подсистема управления доменами — обеспечивает поиск, занесение заданных значений полей;
4)	модуль Rank — обеспечивает формирование номера (кода) для данного сертификата;
5)	модуль Generate — обеспечивает получение номеру (коду) в базе данных формирование соответствующего кортежа сертификата;
6)	Idxk — индексный файл для организации поиска;
7)	Base — база данных, хранящая коды кортежей;
8)	D(K) — домен, хранящий значения атрибута K (C,L,ST,O,OU,CN);
9)	Si — кортеж сертификата;
10)	пыж. - код сертификата.
Рассмотрим работу системы по обобщенной схеме, представленной на рис. 8. Внесение сертификата в архив производится следующим образом: значения полей сертификата заполняются в системе ввода. Далее вызывается модуль Rank, который в соответствии с алгоритмом нумерации варианта, строит вариант, находит значения соответствующих полей в доменах. Если значение в домене найдено, то соответствующий номер возвращается в Rank, если нет, то данное значение заносится в домен и его номер возвращается в Rank. Из полученных номеров полей сертификата формируется код сертификата. Если такого кода не существует, то код записывается в базу данных Base и в соответствии с ключами производятся записи в индексные файлы.
Подсистема поиска организована следующим образом. Из множества атрибутов сертификата выделяются подмножества, по которым формируются индексные файлы, в которых, в частности, хранятся ссылки на коды сертификатов в базе Base. При необходимости просмотреть значения полей сертификата передается код сертификата numi в модуль Generate, который производит получение сертификата на основе алгоритма генерации варианта в дереве И-ИЛИ.
Рис.8. Структура архива
Подсистема управления доменами обеспечивает управление доменами, представленными в виде справочников. Например: справочник имен, справочник фамилий, справочник организаций, справочник городов, справочник названий улиц. Поскольку для формирования кода сертификата необходимо знать фиксированный размер справочника, то размер следует установить в соответствии с выражением
<Размер справочника>=<текущий размер>+&* <число новых за год>, где k — количество лет, на которые рассчитан срок активной работы архива.
Подсистема управления доменами может быть распределенна и реализована на федеральном уровне. За каждый домен может отвечать отдельная организация, которая обеспечивает эффективное управление данным доменом.
Основные выводы
Такой подход к созданию архивов обеспечивает:
1.	Создание условий повышения уровня защищенности, поскольку информация сертификата разделена на части, каждая из которых не дает возможность получить доступ к сертификату.
2.	Экономический эффект, поскольку размер базы данных уменьшается за счет того, что основная информация хранится в доменах.
Литература
1.	Блейкли Г.Р., Кабатянский Г.А. Обобщенные идеальные схемы, разделяющие секрет, и матроиды // Проблемы передачи информации. 1997. — Т. 33, вып. 3. — С. 102—110.
2.	Кручинин В.В. Методы построения алгоритмов генерации и нумерации комбинаторных объектов на основе деревьев И/ИЛИ. - Томск: «В-Спектр», 2007. - 200 с.
3.	Шелупанов А.А. и др. Основы информационной безопасности. — М.: Горячая линия — Телеком, 2006. — 544
с.
4.	http://familii.jino-net.ru/
Кручинин Владимир Викторович
К.т.н, зав. лабораторией инструментальных систем моделирования и обучения, ТУСУР
Тел.: 45 10 00
Эл. почта: kru@tcde.ru
Шелупанов Александр Александрович Д.т.н., проф., зав. каф. КИБЭВС, ТУСУР Тел.: 41 34 26
V.V. Kruchinin, A.A. Shelupanov
Approaches to designing protected archives based on secret division
Approaches to creation of the protected databases, based on division of relational tables into two parts are considered: coding of relations and domains set by OR/AND trees. The generalized structure of system based on such approach is resulted. Rough estimates of the sizes of domains are given.

=====



﻿УДК 681.3
МАТРИЧНА РЕЗОЛЮЦ1Я ДЛЯ КЛАУЗАЛЬНО1 ЛОГ1КИ
С.Ф. Теленик, професор, д.т.н., О.А. Амонс, асистент,
Р.В. См1чик, В.С. Хмелюк, асп1ранти, НТУУ “Kill"
Анотаця. Розглядаеться проблема пгдвищення ефективностг процедур виведення для лог1к, як застосовуються в адаптивних технологгях. Здшснена спроба ттегру-вати аналогт, ун1фжацт i класифжацт з резолюцгею для каузальноi форми лог1ки на основi матричного представлення клауз i правила резолюцИ Запропонована мат-рична стратегiя резолютивного виведення для каузально'1' форми логiки. Знайдено i обтрунтовано ознаку суперечливостi множини клауз у матричтй формi.
Ключовi слова: адаптивна технологiя, логжи вищих порядюв, каузальна форма логi-ки, резолютивний метод виведення, мультиклауза, матричний метод.
Вступ
На зламi тисячолпъ у галузi шформатизацп була сформована концепция адаптивного щдприемства [1]. Окремими компонентами адаптивного шдпри-емства виступають адаптивний захист, адаптивш шформацшш технологи тощо [2]. У пращ [3] авторами запропонована адаптивна технологи ство-рення шформацшно-управляючих систем для класу оргашзацшно-техтчних об,ектiв управлiння.
Аналiз публiкацiй та постановка задачi
В адаптивних технолопях важливою складовою е саме лопки вищих порядков, яш дозволяють ди-намiчно породжувати новi класи об,ектiв, надаю-чи !м потрiбних властивостей i поведiнки [3]. В цих умовах традицшш методи виведення втрача-ють сво! переваги i вимагають певно! модифшацп до нових умов. В той же час деяш методи, напри-клад аналогiя, запропонована в працi [4], природ-ним чином можуть бути шкорпороваш в цi лоп-ки. Крiм того, визначення динaмiчно! системи клаав, рiзноманiтних вiдношень м1ж ними при-родним чином вводять основу для необхщних структуризаци i систематизаций. Унiфiкацiя i кла-сифiкацiя теж природно зливаються, збiльшуючи прозорiсть виводiв.
Виходячи з переваг каузально! форми лопки, на-ведених в пращ [5], надалi будемо застосовувати вщповвдщ конструкцп i термiнологiю. В багатьох випадках застосування лопчно! моделi важливо не тiльки для встановлення виводимосп цшьово! клаузи, але й ощнки кiлькостi рiзних шляхiв виведення. Така ситуа^ виникае, наприклад, при плануванш дiй, коли одержаний вивщ перетво-рюеться в план дш, кожна з яких може вимагати рiзнi ресурси, накладати певнi обмеження тощо.
Для спрощення i впорядкування подальшого ви-кладення матерiалу нагадаемо традицiйнi поняття каузально! форми лопки i методу аналогiй, вико-ристовуючи працi [4-5]. Визначимо мультиклаузу (да-клаузу) як мультимножину лiтералiв i будемо записувати в да-клaузi лiтерал Ь стшьки разiв, скь льки разiв вiн повторюеться. Звичайну клаузу будемо вважати да-клаузою, повторюванiсть кожно! лiтери в якiй дорiвнюе одинищ
Нехай А1 е С1, А2 е С2, а а1 i а2 - тaкi тдстанов-ки, що для деяко! лiтери Ь, розташовано! право-руч вiд символу ^ в А1 i лiворуч вiд символу ^ в А2, А1а1 = {Ь}, А2а2 = {Ь}, причому, якщо |А,| >1, , = 1,2, то ввдповщна пiдстaновкa а1 е найзагаль-шшим унiфiкaтором лiтер iз А,-. Тодi клауза, отри-мана iз об’еднання клауз С1а1 i С2а2 вилученням Ь праворуч i лiворуч ввд символу ^, називаеться да-резольвентою да-клауз С1 i С2.
Визначимо т-резолютивний вивiд Тда як пару, де перший компонент - множина вершин виводу, другий компонент - множина тршок вершин. Будемо використовувати пару функцiй-селекторiв: ^ - N (Тда) i ^ - М (Тда) - для видшення першого та
другого компоненпв Тда вiдповiдно. Кожна вершина т-резолютивного виводу мае позначку i значення глибини в виводi таким чином, що якщо п е ^ - N (Тда), то ^ - Ь (п) - позначка вершини п i
^ - Б (п) - значення и глибини в виводу Якщо ( п1; п2, п3) е ^ - М (Тда), то ^ - Ь (п3) е да-ре-зольвентою « - Ь (п1) i« - Ь (п2). Кожна трiйкa
такого вигляду називаеться да-резолюцiею. Будемо називати да-резолютивний вивщ Тда виводом iз Б, якщо позначки вершин Тда, якi не вiдповiдaють да-резольвентам, належать множинi да-клауз Б. С виводиться iз Б, якщо Тда е виводом iз Б i С е по-значкою одше! iз вершин Тт.
В пращ [3] комбшуванням упорядковано! лшш-но! резолюци i методу аналогш розроблено ефек-тивну процедуру виведення. В цш статтi викори-стовуеться матричний метод виведення, а метод аналогш застосовуеться для прив’язки матричного методу до лопк першого порядку.
У цiлому це спроба iнтегрувати зазначенi вище концепци на основi матричних форм у резолюти-вний метод виведення для каузально! форми лоп-ки. Наслвдком тако! iнтеграцi! повинна стати мат-рична стратепя резолютивного виведення для каузально! форми лопки.
Матричний метод для числення висловлювань
1дея матричного методу полягае у використаннi матричного представлення вихщних даних i реалiзацi! резолютивного методу у вигляд операцi! множення матриць. Розглянемо декшька приклад1в.
Приклад 1. Нехай маемо клаузу А ^ i необхiдно обгрунтувати, що А е лопчним наслiдком цiе! клаузи. Тодi добавляемо клаузу ^ А i намагаемо-ся вивести порожню клаузу. Зрозумшо, що це можна зробити за допомогою одного застосуван-ня правила резолюци, резольвентою яко! i буде порожня клауза. Цей же результат можна отрима-ти за допомогою множення матрищ, яка мае сто-впець i рядок для кожного лггерала, а елемент на перетиш рядка i та стовпця ] буде мати ненульове значення лише тод^ коли знайдеться клауза, у бе-зумовнiй частинi яко! знаходиться лггерал рядка i, а умовна частина мютить лiтерал стовпця / Для нашого прикладу маемо:
◊ A	◊	A
M = ◊	0	1,	M2	= ◊	1	0.
A	10	A	0	1
Видаеться, що можливою ознакою суперечливос-тi у матричному варiантi е наявнiсть ненульово! головно! дiагоналi у матрицi Мр, де p = 2.
Приклад 2. Нехай маемо множину клауз: A ^ В; B ^ C; C ^ i необхвдно обгрунтувати, що А е !х логiчним наслiдком. Тодi додаемо клаузу ^ А i намагаемося вивести порожню клаузу. Зрозумшо, що це можна зробити за допомогою трьох засто-сувань правила резолюци, останньою резольвентою яких i буде порожня клауза. Множення матриць тдтверджуе цей результат наявнютю ненульово! головно! дiагоналi у матрищ Мр, де p = 4:
◊	A	B	C		◊	A	B	C
◊	0	1	0	0	◊	1	0	0	0
A	0	0	1	0,	M4 = A	0	1	0	0
B	0	0	0	1	B	0	0	1	0
C	1	0	0	0	C	0	0	0	1
◊	л	в	с		◊	л	в	с
◊	0	0	0	1	◊	0	0	1	0
N	1	0	0	0,	N	0	0	0	1
B	0	1	0	0	в	1	0	0	0
C	0	0	1	0	с	0	1	0	0
Приклад 3. Нехай маемо множину клауз: A ^ B, C; B ^; C ^; D ^ i необхiдно обгрунтувати, що А е !х лопчним наслщком. Додавши клаузу ^ А, можемо вивести порожню клаузу за допомогою трьох застосувань правила резолюци. Зрозумшо, що клауза D ^ у виведенш не застосовуеться. Тодi ми можемо з матрицi вилучити вiдповiднi рядок та стовпець. Тепер отримаемо тдтвер-дження запропоновано! вище ознаки суперечли-востi для множення матриць. Отже, маемо
◊	л	в	с	D
◊	л	в	с
◊	0	0	1	1	1
◊	0	0	1	1
л	1	0	0	0	0
м =					II	1	0	0	0
в	0	1	0	0	0
в	0	1	0	0
с	0	1	0	0	0
с	0	1	0	0
D	0	0	0	0	0
◊	л	в	с		◊	л	в	с
◊	0	2	0	0	◊	2	0	0	0
л N	0	0	1	1,	л N Г<1	0	2	0	0
в	1	0	0	0	в	0	0	1	1
с	1	0	0	0	с	0	0	1	1
Випадок з викреслюванням рядкiв i стовпцiв мо-жна узагальнити.
Правило А. Якщо в матрищ е нульовий рядок, то вилучаемо його з матрицi разом з ввдповшним стовпцем.
Приклад 4. Нехай маемо множину клауз: A ^ B, C, D; A ^ B, C; B ^; C ^ i необхiдно обгрунтувати, що А е !х логiчним наслвдком. Додавши у ^ А, можемо вивести порожню клаузу за допомогою трьох крошв резолюци. Зрозумшо, що A ^ B, C, D у виведеннi не застосовуеться. Тодi ми можемо !! вилучити i тiльки пiсля цього буду-вати матрицю. Вилучення приводить до матрищ, розглянутш в попередньому приклад^ тобто ознака пiдтверджуеться. Випадок з викреслюванням рядшв i стовпщв можна узагальнити.
Правило В. Якщо в матрищ е порожш стовпщ, то вилучаемо вiдповiднi клаузи i пiсля цього засто-совуемо правило А .
Тепер опишемо власне процедуру Matrix-deduc-tion виведення матричного методу.
Крок 1. Будуемо матрицю M для вихшно! множи-ни клауз.
Крок 2. Застосовуемо правило Л до матрищ М. Крок 3. Застосовуемо правило В до матрищ М. Крок 4. За необхщносп повертаемося на крок 2, шакше р = 1 i переходимо на крок 5.
Крок 5. Отримуемо матрицю Мр. Якщо викону-еться ознака суперечливосп або супротивного випадку, то шнець, iнакше р = р + 1 i переходимо на крок 5.
Перейдемо до обгрунтування методу для числен-ня висловлювань. Оскшьки ознака виводимостi -наявнiсть певно! структури С на головнiй дГаго-налi - сформульована, залишаеться довести пра-вомiрнiсть Г! застосування.
Теорема 1. Множина клауз Б суперечлива тодi i тiльки тодi, коли застосування процедури МаМх-deduction приводить до побудови матрищ Мр з ненульовою головною дiагоналлю.
Доведения. Пряма теорема. Нехай застосуванням процедури Matrix-deduction встановлено юнуван-ня такого натурального р, що матриця Mp мае ненульову головну дiагональ. Доведемо, що мно-жина клауз суперечлива.
По-перше, доведемо, що правило Л залишае су-перечливу множину клауз суперечливою. Дшсно, якщо множина клауз суперечлива, то Гснуе посль довнiсть резолюцiй, останньою резольвентою яко! е порожня клауза. З визначення правила ре-золюцп негайним наслгдком е те, що в зазначенш послiдовностi не може приймати участь клауза, в яку входить вилучений за допомогою правила л лггерал, адже вщповвдний лiтерал не зустрГчаеть-ся в правих частинах клауз. Тодi застосування правила л не може привести до зникнення зазна-чено! послiдовностi, тобто множина клауз зали-шаеться суперечливою.
По-друге, доведемо, що правило в залишае супе-речливу множину клауз суперечливою. Дшсно, якщо множина клауз суперечлива, то Гснуе посль довшсть резолюцш, останньою резольвентою яко! е порожня клауза. З визначення правила ре-золюцп негайним наслгдком е те, що в зазначенш послщовносп не може приймати участь вилучена за допомогою правила В клауза, адже ввдповщний лггерал не зустрiчаеться в лiвих частинах клауз. Тодi застосування правила В не може привести до зникнення зазначено! послщовносп, тобто мно-жина клауз залишаеться суперечливою.
Нехай застосування правил л , в не привело до встановлення несперечливостi множини клауз Г побудовою матриць Mp встановлено Гснування такого натурального р, що матриця Mp мае ненульову головну дГагональ. Доведемо, що мно-жина клауз суперечлива.
Будемо використовувати iндyкцiю за максимальною резолютивною вщстанню (максимальною довжиною вщ лiтерaлa у прaвiй частиш клаузи до порожнього лiтерaлa у лiвiй чaстинi клаузи через резолютивш переxоди). Тодi базис iндyкцiï пов’язаний з aнaлiзом мaтрицi з прикладу l. Очевидно, що в цьому випадку множина клауз суперечлива. 1ндуктивне припущення: теорема виконуеться для довшьно!' системи клауз з максимальною резолютивною вщстанню n. Залишаеться довести, що теорема виконуеться для довь льно1' системи клауз з максимальною резолютивною вГдстанню n + l. Дiйсно, вiдомa теорема про ввдповщшсть циклiв i ненyльовиx елементiв головно!’ дiaгонaлi мaтрицi сyмiжностi графа на основi iндyктивного припущення говорить про заповнення всix дiaгонaльниx елементiв для всi шляxiв довжини n. Тодi ще одне множення матриць приводить до заповнення всix rnmnx дГаго-нaльниx елеменпв.
Обернена теорема. Неxaй множина клауз суперечлива. Доведемо, що застосування процедури Matrix-deduction приводить до побудови тако].' матрищ Mp, що ïï головна дiaгонaль ненульова. Застосування правил A, B не змшить сyперечливiсть множини клауз. За умови суперечливосп множини клауз юнуе така послiдовнiсть застосувань правила резолюцш, що остання резольвента е по-рожньою клаузою. Тодi за побудовою матриця M1 мютить шляxи довжини l вГд лiтерaлa в рядку до лггерала в стовпцi. Тодi iз визначення множення матриць M2 мiстить шляxи довжини 2 вщ лiтерaлa в рядку до лггерала в стовпцi. В загаль-ному випадку Mp метить шляxи довжини p вщ лiтерaлa в рядку до лггерала в стовпщ
Якщо вс застосування правил A, B ввдакають ль терали, яш не приймають участь у резолюцiяx, тодГ залишаються лише лггерали, яш безпосере-дньо приймають участь у резолюцiяx. ТодГ ва дь агональш елементи повинш врештьрешт стати ненульовими, а ri, як1 вже стали ненульовими, не перетворяться у нульовг Теорема доведена.
Матричний метод для теорш I порядку
Спочатку розглянемо приклад.
Приклад З. Неxaй маемо множину клауз лопки першого порядку A(x) ^ B(x), C(x); B(x) ^; C(x) ^ i необxiдно обгрунтувати, що A(x) е ïx лопч-ним наслГдком. ТодГ добавляемо клаузу ^ A(x) i намагаемося вивести порожню клаузу.
Очевидно, що ця множина клауз тсля вилучення термГв перетворюеться на множину клауз чис-лення висловлювань, причому ушфжацГя тут не потрГбна. Легко зрозумии, що матричний метод для числення висловлювань дозволить встанови-ти суперечливють цieï множини клауз за зазначе-ною ознакою. Ця множина суперечлива, осшльки легко вивести порожню клаузу. I для наведент
прикладГв можна побудувати аналопчш приклади Гз предикатних ллер Г одтею змшною, скажГмо х, Г отримати результати Гз використанням матричного методу щодо суперечливосл вщповгдних множин клауз.
Тепер розглянемо приклади Гз використанням констант Г функцюнальних символГв, коли засто-сування резолюцш вимагае попередньо! утфша-цГ!.
Приклад 6. Нехай маемо множину клауз лопки першого порядку Л (а) ^ В(а), с(Ь); В(х) ^; с(у) ^ Г необхщно обгрунтувати, що Л (а) е !х лопч-ним наслгдком. ТодГ добавляемо клаузу ^ Л(а) Г намагаемося вивести порожню клаузу.
Ця множина клауз суперечлива, оск1льки легко можна навести послгдовшсть застосувань правил резолюцп та утфГкаци, яка приведе до порожньо! клаузи. Але застосування матричного методу у запропонованому вище виглядГ неможливе у зв’язку з необхгдшстю ушфшацд. В той же час попередня утфжащя перед кожною резолющею позбавляе матричний метод його переваг, насам-перед простоти й ефективностт
Тому потрГбт шшГ засоби реалГзаци утфшаци. Досить ефективним видаеться використання методу аналогш для побудови матрищ утфшованих клауз. Якщо ознака суперечливосл мае мГсце, ми зможемо узгодити терми в процес перевГрки суперечливосл вихгдно! множини клауз.
Застосуемо варГант аналоги, побудований на роз-бит множини об’еклв на типи - абстракщю ти-шзацп [3]. Вводиться вщображення / Гз множини да-клауз в множину тдмножин да-клауз, таке що:
1) якщо да-клауза с3 е да-резольвентою да-клауз с1 й с2 Г Б3 е / (с3), то юнують Ц е / (с1) й
Б2 е / (с2) так1, що застосування подстановки деяко! да-резольвенти D1 й D2 належить D3;
2)	/(0) = {0}; 3) якщо застосування деяко! подстановки да-клаузи с1 належить да-клаузГ с2, то для будь-яко! абстракцп D2 для с2 юнуе абстракция D1 для с1 така, що застосування тдстановки D1 належить D2. Називають таке вгдображення /-да-(абстрактним) вщображенням, а будь-яке D Гз
/ (с) - да-абстракщею. ПГд вгдображенням титзаци розумшть деяке вщображення ф Гз лггералГв в лггерали, яке вгдображуе кожну атомарну формулу в формулу, терми яко! мають тип, найближ-чий за ГерархГею до базових титв. Вщображення титзаци ф е да-вгдображенням.
ТодГ маемо ту ж матрицю, що Г в прикладГ 3. У зв’язку з тим, що ознака суперечливосл викону-еться для абстрактно! множини клауз, ми повинт перейти до перевГрки суперечливосл вих1дно! множини клауз. Для цього необхгдно швидко ви-дшити необхгдну послгдовтсть резолюцш, вико-
ристовуючи побудоват матрицi. Вдаючись знову до прикладiв, ми бачимо, що корисну шформащю може надати аналiз структури отриманих матриць Bcix ступетв.
Теорема 2. Нехай юнуе послiдовнiсть застосувань правил резолюци i унiфiкацiï до вихщно! множини клауз, останньою резольвентою яко! е порожня клауза. Тодi застосування процедури Matrix-deduction до матрищ, побудовано! для ушфшова-них за допомогою вiдношення титзаци клауз, приводить до одержання матрищ Mp з ненульо-вою головною дiагоналлю.
Доведения. Виходячи з повноти резолютивного методу, можемо говорити про суперечливкть вихгдно! множини клауз. Покажемо, що суперечлива множина модифшованих за допомогою вщношення ти-п1зацй' клауз. Дшсно, унiфiкацiя вихвдних клауз буде врахована тишзащею, адже кожна змiнна чи константа будуть замiненi сво!м типом i утфшащя збе-режеться. Дал1 скористаемося доведеною вище обе-рненою теоремою 1. Теорема доведена.
Цей результат дозволяе застосовувати матричний метод для суперечливих множин, але у випадку несуперечливих множин виникають вiдомi про-блеми зупинки механiзму виведення. Дшсно, мо-жливi випадки встановлення ознаки суперечливо-стi за допомогою матрично! процедури для матрищ, побудовано! для утфшованих за допомогою вщношення титзаци клауз, але вих1дна множина клауз несуперечлива.
Висновки
Запропоновано нову стратегш резолютивного виведення для клаузальних логiк на основi засто-сування матричних форм зображення системи клауз. Для врахування особливостей логiк першого порядку запропонована комбiнацiя матричного методу з ввдомим методом аналогiй. Подальший розвиток дослвджень пов’язаний з розробкою методик вщтворення виводiв за послiдовнiстю ре-зультатiв множення матриць.
Лiтература
1.	O’Brien J.A. Management information systems:
managing information technology in the networked enterprise. - London: Irwin, 1996. -623 p.
2.	Волков Д. Адаптивная безопасность // Откры-
тые системы. - 2004. - № 10. - С. 5-16.
3.	Павлов А. А., Теленик С.Ф. Адаптивные техно-
логии и алгоритмизация в системах управления. - К.: Техника, 2003. - 340 с.
4.	Plaisted D.A. Theorem proving with abstraction//
Artificial Intelligence. - 1981. - Vol.16. -PP. 47-108.
5.	Ковальски P. Логика в решении проблем. - М.:
Наука, 1990. - 280 с.
Рецензент:	О.П. Алекаев, професор, д.т.н.,
ХНАДУ.
Стаття надшшла до редакцп 16 травня 200З р.

=====



﻿УДК 681.584.64
РОЗРАХУНОК ЗГИНАЛБНО1 СИЛИ Б1МЕТАЛЕВО1 ПЛАСТИНИ СТАРТЕРА ТЛ1ЮЧОГО РОЗРЯДУ
В.Т. Ак1мов, доцент, к.т.н., У1ПА, Л.В. Муха, асшрант, ХНАМГ
Анотаця. Представлена методика розрахунку сили вигинання б1металево1 пластинки електрода, що спричиняе перемщення и у напрямку нерухомого електрода стартера тлтчого розряду. Проведено у в1дпов1дност1 до вибраног схеми розрахунок перемщення бгметалевого електрода.
Ключовi слова: газорозрядт лампи, пускорегулюючий апарат, стартер, бгметалева пластинка.
Вступ
Мета 1 постановка задач1
У сучасному свт розвиток свилотехшки харак-теризуеться тим, що лампи розжарювання посту-пово вилсняються бшьш ефективними джерела-ми свила, якими е газорозрядш лампи (ГРЛ) [1]. Широке розповсюдження як джерела свила ма-ють люмiнесцентнi лампи (ЛЛ) низького тиску. Г азорозряднi лампи як високого тиску, так i низь-кого тиску в електричну мережу вмикаються тiльки за допомогою спещального пристрою, що називаеться пускорегулюючим апаратом (ПРА). Вiд ПРА у великш мiрi залежить надiйнiсть запа-лення i термiн служби ламп.
Найбшьше застосування у схемах запалення ЛЛ знайшли стартернi схеми зi стартерами тлшчого розряду (СТР), оскiльки вони дешевi порiвняно з iншими схемами запалювання, мають невелик! розмiри i просту конструкцiю. Поряд iз сво!ми позитивними якостями СТР мають i iстотнi недо-лiки, одним з яких е !х низька ефектившсть.
Анал1з публ1кац1й
Питання надiйного запалення ЛЛ в залежносп ввд схем включення дослiджувалися в роботах бага-тьох авторiв, наприклад [2-4], але надiйнiсть ро-боти стартерiв залежить не тшьки вiд схем включення, а й ввд процеав, що проходять у стартернiй ламт. У [5-7] приведено дослiдження фiзичних процесiв, що протiкають в стартер^ але визначення сили, яка викликае згинання рухомого електрода (бiметалева пластинка) при на^ванш не наводиться. Але визначення величини згина-льно! сили бiметалевого контакту стартера, як теоретично, так i практично дозволяе розробити бшьш ефективну конструкцш СТР [8-10].
Мета дано! статп - визначити згинальну силу, що спричиняе перемщення бiметалевоl пластини у бiк нерухомого електрода СТР.
Розрахунок згинальноТ сили при перемщенш рухомого електрода СТР
Для визначення згинально! сили рухомого електрода розглянемо модельну задачу, в якш б1металева пластина мае вигляд зинуто! скоби; сила, що вини-кае в результатi на^вання, замiнюеться зовтш-ньою механiчною силою (рис.1 а, б). Процес перемщення вшьного краю бiметалевоl пластинки досить складний, бо перемщення зазнають три точки В, С i Д. С, Д у двох напрямках: горизонтальному i вертикальному, точка В - у горизонтальному.
Рис. 1. Схема заданого (а) i допомiжного (б) ста-нiв системи
Визначення АДр
Визначимо горизонтальне перемiщення перерiзу Д у горизонтальному напрямку, Адр . Визначен-
п-п
У
г
ь
ня реакцш опори А вщ заданого (рис. 1, а) i оди-ничного (рис. 1, б) навантажень за допомогою рiвнянь рiвноваги статики
I
X = 0: Р - НА = 0; НА = Р,
¥ - На = 0;	НА = ¥ = 1,
(1)
(2)
I шА = 0; Р(1 -1,)-Ма = 0; ЫА = Р(1 -1,), (3) ¥ (1 - 1!)-Ма = 0; Ма = ¥ (1 - 1! ) = 1(1 - 1), (4)
де Р , ¥ - задана i одинична сили; 11,1 -довжини дшянок АВ i СД, м. Опорш реакцii НА , НА , МА, МА - опорш моменти у точщ А ввд заданого i одиничного навантажень.
Вирази для М(2') вiд навантаження Р на дшян-ках системи (рис. 1, а)
0 < 21 < 1:	М(21) = -Р21;	(5)
0 < 22 < 11:	М(22) = На22 + Ма = р(22 +1 -11);	(6)
0 <ф<п :	М(ср) = -Р(1 + Я8шф), ds = Яdф, (7)
де 21; 22 - поточнi значення координати на кож-нiй iз дiлянок, Я - радiус кривизни бiметалевоi' пластинки, м.
Вирази для М(2,.) вщ навантаження ¥ = 1 на дшянках системи (рис.1, б)
0 < 21 < 1:	М (21 )=-¥21 =-121;	(8)
0 < 2 2 < 1:	М (р) = На22 + МА = 1(2 +1 -11) ;(9)
0 <р<п : М(ф) = -1(1 + Яр); ds = Яdф . (10)
Зпдно Мора [11] визначимо горизонтальне пере-мiщення перерiзу Д з урахуванням вираз1в (1)-(10):
1 1	-
АДор = ТТТ1М (21 )М (21 )d2l +
У 0
+~ЕТ~ П М (Ф)М (ф)Яd ф+—1М (22 )М (22 )d22 =
Е^ у 0	Е У 0
1
~ЕГ,
+и - "
Р	3 3	+ А
-121+1112
де А = Р
пЯ12 + 2Я 1 +-
пЯ
. Тобто
дг;р =
р
~ЁТ„
1 1
121 -112 +—+-13 +пЯ12 +
1	1	3	3	1
+2Я21 + —
(11)
де Е - модуль повздовжньоi пружностi, тобто модуль Юнга, кГ/м2; 3У - момент шерци вiдносно
...	4
нейтральноi оа, м .
Зпдно з [12] момент шерци ввдносно нейтрально! оа у (рис. 1, б) визначаеться за формулою
= к • Ь у = 12"
де к - висота бiметалевоi пластинки, м; Ь - ширина термобiметалу, м.
Модуль пружностi [13, 14] бiметалево! пластинки марки ТБ 1523 можна розрахувати, використавши формулу
Е =
4Е1Е2
(+4Е2)
де модуль пружносп активного шару Е1 = 175 ГПа i пасивного шару Е2 = 150 ГПа.
З рiвняння (11) виразимо Р, при пiдстановцi чис-лових значень, отримаемо згинальну силу бiмета-лево! пластинки у горизонтальному напрямку, яка дорiвнюе Р = 4,99 (Н). Конструктивш розмiри були взятi з конструкторсько! документацii Пол-тавського заводу газорозрядних ламп.
Визначення ДДер
Для визначення вертикального перемщення пе-рерiзу Д прикладемо у допомiжному станi (рис. 2) системи у напрямку шуканого перемщення без-розмiрну одиничну силу ¥1 = 1.
Визначимо реакцп опори А ввд одинично! сили ¥1 (рис. 2)
dф
Рис. 2. Реакцп опори А вiд одинично! сили ¥1 = 1, що прикладена до перерiза Д
I г = 0; ¥1 - Ка = 0; Ка = ¥1 = 1,	(12)
I шА = 0; Ё1х 2Я -МА = 0; МА = 1х 2Я . (13)
Вирази для М(2,) ввд навантаження ¥1 = 1 на дшянках системи.
Пром1жки:
0 < 21 < 0: М(21 )=0,	(14)
0 < 22 < 11: М(22)= М = 1х2Я ,	(15)
0<ф<п : М(ф) = -1Я(1 -008ф), ds = Яdф . (16)
Зпдно з формулою Мора i з урахуванням виразiв (2), (3) i (12-16) вираз для вертикального перемь щення перерiза Д матиме такий вигляд:
Д7 = т^- 1М (21 )М (21 )й?21 + ^7"1М (ф)М (ф)Яd ф+
Еиу
EJУ 0
+ ЕТ ^М (22 ^М (22 )Й?22 = 0 + ЕТ ^ [_Р (1 + Я Я1П ф)^;
[-1Я (1 - 008 ф) Яd ф+-----------1Р (2 +1 -11 )2Яd22 =
Е1,
1— [ РЯ (2111 -12)+В
EJ
де В = Р
4 V
Я4 +лЯ31 - —
. Тобто
ДДер =
Р
Шу
(
2Я111 - Я11 + Я4 +лЯ31 - — 1	1	4
(17)
Таким чином дiаграма перемiщень перерiзу Д мае вигляд (рис. 3).
Д
Д
ДДр
Рис. 3. Схема напрямку перемщення бiметалево! пластинки
Модуль перемщення
Дд =^(7 ) +(д 7 )2 ■	(18)
де Дд - повне перемiщення перерiзу Д.
Подставивши числовi значення у вираз (18), знай-демо повне перемiщення бiметалево! пластинки
ДД = 1 •Ю-3 м.
Кут нахилу ДД до горизонту
ДДр ДДор
(19)
Провiвши вiдповiднi розрахунки за формулою
(19), знайдемо а = 5°.
Визначення ДСор
Для визначення ДС°р прикладемо у перерiзi С (рис. 4) у напрямку шуканого перемщення силу ¥2 = 1 i визначимо реакци опори А вщ цiеi сили
IX = 0; На -¥2 = 0; На = ¥2 = 1,	(20)
I шА = 0; МА - ¥211 = 0; МА = ¥211 = 1х 11 .(21) dф
¥2 = 1
Рис. 4. Схема розподшу сил бiметалево! пластини пвд впливом одинично! сили у перерiзi С
Вирази для М (2,) на дшянках системи ввд сили ¥2 = 1. Для пром1жку 0 < 21 < 1 значення моменту мае такий вираз:
М =( 21 ) = 0,	(22)
а для пром1жку 0 < 22 < 11
М(хг )=-На22 + МА = -1^2 +111 = 1( - 22 ). (23)
Вираз згинального моменту для пром1жку
0	< ф<п прийме такий вигляд
М (ф) = 1Я 8Ш ф .
(24)
Згвдно з формулою Мора i з урахуванням виразiв
(20)-(24) знайдемо перемiщення перерiзу С
4
ДС0Р = ЕГ1М (21 )М (21 )й?21 + ЕГ1М (ф)М (ф)Яd ф+
^У0	Еу0
+ ЕЕЕ 1М (г2 )М (22 )^2 = ЕЕ 1[-Р I1 + Я Я1П ф)^Х
Еу 0	Еу 0
1 11
х[Я 81п ф]Яd ф+-----------1[ Р (22 + 1 - 11 )^^[1(11 - 22 )] d22 ■
EJУ 0
Юу
р 11121 -13-1+С
де С = - Р
. Тобто
ДСор =
Р
(25)
Подставивши числовi значения, отримаемо Дгсор =-0,014 х10-3 (м).
Примшка. Якщо в результатi обчислення отри-мано при ДСор знак (-), то напрямок перемiщення перерiзу С зворотний напрямку ди сили ¥2 = 1; у протилежному випадку - ствпадае з напрямком дii сили ¥2 = 1.
Вертикальне перемщення перерiзу ДСер можна обчислити за формулою
ДСер =
Р
~ЁТ„
2Я111 - Я12 + Я4 + лЯ31 - —
(26)
Оск1льки отримане рiвняння (26) таке ж, як i (17), то з цього слвдуе ДСер = ДДер.
Визначення ДВор
Для визначення ДВ°р прикладемо у перерiзi В (рис. 5) у напрямку шуканого перемiщення силу ¥3 = 1.
Я
dф
Рис. 5. Схема розподшу сил бiметалевоi пластини тд впливом одинично! сили, яка прикладена до перерiзу В
Визначимо реакцп опори А ввд сили ¥3 = 1:
IX = 0; На-¥ = 0; На = ¥3 = 1,	(27)
I	шА = 0 ; МА - ¥311 = 0 ; МА = ¥311 = 111. (28)
На дiлянках ВС i СД згинальний момент ввд сили ¥3 = 1 М (2,.) = 0, тому формула Мора для визначення ДгВор з урахуванням формул (27), (28) при-йме вигляд
1 11	—
ДгВ0Р = — 1 М (22 )М (22 )d22
Е^у 0
(29)
тут М(22) = р(22 +1 -11), виходячи з (рис. 1. а),
22 (22 ) = МА - НА22
раз (29) прийме такий вигляд:
М (22 ) = МА - На22 = 1(11 - 22 ), таким чином ви-
1	11
ДВ0Р = ЕТ 1 [Р (22 + 1 - 11 ) [1(1 - 22 ) dz2 =
Р
Шу
EJ
(112 -11 ^ 2	3
(30)
Пвдставимо числовi значення у формулу (30), одержимо ДгВор = 0,034 х10-3 (м).
Примшка: Знак (+) у перемщенш ДВ°Р сввдчить про те, що перерiз В змiщуеться у напрямку ди сили ¥3 = 1.
Л
А
В
Д
к-Д7
С
\Д
вер
Д
Дор
^ Д
Рис. 6. Схема можливого перемщення бОметале-во! пластини пвд впливом прикладених сил
На рис. 6 наведена можлива схема деформацп бОметалево! пластинки.
Висновок
В робот теоретично визначено величину згина-льно! сили, а також знайдено величини перемь щень; наведена можлива схема деформацп бОме-талево! пластинки.
3
Теоретичне визначення величини згинально! сили бiметалевого контакту стартера дозволяе розро-бити бшьш ефективну конструкцiю стартера. КрГм того, проведений розрахунок дае повну картину перемiщення термобiметалу под впливом згинально! сили i дозволяе застосовувати його при подальших фГзичних дослщженнях стартера тлгючого розряду.
Лггература
1.	Айзенберг Ю.Б., Рожкова Н.В., Федюкина Г.В.
Оценка перспективных возможностей энергосбережения в светотехнических установках // Светотехника. - 2001. - №3. - С. 9-13.
2.	Штурм К.Г. Пускорегулирующая аппаратура и
схемы включения люминесцентных ламп / Пер. с нем. А.М. Троицкого - М.: Изд-во иностр. лит-ры, 1961. - 376 с.
3.	Намитоков К.К., Прянчиков Е.Н. О новых раз-
работках стартеров для люминесцентных ламп // Светотехника. - 1984. - №6. -С. 9-11.
4.	Хердль Й. Электронные пускорегулирующие
аппараты фирмы Osram // Светотехника. -2003. - №4. - С. 43-46.
5.	Рохлин Г.Н. Разрядные источники света.- М.:
Энергоатомиздат, 1991. - 432 с.
6.	Уэймаус Д. Газоразрядные лампы. - М.: Энер-
гия, 1977. - 69-70 с.
7.	Фугенфиров М.И. Электрические схемы с газо-
разрядными лампами. - М.: Энергия, 1974. -328 с.
8. Пат. 60150 А. Укра!на. Стартер тлшчого роз-
ряду. Намггоков К.К., Муха Л.В. Опуб. 15.09.2003.
9.	Пат. 60198 А. Укра!на. Стартер для запалюван-
ня люмшесцентних ламп. Намггоков К.К., Муха Л. В. Опуб. 15.09.2003.
10. Пат. 67092 А. Укра!на. Стартер для запалю-
вання розрядних ламп. Намггоков К.К., Муха Л.В. Опуб. 15.06.2004.
11.	Смирнов В.А., Иванов С.А., Тихонов М.А.
Строительная механика. - М.: Стройиздат, 1984. - 61 с.
12.	Беляев Н.М. Сопротивление материалов. - М.:
Наука, 1976. - 607 с.
13.	Кашпар Ф. Термобиметаллы в электротехни-
ке. - Л.: Госэнергоиздат, 1961.- 447 с.
14.	Справочник по электротехническим материа-
лам. Под редакцией Корицкого Ю.В., Паси-нкова В.В., Тареева Б.М. - Л.: Энергоатоми-здат, 1988. - 290 с.
Рецензент:	О.В. Бажинов, професор, д.т.н.,
ХНАДУ.
Стаття надшшла до редакци 11 ачня 2005 р.

=====



﻿УДК 681.3.01(07)
КОМП'ЮТЕРНА СИСТЕМА ОБЧИСЛЕННЯ РЕЙТИНГУ
Л.М. Симб1рська, доцент, к.т.н., А.1. Левтеров, доцент, к.т.н., В.1. Нжтн, доцент, к.т.н., ХНАДУ
Анотаця. Описано систему обчислення рейтингу д1ялъност1 кафедр ХНАДУ, створену в середовищах MS Access та MS Excel. Показано, що вона складаетъся i3 бази даних за показниками д1ялъност1 викладач1в кафедр та електронних таблицъ обчислення рейтингу.
Ключов1 слова: тформащя, рейтинг, електронна таблиця, база даних.
Вступ
Пщвищення ефективност управлшня вищим навчальним закладом е одним з головних зав-дань, як стоять перед його керiвництвом. Постшне збшьшення обсяпв та штенсивност потокiв шформаци вимагае використання найновггтших iнформацiйних засобiв i технологiй для пiдвищення оперативностi, адекватносп приймання та опрацювання шформаци.
На тепершнш час використовуванi автоматизованi системи управлшня дiяльнiстю вищих навчальних закладiв (ВНЗ) мають деякi недолiки, як знижують результативнiсть !х функцiонування:
1)	програмш комплекси не iнтегрованi в едину систему;
2)	застарш програмш середовища;
3)	неефективнi структури баз даних, у яких данi i кодифiкатори не вiдображають реального стану описуваних об'ектiв;
4)	збереженi даш рiзних пiдсистем не погодженi мiж собою;
5)	точнiсть, актуальнiсть i своечаснiсть даних незадовiльнi через неузгоджешсть процедур збирання i введення у рiзних програмах.
Огляд iснуючих методик рейтингу
Виршенню проблеми оцiнки та аналiзу дiяльностi професорсько-викладацького складу ВНЗ придшено значну увагу [1] як в Украш, так i за кордоном. У Нащональному аграрному ушверситет Украши для методики рейтингу особливою увагою
користуеться	визначення	вагових
коефiцiентiв (балiв), яю найбiльш повно характеризують навчальний, науковий та виховний процеси, зв^и викладачiв на засiданнях кафедр та пiдсумковi протоколи цих засiдань; разом вони сприяють прозоростi, об'ективностi i виключенню непорозумiнь. У БелДУ переможець за результатами рейтингу науково! та науково-методично!	роботи	викладачiв
нагороджуеться званням «Кращий учений року БелДУ»; кафедр^ що перемогла, надаеться звання «Краща кафедра з науково! роботи». У БелДУ вважають, що науковий рейтинг викладача е показником його саморозвитку та шдсумком його пращ. У Томському полтехшчному унiверситетi числовi значення показникiв нормуються за максимальним значенням одного iз них. Це забезпечуе сумюшсть критерпв при !х суттевому розкидi серед окремих об'ектiв.
У той же час головним недолгом майже усiх вiдомих методик е те, що через прагнення до об'ективносп та максимального врахування рiзноманiтних факторiв створюються громiздкi та незручш методики, якi перевантаженi великою кшьюстю анкет, форм, рейтинг-листiв, формул та супроводжуючо! документации
Мета i постановка задачi
Метою обчислення рейтингу кафедр ХНАДУ е стимулювання шдвищення квалiфiкацil та професiоналiзму викладачiв, продуктивност !х педагогiчноl та науково! роботи.
Пщвищення загального рiвня шформацшно-обчислювальних ресуршв, розвиток програмних i апаратних 3aTO6iB, застосування технологiй Intranet та ктент-сервер, широке впровадження мереж надали умови для створення у ХНАДУ штегровано! автоматизовано! шформацшно1 системи (1С) за вимогами належних безпеки, надiйностi, достовipностi та опеpативностi для реатазацл завдань управлшня yнiвеpситетом.
Концепцiя побудови системи передбачае можливiсть yпpавлiння такими складовими дiяльностi yнiвеpситетy:
1)	навчальним процесом;
2)	iнфоpмацiею про стyдентiв i спiвpобiтникiв;
3)	фiнансово-господаpською iнфоpмацiею;
4)	внутршшм докyментообiгом;
5)	пiдтpимкою ухвалення yпpавлiнських piшень.
Комп'ютерна реалiзацiя рейтингу
При проектуванш iнфоpмацiйних систем рейтингу (1СР) проведений аналiз можливих шляхiв !х розвитку у ХНАДУ показав, що найпpийнятнiшим ваpiантом е пбридний, який полягае у впpовадженнi авторських проекпв та окремих юнуючих пакеив програм для оргашзацп та реатзацл !х спшьно1 роботи.
Напpацьованi i дослiдженi принципи розвитку 1СР на piвнi yнiвеpситетy дозволяють рекомендувати:
1)	проектувати i вводити у дда новi бази даних та шформацшш пiдсистеми за принципами единого шформацшного середовища;
2)	використовувати центpалiзованi бази даних;
3)	розвивати техшчш ресурси серверного вузла адмшютративно1 мереж1, який забезпечуе ефективне збер^ання шформаци та функщонування уиа системи.
Значну роль у дiездатностi ВНЗ вiдiгpають пpофесiйний piвень знань i наукова компетентнiсть його професорсько-викладацького складу (ПВС). Для pеалiзацil рейтингово1 системи у ХНАДУ на базi пакету програм MS Office [2, 3] створено i впроваджено комп'ютерну 1СР оцiнки ефективносп дiяльностi ПВС. Бази даних дiяльностi ПВС та звiтнi протоколи сумарних показникiв кожно1 кафедри pозташованi на Поpталi yнiвеpситетy.
Необхiднiсть реестрацп викладачами ушх видiв виконано1 роботи протягом року сприяла створенню pеляцiйних баз даних за трьома напрямками дiяльностi ПВС: навчально-методичним, науковим та оpганiзацiйно-навчальним i виховним.
Для пояснень розглядаеться база даних (рис. 1) навчально-методично1 роботи (БДМ). За перелшом показникiв ще1 роботи створеш таблицi (рис. 2), структура яких визначаеться полями (стовпцями), що мютять yd необхiднi данi для об'ективно1 оцiнки дiяльностi ПВС. Iнфоpмацiя у виглядi записiв (pядкiв таблиць) вводиться за допомогою форм (рис. 3), яю сприяють збереженню таблиць вщ пошкоджень. Для швидкого доступу у форми спроектовано кнопкову форму (рис. 4). 1з метою точного функщонування реляцшно1 БДМ спроектовано схему даних (рис. 5), яка вщображае стpyктypнi та лопчш зв'язки таблиць БДМ.
Кpiм зазначених вище об'екпв, БДМ, що розглядаеться, мiстить ще запити та звiти, яю сприяють пошуку за певними умовами шформаци, ll вiдобpаженню у структурованих таблицях та друкуванню у фоpмалiзованомy виглядi. Аналiз складу та змiстy навчально-методично1 роботи ПВС дозволив визначити перелш первинних даних - показникiв, що були зведеш до загально1 таблищ (фрагмент яко! вiдобpажено на рис. 6), сформовано1 у сеpедовищi MS Excel [3].
Додавання кшькосп одиниць певного показника кожного викладача кафедри утворюе сумарну величину цього показника кафедри. У вщповщносп iз вимогами до дiяльностi ПВС кожному показниковi кеpiвництвом yнiвеpситетy призначена певна кшьюсть балiв.
За допомогою розроблено1 програми обчислення рейтингу кафедр (за показниками) продовжуються за допомогою таких кроюв.
1) Добутки сумарно1 кiлькостi одиниць кожного з показниюв i призначених йому кшькосп балiв перераховуються шляхом додавання до суми балiв yсiх показникiв, тобто до загально1 суми балiв кафедри Sk (рис. 8).
2)	Загальна сума б^в кожно! кафедри дшиться на кшьюсть штатних посад кафедри i складае середне значення балiв рейтингу rk кафедри (рис. 8).
3)	Обчислюеться нормований показник рейтингу кафедри rkh шляхом дшення rk на максимальне значення Rmax серед усiх кафедр унiверситету (рис. 9).
4)	Для кожно! кафедри визначаеться загальний показник RK3 шляхом додавання показникiв трьох видiв дiяльностi кафедр -навчально-методично!, науково! та оргашзацшно-навчально! i виховно!.
5)	Для кожно! кафедри обчислюеться загальний нормований показник RK3H шляхом дшення показника RK3 на його максимальну величину за ушма кафедрами унiверситету.
6)	1з урахуванням отриманих величин RK3H показникiв роботи кафедр визначаеться мюце кожно! кафедри у рейтингу ушверситету i ректорат приймае рiшення вщносно можливого заохочення колективiв кафедр.
Цей приклад шюструе наведену вище методику обчислення рейтингу кафедр ХНАДУ.
1)	У певно! кафедри сума балiв за навчально-методичною роботою у поточному навчальному рощ дорiвнюе sk = 2530 балiв ,
а кiлькiсть посадових окладiв складае nK = 9; тодi середне значення показника дорiвнюе rK = sK / nK = 2530 / 9 = 281,11 балiв/п.о.
2)	Максимальний показник у груш кафедр дорiвнюе Rmax = 451,91 балiв ; нормований показник дорiвнюе
rKH = rK / R max = 281 / 451,91 = 0,622 .
3)	Показники науково! роботи дорiвнюе 0,225; показник оргашзацшно-навчально! та виховно! роботи - 1,00; тодi сумарний показник дорiвнюе
RK3 = 0,622 + 0,225 + 1,00 = 1,847 .
У табл. рис. 7 наведено приклад кшцевих обчислень мюця декшькох кафедр.
Методика та 1СР вщкрип до змш -передбачено можливють введення нових показникiв або виключення застарiлих. За час використання 1РС виконувалась поступова адаптацiя методики до реально! ситуацп в ушверситет iз урахуванням змiн прiоритетiв.
Висновки
За результатами 1СР виконувались обчислення пiдсумкiв роботи кафедр, факультетiв та декашв вiдповiдних факультетiв у 2005 - 2006 та 2006 - 2007 навчальних роках. При цьому визначались мюця кафедр на ушверситетському рiвнi, а також найбшьш виразш показники (високi або низькi).
За запропонованою методикою для порiвняння досягнень кафедр (перед сортуванням за величиною показниюв для визначення мiсця кожно! кафедри) виконусться нормування суми показниюв дiяльностi	ПВС	окремих
кафедр.
Дослщжувались два варiанти нормування:
1)	нормування за максимальним значенням серед показниюв кожно! кафедри у певнiй груш кафедр, що розглядаються;
2)	нормування за середшм значенням (математичним очшуванням) серед показникiв кожно! кафедри у певнш групi кафедр, що розглядаються.
Результати дослiдження у графiчному виглядi вiдображенi на рис. 10. Характер наведених графiкiв дозволяе зробити висновок, що змiнi шдлягають нормованi величини сумарних показникiв; розподш мiсць, якi обчислюються для кожно! кафедри, не змшюеться.
На наш погляд, не е доцшьним проводити загальний ушверситетський рейтинг. У цьому випадку порiвнюються суми показникiв кафедр, яю мають суттево вiдмiннi напрямки професiйно! дiяльностi. Бiльш доцiльним i об'ективним е рейтинг кафедр за професшним спрямуванням: гуманiтарних, фундаментальних, професiйно-орiентованих та випускових. Зазначенi результати рейтингового аналiзу складають банк даних дiяльностi ПВС кафедр, мiстять iнформацiю для керiвництва ВНЗ, сприяють пiдготовцi анал^ично! та статистично! iнформацi! для звгтносп унiверситету вищим органiзацiям.
Лiтература
1. Мельничук Д.А., Ибатуллин И.И., Шостак А.В. Рейтинг субъектов деятельности национального аграрного университета Украины // Университетское управление. - 2004. - № 3(31). -С. 44 - 58.
2.	Мак-Федрис, Пол. Формы, отчеты и запросы в
Microsoft Access 2003 / Пер. с англ. - М.: Издательский дом «Вильямс», 2005. - 416 с.
3.	Гарнаев А.Ю. Microsoft Excel 2000: Разра-
ботка приложений. СПб.: БХВ, 2000. - 576 с.
Рецензент: О.П. Алекаев, д.т.н., професор, ХНАДУ.
Стаття надшшла до редакци 10 сiчня 2008 р.
I IS Microsoft Access	-|п| х|
Файл Правка Вид Вставка Сервис Окно Справка	Введите вопрос *
¡jfe _07_М_1нформ : база данных (формат Access 2000)		-|П| X 1
\ Конструктор ' Д Создать | | 11 о		rüi
Объекты
H	Таблицы
Запросы
m	Формы
а	Отчеты
-щ	Страницы
m	Макросы
jäg	Модули
Группы
LS	Избранн...
ш
aj ш
El ш s
El El 0 lût
±L
Создание таблицы в режиме конструктора _J
Создание таблицы с помощью мастера	3
Создание таблицы путем ввода данных	3
:6о Викладачи	ИЗ
О1-04 Нов! спецйльност!	Э
05-08 Портал	Э
09 Дистанцйне навчання	3
10-13 Видання	Э 14-15 Комп'ютерн! класи
16	Лабор_роботи
17	Навч_прим1щення
18	ЛцензоваН програми
_I_
19-21 КонференцГ 22-23 Публ1каци 24 Виставки
25-26 Стандарти вищоГ ocbítm
27	Засоби дйгностування
28	Атестац1я бакалавре
29	Кр_мод система
30	Додатков1 роботи
Рис. 1. 1нтерфейс бази даних методичноï роботи 0KpeM0ï кафедри
H Microsoft Access								_	■Ащ]
Файл Правка Вид Вставка Формат Записи Сервис Окно Справка							Введите вопрос			-
Ш 19-21 Конференци : таблиц			э				-|П|Х|
1 №	| 2 Назва конференци |	3 Тип конферен|	4 Орган1затор|	5 М1сце прс|	6 П1Б викг	7 Вид уч;
►	в	Проблеми використання ¡нформац!йних технолопй в навчальному	ВсеукраТнська науково-методична конференц1я	ХНАДУ, ф-т Мехатроыки	ХНАДУ	Онуфрей ю. е.	Доповщ ач
i	Экспертные оценки элементов учебного процесса	VIII межвузовская научно-методическая конференция	Народная украинская академия, г. Харьков	Народная украинская академия, г. Харьков	Онуфрей ю. е.	Доповщ ач
2	Экспертные оценки	VIII	Народная	Народная	Маций	Доповщ
| Запись:		н I i и i ► I м |>ж| из 34							jd
[Ц
л
Рис. 2. Фрагмент одша Í3 таблиць БДМ
Рис. 3. Приклад одте! Í3 форм бази даних методично! роботи кафедри
Рис. 4. Вiкно кнопково! форми бази даних з методично! роботи викладачiв кафедр
Рис. 5. Вшно схеми даних
Показники навчально-методичноТ роботи кафедри
Повна назва кафедри
Загальна шльшсть посадових окладiв викладачiв		Бали	Кшьшсть одиниць показник1в
№	Показник методично! роботи
1. В1дкриття нових спещальностей, Тх л1цензування та акредитащя
1	Вщкриття (лщензування) ново! спецiальностi	150
2	Лiцензування спещальност на новий рiвень	75
3	Акредитацiя спещальност (за кожний рiвень)	100
4	Вiдкриття нових спецiалiзацш (за одну спецiалiзацiю)	50
2. 1нфо	рмацшне забезпечення навчального процесу
5	Розробка та використання електронних форм пiдручникiв в обсязi робочих програм дисциплiн	100
6	Розробка та використання електронних форм конспекпв лекцш в обсязi робочих програм дисциплш	75
7	Розробка та використання електронних форм по^бнишв	50
8	Розробка та використання електронних форм методичних вказiвок за в^ма формами та видами занять	20
9	Розробка, лщензування та експериментальне застосування курсу дистанцшного навчання в обсязi робочо! програми дисциплiни (пiсля одержання лiцензii)	200
Рис. 6. Фрагмент таблицi показнишв рейтингу кафедр ХНАДУ
Кафедри	Методична робота Rкн	Наукова робота Rкн	Орг.-навч. { виховна робота Rкн	Сума показнигав Rкз	Нормована сума Rкзн	Мюц е
Кафедра 03	0,622	0,225	0,847	1,694	1,000	1
Кафедра 05	0,404	0,191	0,483	1,078	0,636	4
Кафедра 01	0,268	0,073	0,414	0,755	0,446	5
Кафедра 04	0,108	0,049	0,193	0,350	0,207	6
Кафедра 02	0,867	0,324	0,193	1,384	0,817	2
Кафедра 06	0,252	0,231	0,772	1,255	0,741	3
Рис. 7. Приклад обчислення рейтингу дегалькох кафедр вищого навчального закладу
*| файл Правка Вид В-схавка Формах Сервис Данные Окно Справка	— &>
А	в	с	О	Е		е	н	1		К	—
2	НАВЧАЛЬНО-МЕТОДНЧНА РОБОТА			Г >т>1ан£тар						Ф лидаме нхаль »11
3				01	02	аз	04	05	37	0«5	07
Економ.	Ьсозем.	Укршшю	Фйнч.	Фхлософ!	Ьсозем. мои - 2	Вижцюж	1нформат	т<
д							я	полиол:.		нкн		н.
5	Кшькшть Бнклад. на кафе^!			1(5,00	18,50	5»,ТО	25 «¡О		16 до	24 ДО	23,75
6	№	Рейтинг зюпереднього року
Т				Бали	Бали	Бали	Бали	Бали	Бали	Бали	Бали
а		1 _ В1дкрнтта новнх слещальностен, IX л		¡■ж;ею*гн:»юю та акредасталр№[
9	1	В1дкрнття (лгцензування) ж>Б01 спещальносп	150,0	О ДО	одо	ОДО	ОДО	ОДО	ОДО	ОДО	ОДО
Ю	■2	Лгцензування слещальносж! на нобнн р1вень	75,0	О ДО	одо	одо	одо	одо	одо	одо	одо
1 1	3	Акреднтаи^я спещалыюет!	а.оо,о	О ДО	одо	одо	одо	одо	одо	одо	одо
12	-4	Вщкрнття новнх спежДалдзадрн (за одну с- тге 1пд лп т з!пн> )	50,0	О ДО	одо	одо	одо	одо	одо	одо	одо
м		►1 |\ Норм. макс. \норм.	серед.	У			1 -1	1				► 1
Рис. 8. Фрагмент листа 1СР кафедр ХНАДУ
Рис. 9. Фрагмент листа 1СР-системи: ганцеве сортування за зменшенням показнигав (нормування показнигав за середшм значениям суми показнигав)
Рис. 10. Граф1чне вщображення обчислення рейтингу за двома вар1антами: 1 - нормування показнигав за максимальним значенням одного 1з показнигав; 2 - нормування показнигав за середшм значенням ус1х показнигав

=====



﻿УДК 681.3.07
РОЗРОБКА ЕЛЕМЕНТ1В СИСТЕМИ П1ДТРИМКИ ПРИЙНЯТТЯ Р1ШЕНЬ В УПРАВЛ1НН1 ДОРОЖН1М РУХОМ
С.В. Кап1нус, асшрант, ХНАДУ
Анотаця. Розглянуто питания застосування елемент1в теорИ' прийняття ршень для прак-тичних задач управлтня дорожтм рухом. Наведено результати розрахунку критерИ'в вибору ращональних управляючих diü на дорожнт рух.
Ключов1 слова: управлтня дорожмм рухом, критерп прийняття ршень, дерево ршень.
РАЗРАБОТКА ЕЛЕМЕНТОВ СИСТЕМЫ ПОДДЕРЖКИ ПРИНЯТИЯ РЕШЕНИЙ В УПРАВЛЕНИИ ДОРОЖНЫМ ДВИЖЕНИЕМ
С.В. Капинус, аспирант, ХНАДУ
Аннотация. Рассмотрены вопросы применения элементов теории принятия решений для практических задач управления дорожным движением. Приведены результаты расчета критериев выбора рациональных управляющих действий на дорожное движение.
Ключевые слова: управление дорожным движением, критерии принятия решений, дерево решений.
DEVELOPMENT OF DECISION-MAKING SUPPORT SYSTEM'S ELEMENTS IN
ROAD TRAFFIC MANAGEMENT
S. Kapinus, graduate, KhNAHU
Abstract. Issues concerning decision-making theory's elements for practical tasks of road traffic management are considered in the given article. The results of calculation criteria of choice of rational managing actions on traffic movement are offered.
Key words: road traffic management, decision-making criterion, decision tree.
Вступ
Впровадження сучасно! автоматизовано! сис-теми управлтня дозволяе гнучко управляти транспортними потоками залежно вщ !х ш-тенсивносп. Цшодобовий збiр шформаци вщ датчиюв характеристик транспортних пото-юв дае можливють змшювати режими пере-микання свiтлофорiв залежно вщ погодних умов, часу доби, дшв тижня, пори року, а також за змши пропускно! спроможност до-рожньо! мережа Це дозволяе рiвномiрно роз-подшяти транспортнi потоки на вулично-дорожнш мережi, пiдвищити рiвень безпеки руху, знизити кшьюсть дорожньо-транспорт-
них пригод i час затримок, збiльшити серед-ню швидюсть сполучень, економити пальне i знизити витрати на утримання дорщ а також створити iншi комфортнi умови для учасни-юв руху, у тому числi i пiшоходiв [1].
В ходi проведеного аналiзу [2] сучасного стану автоматизованих систем управлiння дорожнiм рухом в Укра!ш можна визначити, що задачi управлiння транспортними потоками е багатокритерiальними i складними через нестащонарнють об'екта управлiння та суперечливiсть економiчних, технологiчних, екологiчних та технiчних критерив !х функ-цiонування.
Аналiз публжацш
Найбшьш ефективною структурою АСУДР е ieрархiчна структура, побудована за принципом рiвневостi функцш управлiння [3]. Це передбачае декшька рiвнiв управлiння, вир> шуваних завдань, що вiдрiзняються масшта-бнiстю.
В сучасних системах управлiння дорожнiм рухом на рiвнi оперативного управлiння та прийняття рiшень, як правило, е керуючий орган (колектив спецiалiстiв чи людина, яка приймае рiшення). Роботу диспетчерського персоналу керiвного пункту системи керу-вання дорожнiм рухом оргашзовано за iерар-хiчним принципом. Оператори контролюють рух i керують ним в окремих районах вулич-но-дорожньо! мережi, а диспетчери - вщпо-вiдальнi черговi по мiсту - координують дп операторiв i приймають рiшення з важливих питань керування на загальномюькому рiвнi.
Багатокритерiальнiсть задач управлшня до-рожнiм рухом та iмовiрнiсний характер па-раметрiв дорожнього руху пiдвищують iмо-вiрнiсть помилкових дш з боку людини-оператора ^ як наслiдок, iмовiрнiсть збо!в у роботi транспортно! системи. У зв'язку з цим формалiзацiя (математичний опис) задач управлшня транспортними системами iз за-стосуванням елементiв теори прийняття р> шень е актуальною, оскшьки при автомати-заци подiбних розрахункiв ЕОМ в лiченi хви-лини може охарактеризувати шанси на устх. Цi данi значно знизять iмовiрнiсть неефекти-вних управляючих дш, пов'язаних з витрата-ми, що, у свою чергу, дозволить шдвищити надшшсть систем управлiння дорожнiм рухом [1, 2, 4].
Мета та постановка задачi
Метою статп е розробка елемен^в системи шдтримки прийняття рiшень на рiвнi оперативного управлшня та прийняття ршень у системi управлiння дорожнiм рухом.
Побудова дерева ршень
Особливе мюце у теорп прийняття рiшень займае теорiя корисностi, яка може бути реа-лiзована п'ятьма етапами. Один з еташв - це структурний аналiз. Цей етап передбачае структуризащю проблеми на якiсному рiвнi, на якому особа, що приймае ршення (ОПР), визначае основш кроки процесу прийняття
рiшень i намагаеться упорядкувати 1х у ви-глядi деяко! послiдовностi. З цiею метою бу-дуеться дерево рiшень. Для побудови дерева ршень АСУДР було розглянуто такi ситуаций передзаторовий стан на ВДМ; пропуск колон або окремих спецавтомобшв; ДТП; проведення дорожньо-ремонтних робiт та несприятливi погоднi умови. Для кожно! з даних ситуацш побудовано дерево рiшень у вигщщ графа [4].
Локальне		Змша
управтння	—	часу
св1тлофорами		фази
Пропуск колон або окремих спецав-томобшв
Заборона маневрив
Управлiння свiтлофорами по мереж
Змша штен-сивностi
Вирiвнювaння циклiв регу-лювання
Рис. 1. Приклад дерева ршень
Для того щоб обрати найкращу альтернативу, яка впливае на виб1р ращонально1 керую-чо1 дп, застосовували критерп прийняття рь шень - мшмаксний (ММ-критерш), Севщжа, Байеса-Лапласа (BL), Гермейера, Гурвщя [5, 6].
Застосування ММ-критерда виправдано, як-що ситуащя, в якш приймаеться ршення, наступна:
-	про можливють появи зовшшшх сташв (Fj) шчого не вщомо;
-	доводиться зважати на появу р1зних зовшшшх сташв (Fj);
-	ршення реал1зуеться лише один раз;
-	необхщно виключити будь-який ризик.
Оцшочна функщя ММ-критерда мае вигляд
Zmm = max eir i eir= min e^, (1)
де e,j - елемент мaтрицi рiшень, пiд яким ро-зумiеться кориснiсть рiшення; eir - результат, який характеризуе, в цшому, ус нaслiдки рiшення.
Для критерда Байеса-Лапласа (BL) передба-чаеться, що ситуацiя, в якш приймаеться pi-шення, характеризуеться наступними обста-винами:
-	iмовipнiсть появи стану (Fj) вiдома i не залежить вiд часу.
-	ршення pеалiзуеться (теоретично) нескш-ченно багато pазiв;
-	для малого числа pеалiзацiй piшення до-пускаеться деякий ризик.
Оцiночна функщя кpитеpiю Байеса-Лапласа (BL)
ZBL=max eir, e^^q	(2)
де qj - iмовipнiсть того, що подiя вiдбу-деться.
Для критерда Севiджа вимоги, що пред'яв-ляються до ситуаци, в якш приймаеться pi-шення, збiгаються з вимогою до ММ-кpитеpiю.
Ощночна функцiя кpитеpiю Севiджа мае вигляд
ZS = min eir = min [max (max eij - eij)]. (3) Кpитеpiй Гуpвiця застосовуеться у раз^ коли:
-	про вipогiднiсть появи стану (Fj) нiчого не вщомо;
-	необхiдно враховувати появу стану (Fj);
-	pеалiзуеться лише мала кшьюсть piшень;
-	допускаеться деякий ризик.
Оцiночна функцiя критерда Гуpвiця:
ZHW = max eir = max min eq.. (4)
Умови застосування критерда Гермейера таю:
-	iмовipнiсть появи стану (Fj) невiдома;
-	допускаеться деякий ризик;
-	ршення може pеалiзуватися один або кшька pазiв.
Оцiночна функцiя кpитеpiю Гермейера мае вигляд (5); якщо функщя розподшу вiдома не дуже надшно, а число pеалiзацiй невелике, то, слщуючи кpитеpiю Гермейера, отриму-ють, взагалi кажучи, невиправдано великий ризик [5, 6].
ZG = max eir = max max gy. (5)
Виконано оцiнку ланок дерева рiшень на ос-HOBi статистичних даних щодо iмовiрностi здiйснення того чи шшого заходу й ощнки впливу кожного i3 заходiв на народногоспо-дарськi витрати (рис. 2) [7]. Результати наведено у табл. 1 та 2.
Таблиця 1 Вплив заход1в ОДР на народногосподарсью витрати
Заходи	Поточн1 народногосподарськ1 витрати
о	о <J	в к О	о"	и о	о	d	0 о	и
Введення одно-стороннього руху	1	1	0	1	0	0	0	0	3
Обмеження швидкост1 руху	1	1	0	1	0	0	1	0	4
Введення коор-динованого руху	1	1	0	1	1	0	1	1	6
Оргашзац1я реверсивного руху	1	1	0	1	0	0	0	0	3
Заборона маневр1в	1	1	1	1	0	0	0	0	4
Змша числа фаз i часу циклу регулювання	1	1	1	1	0	0	0	0	4
Таблиця 2 Ефективтсть заход1в ОДР
Заходи	Коефщент ефективносп
Обмеження доступу до дшян-ки ВДМ	0,67
Обмеження швидкосп на дь лянщ ВДМ	0,18
Заборона руху за напрямками	0,15
Реверсивний рух	0,15
Заборона маневр1в	0,2
Локальне управлшня свггло-форною сигнал1защею	0,4
Управлшня свгтлофорами по мереж1	0,4
Для розрахунку критерпв прийняття piшень побудовано матрицю прийняття ршень, яка мае вигляд (табл. 3).
Таблиця 3 Мaтpиця пpийняття pmem та peзyльтaти poзpaxyнкy Kp^repiiB пpийняття plшeнь
Z - Z
Пoдlя			К	pитe	piï
д1я	Змlнa часу фази	'н о o н в и 0 и (d 1 а и s го	Bиpiвнювaння циктв peгyлювaння	j m	'« e о	Гypвlц
Лoкaльнe	4	0	0	1,б	б	2
yпpaвлlння cвlтлoфopaми
Зaбopoнa ма-	0	4	0	0,8	б	2
нeвplв
Упpaвлlння cвlтлoфopaми	0	0	б	2,4	4	З
пo мepeжl
Bapтicнy oцiнкy зaxoдiв ОДР дepeвa piшeнь знaйдeнo на ^и^ад! кpитepiю Байеса-Лапласа (BL). Оцiнoчнa функц1я для цьoгo Kprnepro мае такий вигляд
ZBL=max ei,
eir eijqj,
(б)
дe eij - вapтlcнa oцiнкa; qj - lмoвlpнlcть тoгo, щo пoдiя вiдбyдeтьcя.
^д1 визнaчимo paцioнaльнy yпpaвляючy д1ю для poзглянyтoï ситуаци
Zpaц - maX
Z1 - 0,4 • 4 - 1,б Z2 - 0,2• 4 - 0,8 Z3 - 0,4• б - 2,4
ei=4
Лoкaльнe
у^авлыня
cвiтлoфopaми
npony^ кслсн aôo oкpeмиx с^дав-тoмoбiлiв
Зaбopoнa мaнeвpiв
Упpaвлiння		Bиpiвнювaння
cвiтлoфopaми	-	цикл!В
no мepeжl		peгyлювaння
Рис. 2. Ситyaцiйнa oцiнкa aльтepнaтивниx зaxoдiв
Для nponycKy кoлoн aбo oкpeмиx сш^вто-мoбiлiв пoтpiбнe застосування зaxoдiв щoдo yпpaвлiння cвiтлoфopaми го мepeжi; цe мo-жливo визначити 1з poзpaxyнкy кpитepiïв пpийняття prnem (табл. 3).
П1сля aнaлiзy aльтepнaтивниx piшeнь i вибo-py paцioнaльниx yпpaвляючиx д1й АСУДР у пpивeдeниx cитyaцiяx дepeвo piшeнь нaбyдe вигляду
e2=4
Шдви-щeння бeзпeки
Рис. 3. Дepeвo paцioнaльниx piшeнь
Таким чином, побудовано дерево ршення для тдтримки процесу прийняття ршень у системах управлшня дорожнiм рухом.
Висновки
В результат дослiдження було розглянуто критери прийняття рiшень та методи оргаш-заци дорожнього руху, якi сприяють тдви-щенню ефективносп транспортних систем, та побудовано дерево ршень. Запропоновано виконати оцiнку ланок дерева ршень на ос-новi статистичних даних щодо iмовiрностi здшснення того чи iншого заходу i оцiнки впливу кожного iз заходiв на народногоспо-дарськi витрати.
Побудували дерево рiшень з урахуванням вiрогiдностi та вартостi ланок. Вибiр най-кращо! альтернативи пропонуеться здшсню-вати на основi критерiю Байеса-Лапласа (БЬ), тому що з усiх критерив прийняття р> шень вiн враховуе iмовiрнiсть здiйснення поди та за значно! кiлькостi реатзацл рiшень мiнiмiзуеться ризик прийняття рiшень.
Лiтература
1.	Капитанов В.Т. Управление транспорт-
ными потоками в городах / В.Т. Капитанов, Е.Б. Хилажев. - М. : Транспорт, 1985. - 94 с.
2.	Абрамова Л.С. Анализ функционирования
автоматизированных систем управления дорожным движением в мегаполисах /
Л.С. Абрамова, С.В. Капинус // Вюник Донецького шституту автомобшьного транспорту : науковий журнал. - До-нецьк : Молня. - 2009. - №1. - С. 13-20.
3.	Дербунович Л.В. Иерархические структу-
ры систем управления дорожным движением / Л.В. Дербунович, Л.С. Абрамова // Вюник Нащонального техшчно-го ушверситету «Харювський полтех-шчний шститут» : зб. наук. пр. - Хар-юв : НТУ «ХП1». - 2008. - №31. -С.40 - 48.
4.	Абрамова Л.С. До питання вибору крите-
рив ефективносп оргашзаци дорожнього руху методами теори корисносп / Л.С. Абрамова, С.В. Капинус // Автомобильный транспорт : сб. научн. тр. -Харьков : ХНАДУ. - 2009. - Вып. 25. -С.62-65.
5.	Теория принятия решений : учебник /
Б.В. Москвин. - СПб. : ВКА имени А.Ф. Можайского, 2005. - 383 с.
6.	Мушик З. Методы принятия технических
решений / З. Мушик, П. Мюллер. - М. : Мир, 1990. - 208 с.
7.	Аксенов В.А. Экономическая эффектив-
ность рациональной ОДД / В.А. Аксенов, Е.П. Попова, О.А. Дивочкин. - М. : Транспорт, 1987. - 128 с.
Рецензент: М.А. Подригало, професор, д.т.н., ХНАДУ.
Стаття надшшла до редакци 1 липня 2010 р.

=====



﻿УДК 621.646.8:621.398
ПРАЕКТАВАННЕ БЕСПРАВАДНОГА КАНАЛА СУВЯЗІ ДЛЯ КІРАВАННЯ КЛАПАНАМ КІРУЕМАГА УНУТРЫТРУБНАГА ГЕРМЕТЫЗАТАРА
Ю. В. КРЫШНЕУ, В. М. ГАРБУЗ, В. А. СТАРАСЦЕНКА,
С. М. КУХАРЭНКА, Л. А. ЗАХАРАНКА, Э. М. ВІНАГРАДАУ,
А. У. САХАРУК, М. В. СТАЛБОУ, В. М. ЛУКАШОУ
Установа адукацьіі «Гомельскі дзяржауны тэхтчны утверстэт імя П. В. Сухога», Рэспублта Беларусь
Кіруемьі унутрытрубны герметызатар (КУГ) выкарыстоуваецца на нафтаправо-дах пры правядзенні рамонтных работ, у выпадках, калі неабходна ізаляваць аварый-ны участак трубы ад астатняй масы нафты, каб утрымаць яе гідрастатычны ціск.
Прынцып работы стандартнага метаду герметывацып заключаецца у наступных працэсах, якія мы прапануем разгледзіць для далейшага параунання. Герметызатар разам з патокам нафты рухаецца па трубаправодзе да месца перакрыцця. Як толькі герметызатар дасягне месца перакрыцця, паток нафты павінен спынщца за кошт спрацоування герметызатора, які утрымлівае гідрастатычны ціск слупа нафты на час правядзення рамонтных работ на трубаправодзе. Пры запуску працэсу герметызацыі павышаны ціск прарывае спецыяльную мембрану, і нафта паступае у спецыяльны гідрацыліндр (мал. 1). Па меры запаунення аб'ему гідрацыліндра нафтай адбываецца паступальны рух штока, цвёрда механічна звязаных з ім пол1урэтанавых абшывак, якія размешчаны па знешняму дыяметру герметызатара. Ва умовах, калі помпавыя агрэгаты адключаны, за кошт трэння зрушаных па конусных наюравалым абшывак аб унутраную паверхню трубы, герметызатар фіксуецца у нафтаправодзе. У вышку, пасля дэмантажу аварыйнага участка трубаправода мінімізуюцца страты нафтапра-дукту і прадухіляецца забруджванне навакольнага асяроддзя ад зліву нафты з раман-туемага участка па рэльефе. Пасля завяршэння работ і аднаулення цэласнасці труба-правода, герметызатар патокам нафты перамяшчаецца у камеру прыему для выцягвання. Такі метад мае шэраг недахопау: мембрана можа не прарвацца ціскам, а узняты ціск моцна павялічвае знос трубы і павышае верагоднасць прарыву нафты з трубаправода.
Улічваючы усе недахопы герметызатара стандартнай канструкцыі, які ужываец-ца на нафтаправодзе «Дружба», мы прапануем мадэршзаваную канструкцыю з на-ступ^ші перавагамі [1]:
-	павышаны радыус выяулення (да 11 м);
-	запуск працэсу герме^ка^и шляхам тэлеюравання электрапрывадам клапана КУГ ад наземнай прылады, без папярэдняга уздыму ціску у трубаправодзе, неабходнага для разрыву мембраны у выпадку некіраванага упускнога клапана;
-	бесперапынны маніторынг становішча абшывак герметызатара у працэсе герметызацып;
-	магчымасць замыкання клапана КУГ шляхам рэверсу рухавіка электрапрывада для спрашчэння вымання КУГ з нафтаправода пасля завяршэння рамонтных работ.
НЭфГ5ПР5ВО0
V
,, WM '»■■■■	■ :, www : л-, :, ым v-v ¿
а)
б)
Мал. 1. Канструкцыя герметызатара з юраваным клапанам: а - герметызатар перамяшчаецца па трубе, клапан зачынены; б - пасля падачы каманды клапан адкрываецца, нафта паступае у пдрацылшдр і праштурхоувае поршань, расклшоуваючы пол1урэтанавыя абшыую. Т акім чынам, труба у месцы знаходжання КУГ апынаецца перакрытай без уздыму ціску нафты
На мал. 2 прыведзена структура наземнай і унутрытрубнай прылад КУГ.
а)	б)
Мал. 2. Структурныя схемы электронных прылад KYT: а - наземнай прылады; б - унутрытрубнай прылады: ІПС - імпульсньі пераÿтваральнiк сiлкавання; АРУ - схема аÿтаматычнага рэгулявання ÿзмацнення; ПKІ - пульт кіравання i індьїкацьіі; МВУМ - маставы выбарчы ÿзмацняльнiк магутнасці; MKM - мікракантролерньї модуль; СДKA - схема дыстанцыйнай камутацьіі акyмyлятараÿ; ДПШ - датчык перамяшчэння штока; ПKУK -прылада кіравання ÿпyскным клапанам
^нстру^ня KYT (мал. 1) паказвае, што прыемная апаратура знаходзіцца ÿ галаÿной частцы герметызатара, а клапан для запаÿнення гідрацьіліндра - у хвас-тавой частцы. Аднак, у даным варыянце канструкцьіі KУГ існуе праблема з сувяззю прыёмнага модуля i
клапана. Тэхналапчна забяспечыць правадное злучэнне досыць складана, так як звонку корпуса герметызатара рухаюцца па распорных конусах поліурэтанавыя абшыую, а у сярэдзше - поршань у гідрацыліндры. У абодвух вы-падках патрабуецца забяспечыць высокую герметычнасць, таму размяшчэнне пра-водкі у дадзеных месцах складанае.
Была вылучана гіпотэза, што перадаць каманду на адкрыццё клапана можна бяздротавым спосабам - па гукавым канале. У якасці асяроддзя для перадачы сігналу тут выступае сталёвы корпус герметызатара, які мае таушчыню 10-12 мм.
Для перадачы і прыему гукавога сігналу, да корпуса КУГ прымацоуваюцца два п'езаэлектрычных выпраменьвальшка. У эксперыменце выкарыстоувалюя выпра-меньвальнікі тыпу ЭП-5. Выпраменьвальнік з боку прыемнай апаратуры узбуджае у сталі гукавыя хвалі, якія распаусюджваюцца да выпраменьвальшка на баку клапана. Дзякуючы зваротнаму п'езаэлектрычнаму эфекту пры механічнай дэфармацыі ад гука-вых ваганняу сталёвага корпуса, на выхадах выпраменьвальніка з'яуляецца рознасць патэнцыялау, прапарцыянальная дэфармацыі. Гэты сігнал узмацняецца з дапамогай узмацняльніка і далей апрацоуваецца з дапамогай лічбавага сігнальнага працэсара.
Для таго, каб павысщь надзейнасць сувязі па канале, у якасці сігналау выка-рыстаны псеудавыпадковыя фазаманіпуляваныя сігналы. Дадзеныя агналы, дзя-куючы добрым аутакарэляцыйным уласцівасцям [2], дазваляюць пазбегнуць шжы-вых спрацоуванняу клапана ад шуму, вырабляемага герметызатарам пры рушэнш, і старонніх гукау, і забяспечаць надзейнае спрацоуванне на фоне шумоу пры пера-дачы сігналу на адкрыццё клапана.
У якасці прыярытэтных характарыстык для сютэмы сувязі, якая распрацоуваецца, былі выдзелены:	верагоднасць	ілжывага спрацоування (верагоднасць спрацоування
карэляцыйнага прыемніка ад шуму пры адсутнасці сігналу на уваходзе) і верагод-насць непрыёму сігналу (верагоднасць пропуску перадаванага сігналу з прычыны скажэння шумам у канале).
Пры праектаванні канала сувязі даужыня перадаванага сігналу і значэнне парогу спрацоування карэляцыйнай апрацоукі вызначалюя з меркаванняу:
1)	досыць нізкіх значэнняу верагоднасці ілжывага спрацоування і верагоднасці непрыёму сігналу пры перадачы;
2)	невялікай вылічальнай складанасці карэляцып доугіх сігналау.
З улікам гэтага даужыня псеудавыпадковых сігналау была абраная роунай 1023 біт. Пры аналізе залежнасці верагоднасці шжывага спрацоування па формулах, прыведзеных у [3], быу абраны парог спрацоування, які роуны 640 правільна прынятым сімвалам. Пры зададзеным значэнні даужыні псеудавыпадковага сігналу і парога спрацоування
_з
верагоднасць непрыему склала 10 пры суадносінах «сігнал-шум» на уваходзе прыемшка
0,2 (магутнасць шуму у пяць разоу перауз^іходзіць магутнасць сігналу). Верагоднасць шжывага спрацоування карэляцыйнай прылады пры зададзеных параметрах прыемшка складае менш за 10-14 (мал. 3).
Нягледзячы на тое, што сісгема сувязі паказала сваю працаздольнасць, пры выпрабаваннях надзейнасць сувязі стала значна шжэй за разліковую. Пры дачыненш да магутнасцяу сігналу і шуму у канале, роуным 0,2, верагоднасць непрыему набліжаецца да адзінкі. Надзейны прыём магчымы толькі пры значэннях адносіны магутнасцяу сігналу і шуму, якія перавышаюць 0,52. Тлумачыцца гэта тым, што п'езаэлектрычныя выпраменьвальнікі маюць вельмі вузкі дыяпазон частот, якія яны прапускаюць. Пры вывучэнш АЧХ канала сувязі намі была устаноулена, што яна з'яуляецца нераунамернай на усім дыяпазоне частот, з відавочна в^1яуленым узды-мам у дыяпазоне 1,1—1,2 кГц (мал.
Мал. 3. Bb^ap napora cпpaцoÿвaння «^эля^и^та пpыeмнiкa пceÿдaвыпaдкoвaгa ciгнaлу ÿ зaлeжнacцi aд вepaгoднacцi iлжывaгa cпpaцoÿвaння
Aнaлiтычнa ÿcтaлявaць зніжзннє вepaгoднacцi пpыeму cклaдaнaгa шумaпaдoбнaгa ciгнaлу, які пpaйшoÿ npaß кaнaл з лoмaнaй A4X, нeмaгчымa [4]. Гэтa тлумaчыццa тым, што фopмa ciгнaлу cкaжaeццa, штo po6í^ ягo мєнш aдмeтным нa фoнe шумoÿ для кapэляцыйнaгa пpыeмнiкa. Сaмым эфекты^ным шляхaм пaвышэння нaдзeйнacцi астэмы cувязi з'яÿляeццa ÿвядзeннe ÿ гангл cувязi пpaдыcкaжэння з дaпaмoгaй aдмыcлoвaгa эквaлaйзepa, які нaблiжae фopму A4X кaнaлa дa paÿнaмepнaй, a ФЧХ - дa лiнeйнaй для дыяпaзoну 4acToT, нa якіх пepaдaeццa ciraan. Aднaк дaдзeнae paшэннe з'яÿляeццa не^ыш^ьным для paзглeджaнaй cicтэмы cувязi, тaк як энepгacпaжывaннe эквaлaйзepa 6удзє пepaвышaць энepгacпaжывaннe ÿcёй acтaтняй пpыёмнaй aпapaтуpы і icтoтнa знiжaць 4ac npa^i aд aкумулятapaÿ.
Мал. 4. AЧХ кaнaлa cувязi
Тaму былa вылучaнa гiпoтэзa aб пaвышэннi нaдзeйнacцi cувязi шляхaм пaдбopу aпopнaй чacтaты фaзaмaнiпулявaнaгa ciгнaлу. Быта pacпpaцaвaнa кaмп'ютapнaя ^arpa^a, якaя імітує пpaцу cicтэмы cувязi з улiкaм хapaктapыcтыкi pэaльнaгa кaнaлa cувязi.
Bынiкi пpaцы пpaгpaмы пpaдcтaÿлeны нa мaл. 5. na вoci Х aдклaдзeны cуaд-нociны мaгутнacцяÿ гігталу і шуму ÿ кaнaлe, та вoci Y _ вepaгoднacць не^ыему ciгнaлу. Дacлeдaвaннi пpaцы cicтэмы пpaвoдзiлicя нa чacтoтaх 100 Гц, 1 кГц і 2 кГц. №дзейней зa ÿce cicтэмa пpaцуe пpы aпopнaй чacтaцe фaзaмaнiпулявaнaгa ciгнaлу 100 Гц. У дaдзeным
_з
выпaдку aтpымaлacя дacягнуць нaдзeйнaгa пpыeму (вepaгoд-нacць не^ыёму _ 10 ) пpы cуaднociнaх «ciгнaл_шум» _ 0,28 (пepшaпaчaткoвa _ 0,52). Гэтa тлумaчыццa нacтупным. npn кapэляцыйнaм пpыёмe вельмі вaжнa нecкaжoнaя фopмa пceÿдaвыпaдкoвaгa ciгнaлу. Менш зa ÿce ciгнaл cкaжaeццa, кaлi ÿвecь яго cпeктp пpыпaдae нa paÿнaмepны ÿчacтaк AЧХ кaнaлa. У кaнaлa cувязi AЧХ менш зa ÿce нepaÿнaмepнaя нa чacтoтaх 10_1000 Гц, што aбумoÿлiвae мeншae cкaжэннe фopмы ciгнaлу a, тaкiм чынaм, бoльш упэÿнeны пpыeм нa фoнe шумoÿ у кaнaлe кapэляцыйнaгa пpыёмнiкa.
Мал. 5. Вынш мадэлявання прыему псеудавыпадковага фазаманіпуляванага сігналу
пры розных частотах паднясучай
Вывады
1.	Для эфектыунага выкарыстання псеудавыпадковых агналау неабходна, каб АЧХ канала сувяз1 была раунамернай. Так як прыем вядзецца па форме агналу, то нераунамерная АЧХ прыводзщь да скажэнняу формы агналу i пагаршэння прыёму на фоне шуму.
2.	Павысщь эфектыунасць прыему можна падборам апорнай частаты фазамань пуляванага псеудавыпадковага сiгналу.
3.	Пры выбары апорнай частаты фазаманiпуляванага псеудавыпадковага агналу, роунай 100 Гц, распрацаваная сютэма сувязi можа быць прыменена для кiравання клапанам кiруемага унутрытрубнага герметызатара.
Л1таратура
1.	Y. Kryshneu, L. Zakharanka, E. Vinagradau, A. Khramau, A. Sakharuk, M. Stalbou,V. Starastsenka. The monitoring and control system of the intrapipe sealer // ITELMS'2010. -Materials of 5th International Conference Intelligent Technologies in Logistics and Mechatronics Systems / Panevezys, Lithuania, 2010. - С. 31-36.
2.	Варакин, Л. Е. Системы связи с шумоподобными сигналами / Л. Е. Варакин. - М. : Радио и связь, 1985.
3.	Шумоподобные сигналы в системах передачи информации / под ред. В. Б. Пестря-кова.
-	М. : Совет. радио, 1973. - 424 с.
4.	Возенкрафт, Дж. Теоретические основы техники связи / Дж. Возенкрафт, И. Джекобс ; пер. с англ. под ред. Р. Л. Добрушина. - М. : Мир, 1969.
Атрымана 19.12.2011 г.

=====



﻿УДК 681.518:519.718+318.147
АВТОНОМНА МОБШЬНА 1НТЕРАКТИВНА СИСТЕМА КОНТРОЛЮ ЗНАНЬ
Е.П. Логачов, студент, ХНАДУ
Анотаця. Розглянуто проблеми створення автоматизованих систем контролю знань, гх основм можливост1 та перспективи використання таких систем у навчальному процеа.
Ключов1 слова: система тестування знань, дистанцтне навчання, тест, контроль знань, оцгнювання знань.
Вступ
Останшм часом все бшьшу популярнють набувають автоматизоваш системи контролю знань. Для реатзаци таких систем використовують два взаeмодоповнюючi тдходи:
-	стащонарш програмш комплекси, яю вбудовано до загального програмного забезпечення навчальних курсiв, наприклад система Moodle;
-	мобiльний варiант (бiльш привабливий для викладача) порiвняно невелико! за обсягом системи, яка спрямована на конкретну дисциплiну або курс. Вщповщно мобiльна програмна платформа тако! системи i розглядаеться дат.
Аналiз публiкацiй та джерел розробки
Загальш проблеми автоматизаци контролю знань вщносяться до створення будь-якого варiанта контролюючо! системи [1, 2, 3]. Перший варiант ушверсально! системи контролю знань описаний у роботах, яю призначеш для використання в Укра!ш системи Moodle [4].
Що стосуеться ще! розробки, то автор використав даш сайтiв (http://aiv.spb.ru/page. php?id=712&oid=581) i (http://altnet.ru/~mcs mall/DOCS/DOC/tech2.htm) та звичайш нормативнi матерiали щодо розробки у середовищi Borland C++ Builder [5], та матерiали з програмування на мовi C++ [6].
Мета та постановка задачi
Використання комп'ютерних навчальних систем в навчальному процес дозволяе розробити iндивiдуальний графш вивчення дисциплiни у зв'язку з рiзним рiвнем пiдготовки i здiбностями учня. Використання навчальних систем полегшуе роботу викладачiв, дозволяе !м ращональшше використовувати свiй час та час студенев як на заняттях, так i при самостiйному опрацьовуваннi навчального матерiалу.
Для кожного викладача е привабливим мати мобшьну переносну на будь-який комп'ютер систему, що дозволяе швидко визначити перелiк контрольних запитань, вщповщ на них, та оргашзувати зворотний зв'язок зi студентом, що навчаеться. Бшьшють таких систем або орiентовано на важкопереносимi програмнi додатки, або дуже складш i важко адаптуються до опитування. Метою ще! розробки було якраз створення саме мобiльного варiанта , який враховуе перш за все гетерогенний характер комп'ютерних ресурсiв.
Постановка задачi передбачае визначення узагальненого пiдходу до формування вщповщно! бази знань i розробка мобшьно! програмно! платформи тако! мобшьно! просто! контролюючо! системи.
Формування бази знань
Автоматизована система вимiрюe знання у виглядi числа - оцiнки - кшьюсно! мiри засвоених знань. Простим прикладом такого оцшювання е тест, у якому ус завдання мають один рiвень складностi, тобто кожне запитання оцiнюеться числом 0 або 1. Загальна оцiнка К у такому випадку визначаеться за формулою
К = е х,	(1)
1=1
де Xi - оцiнка за /-те питання, мае значення 0 або 1 (неправильно або правильно вiдповiдно), п - загальна кiлькiсть запитань, / - поточне запитання.
Практично вс автоматизованi системи контролю знань грунтуються на кiлькiснiй мiрi оцiнювання балiв. Але оцiнка взагалi повинна мати ще i якiсну характеристику. На практищ використання тако! системи виявляе випадки, коли людина не знаючи правильних вiдповiдей набирае високi бали, випадково вибираючи правильну вiдповiдь. Тому для яюсного оцiнювання необхiдно щоб автоматизована система використовувала перевiрку можливостi вiдгадування вiдповiдi, на основi логiчних зв'язкiв мiж запитаннями.
Такi методи оцiнювання дають ощнку не у традицiйних п'яти- або дванадцятибальних системах, а у кшькосп правильних вiдповiдей, або у процентному вщношенш. Тому загальну оцiнку необидно звести до традицшних форм оцшювання. Одним iз таких способiв зведення е створення меж оцiнок «вщмшно», «добре», «задовшьно» та «незадовшьно». Тобто загальна кшьюсть запитань подiляеться на штервали, i в залежностi до якого штервалу входить набрана кшьюсть балiв, ставиться традицiйна оцiнка.
1нший метод полягае у використаннi суми неправильно даних вiдповiдей, причому помилкова вщповщь оцiнюеться «1», а правильна - «0».
п
м = е х ,	(2)
1=1
де М - кшьюсть помилкових вщповщей за все завдання, п - загальна кшьюсть запитань,
х1 - ощнка за /-те запитання, та мае значення 1 або 0 (неправильно або правильно вщпо-
вщно). Для зручносп переведення перейдемо до вщсотково! частки помилок.
K = M Ч100 %,	(3)
n
де M - кiлькiсть помилкових вщповщей з формули (3), n - загальна кiлькiсть запитань. Таке своерщне оцiнювання знань базуеться на створенш меж вiдповiдностей традицiйним ощнкам, що близько до системи створення на основi неч^ко! логiки [1].
Програмна платформа
Основним недолгом розроблених систем контролю знань е орiентованiсть на конкретнi навчальнi курси, неможливють розширення типiв питань, або li громiздкiсть, складнiсть використання та обслуговування. У зв'язку з цим дощльно розробити власну систему, позбавлену вказаних недолшв. Система повинна працювати зi стандартними типами запитань (запитання - один/декшька варiантiв вiдповiдi), забезпечувати видачу запитань у випадковому порядку, шсля закiнчення тестування вiдображати оцiнку (або набраш бали) за тест та виводити упущеш або недовченi теми матерiалу. В результатi цього вийшла система, що задовольняе всi вищеописаш вимоги (рис. 1). Систему створено у середовищi розробки Borland C++ Builder 6. Це середовище обрано тому, що воно включае великий набiр засобiв, якi пiдвищують продуктившсть працi програмiстiв i скорочують тривалють циклу розробки. C++ Builder дозволяе швидко створювати програмне забезпечення, мае зручний та iнтуíтивно зрозумший графiчний iнтерфейс, а також юнуе велика кiлькiсть лiтератури [6], [7] про роботу в цьому середовищi розробки.
З системою тестування знань можна провести таю операци:
-	вхвдний контроль знань студентiв, тобто ощнити стартовi знання студента для визначення складностi викладеного матерiалу;
-	промiжний контроль знань, який дозволить виявити упущенi галузi знань i надолужити упущене;
-	контроль знань прослуханого курсу, тобто забезпечити неупереджену ощнку i полегшити роботу викладача.
Розроблена система складаеться з двох частин: ктентсько! i серверно!. З особливостей системи слiд зазначити ii малi
розмiри (виконуваний файл важить менше 1 мегабайта). ^ierncbKa частина дозволяе проводити тестування з подальшим
9/80	Текущий/всего
Бортов! обчислювалын комплекси сумасних автомобш!в.
jJ 1 о.»	..............
jJ ,.„,ш
а
Рис. 1. Головне вiкно автоматизовано! системи серверна
При запуску ктентсько1 частини користувачу потрiбно ввести сво1 данi (П1Б i групу), пiсля чого необхвдно вибрати тему для тестування.
Шсля закiнчення тестування на екран буде виведено шформащю про кiлькiсть правильно даних вiдповiдей, а у файл результапв буде записано докладнiшу шформащю, яка мiстить прiзвище тестованого, час початку тестування, час зашнчення, кшьшсть пра-вильних вiдповiдей, загальна юльшсть запитань i у виглядi списку запишуться питання, на яю неправильно вiдповiв користувач, а також видаеться шформащя стосовно тих тем матерiалу, на яю необхвдно звернути увагу, що надае системi iнтерактивностi.
Серверна частина дозволяе створювати запитальник або редагувати вже створений. Пiсля того, як буде сформований або змiнений запитальник його необхвдно зберегти у файл на диск, вибравши вiдповiдну опцш тесту. При цьому запитання записуються в закодованому виглядi, щоб користувач не змн пiдглянути або змiнити запитання. Практична щнтсть ц^е1 системи полягае в полегшент працi викладача ощнювати знання, а також допомагае	студенту	проводити
самоконтроль, завдяки присутностi штерактивност системи. Оскшьки ця система мае малi розмiри i не вимагае наладки, ïï можна записати на Flash- носш i запускати на будь-якш персональнiй ЕОМ, де встановлена операцшна система сiмейства Microsoft Windows 9x/ME/XP/Vista прямо з носiя.
висновком про ощнку i статистику неправильно даних ввдповвдей.
Фа™ Помощь
46/58тенцщий/всего		»„ j
Як визнамають таке науково - техшчне сярямування як сукуяШсть 3aco6iB ¡нформатики та телекомунжашй?
»j
|с„.рг™,
1 Телематика		ff 2 j
11нформатика		Г 3
|ме„г|,..„1,		Г 4 Добавить j
б
контролю знань, а - кл!ентська частина, б -
Висновки
Таким чином, створено мобшьну спецiалiзовану систему контролю знань студенпв, яка орiентована на конкретну дисциплiну. Це iндивiдуальний засiб, який, з одного боку, допомагае викладачу, а з шшого - студенту, оскшьки мае iнтерактивний характер. Його використання може бути рекомендовано для дисциплш, як читаються вперше, з метою швидко! розробки тестових завдань. Це своервдний варiант контролюючо! системи мiж традицшним опитуванням	та	справжньою
автоматизованою системою контролю знань. Розвиток ще! системи передбачае й доробку до просто! програмно! платформи автоматизованого навчального дiалогового курсу. Для цього треба додати до бази знань доввдки, яю вiдповiдають на кожне запитання ввдповвдного тесту.
Л1тература
1.	Ящун Т.В., Сажко Г.И. Контролирующие си-
стемы на базе нечеткой логики как способ интеллектуальной оценки знаний // Зб. наук. праць 3-го М1жнародного молод1жного форуму «Радюелектрошка I молодь у ХХ1 ст.». - Частина 2. - Харюв: ХДТУРЕ. - 1999.
С. 327 - 330.
2.	Вакуленко В.М. Перев1рка якост тесив для
автоматизованого контролю знань // Зб. ст. асшранпв. - Х.: ХД1К, 1997.
3.	Карпенко М.П. Проблема измерения знаний и
образовательные технологии // Соц.-полит. журн. - №6. - 1998.
4.	William Rice Moodle E-Learning Course
Development (Paperback).
5.	Глушаков С.В., Зорянский В.Н., Хоменко С.Н.
Программирование в среде Borland C++ Builder 6 // Фолио, 2003.
6.	Бьерн Страуструп. Язык программирования С+
+ // Невский Диалект, 2006.
Рецензент: О.П. Алекаев, професор, д.т.н., ХНАДУ.
Стаття надшшла до редакци 25 сiчня 2008 р.

=====

        


﻿Г. О. Крашвша
канд. держ. упр. м. Донецьк
СИСТЕМНО-ОНТОЛОПЧНИЙ АНАЛ1З ТРАНСФОРМАЦП ЗАЙНЯТОСТ1
В СУЧАСНИХ УМОВАХ
Актуальнiсть проблеми. Трансформащя зайнятос-тi — складний природно-техшко-сощальний процес, феномен сучасно! свггово! культури. Дослiдити його — це визначити явш та глибиннi онтологiчнi сенси трансформаций зайнятостi, и загальну еволюцiю та тенденцiй розвитку. Онтолопя трансформаций зайнятостi в сучас-них умовах з позицш загальнолюдських культурних та духовних цiнностей дуже непроста, бо сучасна людина наполегливо потребуе безпосереднього контакту iз свь товою системою зайнятостi, для чого мае засвогги и ка-тегорiальнi мережi та концепци нацiонального та мiж-народного ринку працi. [1]
Наш час характеризуеться величезними трансфор-мащями стилю життя та його сощальних, полiтичних, економiчних та iн. основ. Вони носять глобальний характер, бо е трансформащями культурних парадигм. Саме зараз виникае ненормований культурний простар i всi цiнностi та сенси культури потребують первiсного вщкриття в новому значеннi.
Аналiз останшх публiкацiй. Не дивлячись на те, що проблемами сощально-трудово! сфери та зайнятост за-ймалися Д. Богиня, О. Гршанова, М. Долiшнiй, Г. Завь новська, С. Злупко, Н. бсшова, Р. Колосова, А. Колот, О. Крушельницька, Г. Мелiк'ян, Г. Осовська, В. Петюх, Л. Петрова, Ю. Привалов, Ю. Саенко, В. Сумцов, I. Тим-ош, С. Украшцев, О. Уманський та ш., розробка онто-гносеологи трансформаций зайнятост носить обмежений характер i потребуе бтьш систематизованого та обГрун-тованого шдходу. Частково це пояснюеться вщсутнютю достатнього наукового iнструментарiю для того, щоб по-внiстю задовольнити штерес онто-гносеологiчного досль дження. А м1ж тим система зайнятостi е одшею з велико! кiлькостi складних систем, яы е сукупнiстю пов'язаних м1ж собою об'ектiв i процесiв. Онто-гносеолопчне дослi-дження складних систем дозволить накопити коштовну iнформацiю про 1х роботу, результати аналiзу яко! мати-муть вирiшальне значення при трансформаций тих, що ю-нують, i побудовi нових складових систем.
Метою статт е визначення онтолопчних пiдстав i гносеолопчних аспектiв трансформаци зайнятостi в сучаснш соцiально-трудовiй сферi. Вiдповiдно в статт сформульовано завдання: дослiдити онто-гносеологiчнi конструкци трансформаци зайнятостi в сучасних умо-вах як основу формування моделi поведiнки людини та суспiльства щодо трансформаци iнституту зайнятостi на сучасному ринку працi. Бо сумнiв в незмшноста проце-сiв в сощально-трудовш сферi сьогоднi, за думкою про-вiдних вчених, мае право на життя. [1; 2]
Основна частина. Онто-гносеолопя трансформаци зайнятостi в сучасних умовах — це точна специфшащя Н наочно! областi як об'екту дослщження. Онто-гно-сеологiя формуе глосарш для уяви та обмiну знаннями щодо ще! наочно! областi та зв'язки термМв в нiй.
Системно-онтолопчний аналiз зводиться до ви-лучення базових понять наочно! областi об'екту до-слiдження, та визначення зв'языв мiж ними у формi вщносин i взаемодiй. Однiею з переваг використання системно-онтолопчного аналiзу як шструменту тзнан-ня е використання системного шдходу в дослiдженнi наочно! област трансформаци зайнятостi в сучасних умовах, що дозволяе досягти систематичностi, однома-нiтностi та науковостi.
Онто-гносеологiя надае цшсного погляду на на-очну область, що забезпечуе систематичнють досль дження. Результати дослiдження представляються в одноманггнш формi, що полегшуе !х сприйняття та вщ-творення. Системно-онтолопчний аналiз дозволяе на науковш основi вiдновити логiчнi зв'язки наочно! об-ластi об'екту дослiдження, яких бракуе, у всш !х повнота.
Аналiз наочно! областi об'екту дослщження е осо-бливим видом науково! дiяльностi, результат яко! — штерпретацшна модель наочних знань (у широкому сенш). В процесi аналiзу з останньо! вилучаються шва-рiантнi та прагматичш моделi, концептуальш складовi яких являють собою онто-гносеологiчнi знання наочно! област об'екту дослiдження.
В подальшому пiд аналiзом розумiеться вид до-слiдження, при якому реальний або гаданий об'ект де-композуеться на складов^ якi дослiджуються разом iз зв'язками мiж ними. Осюльки знання носять особовий характер, одну й ту ж наочну область можна описати рiзними онто-гносеологiями. Особливо це стосуеться наочно! област трансформаци зайнятостi в сучасних умовах, що погано форматзуеться та характеризуеться великою кшьюстю спiрних питань.
Основною ознакою системно-онтологiчного ана-лiзу е подтення реально! системи зайнятостi на класи, визначення сукупностi !х фундаментальних властивос-тей та прогнозування на щй основi поведiнки об'ектiв класу. [3]
Першим кроком системно-онтолопчного анал1зу трансформаци зайнятоста в сучасних умовах е складан-ня глосарiю, який використовуеться при дослщжен-нi характеристик об'ектав i процесiв, що е складовими об'екту дослiдження, а також створення системи точних визначень цих термМв.
Крiм того, документуються основнi лопчш взаемозв'язки мiж вiдповiдними введеним термшам поняттями. В подальшому дослiдженнi вщмшноста мiж поняттями та термiнами швелюються. Результатом ана-
лiзу мае стати онто-гносеолопчна модель трансформаци зайнятоста в сучасних умовах.
Таким чином, онто-гносеолопя включае сукуп-нiсть термшв i правил, за якими термши можуть бути скомбiнованi для формування достовiрних тверджень про стан трансформаци зайнятоста в сучасних умовах.
Щодо методiв дослiдження, то традицiйним методом аналiзу всiляких даних е математична статистика, що застосовуеться для виршення завдань, пов'язаних з анал1зом даних за наявноста випадкових i непередба-чуваних дiй, та дозволяе оцшювати параметри розпо-дiлу; перевiряти статистичнi гiпотези з використанням дисперсшного, кореляцiйного, регресiйного аналiзу, аналiзу часових рядiв (спектрального та кореляцiйного анал1зу, фiльтрацi!); багатомiрного аналiзу (кластерного та факторного анал1зу, аналiзу дискримiнант, методу го-ловних компонент, шкалювання).
Останшм часом активно розвиваються методи ана-лiзу даних, що базуються на шших, нiж традицiйна ште-гро-дифференцшна парадигма, пiдходах, та формалiзо-ваних знаннях про наочну область об'екту дослщження, а саме: методи еволюцшного моделювання та методи машинного навчання.
Термш «еволюцшне моделювання» е вже досить сталим. Загально прийнято пiд ним розумгга: генетичнi алгоритми, штучний нейроннi мереж, але для штучних нейронних мереж аналггачна форма уяви знань недоступна, бо все що вона може — це узагальнити емтрич-ш залежностi, яких Г! навчили, мiж вхiдними чинниками та значеннями результату. Методами еволюцшного моделювання виршуеться широкий клас завдань: класи-фiкацiя образiв, кластеризацiя, апроксимацiя, прогноз, оптимiзацiя, асоцiативна пам'ять, управлiння динамiч-ними об'ектами. Причому нейроннi мереж справля-ються з перерахованими завданнями тим усшшшше, чим гiрше формалiзуеться завдання, бо можуть легко навчатися з врахуванням нових даних. Тобто нейронна мережа може створити модель трансформаци зайнятоста в сучасних умовах i вiдбити символами цей складний процес.
Машинне навчання залишае можливiсть дискусу про те, яю методи маються на уваз^ зокрема, сюди вщ-носяться дерева ршень: мiра дисперси, ентропи та iн. Призначення методiв машинного навчання — одержа-ти проста вирази класифшаци. Причому, в порiвняннi з iншими методами, дерева ршень потребують значно менше часу на виршення завдань; результат представ-ляеться у вигляд^ що легко штерпретуеться; класифь кацiйна модель iнту!тивно зрозумта; на вхiд алгоритму процесу можна подавати будь-яку юльюсть чинниюв, алгоритм сам вибере та, якi найбтьш значущi з них, i лише вони будуть фiгурувати в дереву точнiсть прогнозу порiвнянна з шшими методами класифiкацiГ; алгорит-ми класифшаци передбачають обробку пропущених даних; устшно працюють як з числовими, так й iз змю-товними значеннями; дозволяють витягувати правила на природнш мовi.
Виходячи з рiзноманiття методiв, що використову-ються, системно-онтолопчний анал1з передбачае, що побудова класифшацшно! моделi може бути зведена до проблеми пошуку, але при цьому не розглядаеться, яким саме способом виконуеться пошук. [4]
Але треба мати на уваз^ що системно-онтолопчний анатз практично нiколи не зводиться до единого способу уяви результату. [5]
Завдання, що виконуються системою зайнятосп при Н трансформаци, потребують системно-онтолопч-ного аналiзу, який допомагае систематизувати об'екти та вщносини мiж ними в конкретно! наочно! область Вони мають потребу й в ешстемолопчному аналiзi ви-дiв знань щодо способiв вирiшення проблем сощально-трудово! сфери. Цi знання в сукупносп iз знаннями про те, на якш стада процесу лопчного висновку !х слiд за-стосовувати значш за обсягом. [6]
В системi зайнятостi iснують двi основш категори предметiв сприйняття: самi об'екти, що е складови-ми системи ^зичш та iнтелектуальнi), та зв'язки мiж ними, що характеризують стан системи. Розробка онто-гносеологи як iерархiчноl' структури понять (концептiв) Грунтуеться на структурних властивостях об'ектiв. В термшах онтологи, поняття зв'язку однозначно описуе або е точним дескриптором залежносп мiж об'ектами системи в реальному свт, а термiни е, вщповщно, точ-ними дескрипторами самих реальних об'ектiв, в яких. внутршнш змiст поняття експлiцiюеться завжди.
Системний шдхщ до пiзнання розглядае наочну область трансформаци зайнятостi в сучасних умовах з позицiй закономiрностей системного щлого i взаемоди складових його частин. Системнiсть знань виходить з багаторiвневоl' iерархiчно!' органiзацi! Г! сутносп, тобто всi об'екти, процеси та явища можна розглядати як без-лiч дрiбнiших пiдмножин i, навпаки, будь-яы об'екти можна i необидно розглядати як елементи вищих кла-сiв узагальнень. Знання наочно! обласп трансформаци зайнятостi навiть в сучасних умовах характеризуются вiдносною iнварiантнiстю.
Основними принципами побудови онто-гносеоло-г1! трансформаци зайнятосп в сучасних умовах е:
—	яснють, тобто, термiни та поняття онтоло-г1! повиннi вщбивати реальну дiйснiсть. 1х символьнi позначення (знаки) повинш формуватися на основi загальноприйнятих правил семiотики i виражати за-гальноприйнятi сенси реальних об'екпв. Цi сенси ви-тягуються iз загальноприйнятих визначень термiнiв, зафiксованих в глосарiях наочно! областi об'екту досль дження. Думки, що входять у визначення, формалiзу-ються на основi загальноприйнятого апарату формаль заци у вигляда тотожному дiйсним логiчним аксюмам;
—	обГрунтованiсть, зв'язнiсть, тобто, формування початкового перелiку понять онтологи та !х додавання мае бути обГрунтованим, визначуваним, в першу чергу, вимогами сукупностi завдань дослщження трансформа-цй iнституту зайнятосп на сучасному ринку працi. Ло-гiчнi аксiоми початкового перелiку понять мають бути несуперечливими. Тому мае бути передбаченим меха-шзм логiчного висновку, який перевiряе на несупереч-нють аксiоми, що додаються, та твердження, що виво-дяться в онто-гносеологи;
—	поширюванiсть, за якою ядром онто-гносеологи трансформаци зайнятосп в сучасних умовах е введет поняття та аксюми, що описують !х. В онто-гносеоло-ги мае бути передбачений мехашзм як поширення, так й обмеження глосарив, що спiльно використовуються, без порушення цiлiсностi системи;
—	сптьне використання онто-гносеологiй, що перед-бачае: специфiкацiю онто-гносеологи на рiвнi уяви, щоб запис тако! специфкацй на загальноприйнятiй i платфор-монезалежнш мовi опису онто-гносеологiй можна було передати для використання будь-яюй шшш онтологи;
—	мiнiмальнi онто-гносеологiчнi зобов'язання, за якими дуже важно щоб безлiч понять онто-гносеологи в!дбивала концептуальну структуру наочно! областi транс-формацй зайнятостi в сучасних умовах, вщносно стаб]льну впродовж життевого циклу онто-гносеолопчно'! моделi, а остання надавала можливють поширення або спецiалiзацi! окремих плок онто-гносеологiчно! iерархiчно! структури. Вилучення концептуальних знань iз знань, що виражеш фактами, е стратегiею побудови тако! структури, а точнь ше — онто-гносеолопчно! бази знань.
При побудовi онто-гносеологи трансформаци за-йнятостi в сучасних умовах, в першу чергу, створюеться перелш або база даних дескрипторiв ^ якщо !х перелш достатнiй, за Н допомогою створюеться модель системи. Таким чином, на початковому еташ мають бути вико-наш наступнi завдання: створення та документування глосарш; опис правил та обмежень, зпдно з яким на основi термiнологiг трансформацГ! iнституту зайнятоста на сучасному ринку працi формуються достовiрнi твердження, що описують стан системи; побудова модел^ яка, на основi iснуючих тверджень, дозволяе формувати необхщш додатковi твердження. Бо дослщження системи зайнятостi розглядае величезну юльюсть тверджень, що достовiрно вiдбивають Н уяву в рiзних розрiзах, а побудована системно-онтологiчним способом модель повинна вибирати з них найбтьш корисш для ефектив-ного дослщження в контекстi трансформацГ! шституту зайнятостi на сучасному ринку пращ. Ця модель також допомагае описувати поведшку системи зайнятоста в сучасних умовах. Таким чином, онто-гносеолопя е таким глосарiем, що включае i термiнологiю, i модель по-ведiнки системи зайнятостi.
Парадигма онто-гносеологш, що взаемодiе iз засо-бами i методами системного аналiзу, поклала початок розвитку системно-онтологiчного аналiзу (або тдходу) наочних областей. [5; 6]
Центральною щеею системно-онтологiчного пiд-ходу е розробка онто-гносеологiчних засобiв п^дтримки вирiшення завдання дослiдження полiфункцiонально'г онто-гносеолопчно! системи трансформаци шституту зайнятосп на сучасному ринку пращ. [7]. Концептуальна частина тако! системи описуеться кортежем (1) i представляе онто-гносеологiю наочно! обласп, що складаеться з онто-гносеологiй об'екпв, процесiв та завдань [8; 9].
<Оп; Оп; О>,
(1)
де ОО — онто-гносеологiя сукупностi об'екпв (концеппв) наочно! областi системи зайнятосп, що поглиблюеться у вигляд! iерархiчно'г структури класiв, пiдкласiв та складових клашв; Оп — онто-гносеолопя сукупносп процесiв наочно! областi системи зайнятосп, яка розглядаеться як iерархiчна структура процешв, пiдпроцесiв, д!й та опе-рацiй; ОЗ — онто-гносеолопя сукупносп завдань, що мо-жуть бути поставленi та вирiшенi в наочнш областi системи зайнятосп, та розглядаються як iерархiчна структура завдань, пдзавдань, процедур та операторiв.
2013/№1
71
КРАПШНА Г. О.
На рис.1 представлено системно-онтолопчну модель трансформацп' зайнятост в сучасних умовах, що мютить складовi вiдповiдного проблемного простору та 1х онто-гносеологп. Проблемний простiр — це модель вах складових наочно'1 областi системи зайнятостi, з якими пов'язаш знання, що потрiбнi для виршенш рiз-них завдань в цш наочнiй областi. Проблемний прослр складаеться з двох блокiв: iнварiантноl (вiдносно не-змшно!') частини та безлiчi частин, що трансформують-ся та вщповщають окремим завданням.
Iнварiантна частина проблемного простору трансформацп' зайнятостi в сучасних умовах, з погляду автора, мютить таю типи складових: час, конструкцп часу, годинники, шкали вимiру часу, ощнки об'ектiв житте-вого простору людини та людського мислення, потоки системи зайнятосл, знання та культура людини, знання та культура суспшьства [10]. Щ типи за суттю — поняття, яю добре групуються в онто-гносеологп' об'ектiв i про-цеав трансформацп' зайнятостi в сучасних умовах.
Висновки. В стал! розпочато дослщження онто-гно-сеологп трансформацп' iнституту зайнятост на сучас-ному ринку пращ. Основш висновки та результати досль дження зводяться до наступного:
—	системно-онтолопчний пiдхiд може бути реко-мендований для змiстовного аналiзу та функщонально-го моделювання трансформацп' зайнятост в сучасних умовах;
—	онто-гносеолопчна модель трансформацп' за-йнятостi в сучасних умовах заснована на концепцп «сутнють-зв'язок»;
—	онто-гносеологiчна модель трансформацп за-йнятостi в сучасних умовах розглядае послщовнють виконання та причинно-наслiдковi зв'язки м1ж ситуа-цiями та подiями трансформацп' зайнятостi для структу-рування знань щодо вщповщно!' наочно'1 областi;
—	онто-гносеологiчна модель трансформацп зайнятосл в сучасних умовах призначена для системно-онтологiчного аналiзу вщповщно!' наочно'1 областi, ана-лiзу основних термiнiв i понять, що використовуються для опису об'еклв i процесiв, меж використання, а та-кож зв'язкiв м1ж ними;
Рис. 1. Онто-гносеолог1чна ¡нтерпретацшна модель трансформацй' зайнятостi в сучасних умовах
— онто-гносеолопчна модель трансформацй' за-йнятост в сучасних умовах служить для ефективного дослщження та документування глосарiя термш1в, що використовуються при опис1 характеристик об'еклв i процес1в, якi мають вiдношення до вщповщно'' наочно'' областi; точних та однозначних визначень вс1х термiнiв; класифжацп лопчних зв'язкiв мiж ними.
За обмеженням мюця онто-гносеолог1чн1 модел1 клас1в: процес1в наочно'' област1 трансформацй' зайнятосл в сучасних умовах та завдань, що можуть бути поставлен та вир1шен1 в н1й, а також пщклаав: процес1в, пщпроцеав, дш та операцш першого класу; завдань, тдзавдань, процедур та оператор1в другого класу, а також пщклашв сукупносл об'ект1в: часу, годинник1в та шкал вим1ру часу трансформацй' зайнятост1 в сучасних умовах поглиблено будуть розглянул в подальшому.
Список використаних джерел
1.	Осипов Ю. М. Опыт философии хазяйства (ха-зяйство как феномен культуры и самоорганизующаяся система [текст] / Ю. М. Осипов. — М. : Изд-во Московского университета, 1990. — 382 с.
2.	Колот А. М. Наука про працю i сощально-трудо-в1 вщносини: становлення, начала теоретико-методоло-пчного оновлення [Текст] / А. М. Колот // Формування ринково'' економжи : зб. наук. пр. — Спец. вип. Праця в ХХ1 столггл: новггш тенденцп, сощальний вим1р, шнова-цшний розвиток: у 2 т. — Т. 1. — К.. : КНЕУ, 2012. — 660 с.
3.	Noy N. F. Ontology Development 101: A Guide to Creating Your First Ontology'/ Noy N. F., McGuinness D. L. Stanford Knowledge Systems Laboratory Technical Report KSL-01—05 and Stanford Medical Informatics Technical Report SMI-2001—0880, March 2001. / [Електронний ресурс]: http ://protege. stanford.edu/publications/ontol-ogy_development/ontolo-gy101.html.
4.	Gruber T. R. A translation approach to portable ontology specifications [Текст]: T. R. Gruber. — Knowledge Acquisition, 5 (2), 1993. — pp. 199-220.
5.	Философско-методологические основания системных исследований: Системный анализ и системное моделирование [Текст] : сб. статей, ВНИИ системных исследований. — М. : Наука, 1983. — 324 с.
6.	Згуровский М. З. Системный анализ: проблемы, методология, приложения [Текст] / М. З. Згуровский, Н. Д. Панкратова. — К. : Наукова думка, 2005. — 744 с.
7.	Словарь по искусственному интеллекту [Текст] / А. Н. Аверкин, М. Г. Гаазе-Рапопорт, Д. А. Поспелов. — М. : Радио и связь, 1992. — 256 с.
8.	Добров Б. В. Методы и средства автоматизированного проектирования прикладной онтологии [Текст] / Б. В. Добров, Н. В. Лукашевич, О. А. Невзорова, Б. Е. Федунов : Известия РАН. Теория и системы управления. — М., 2004. — № 2. — C.58-68.
9.	Невзорова О. А. Онтолингвистические системы: методологические основы построения [Текст] / О. А. Невзорова // Научная сессия МИФИ-2007. Сб. науч. трудов. Т. 3. Интеллектуальные системы и технологии. — М., 2007. — С. 84-85.
10.	Методический комплекс по дисциплине «Современные проблемы науки»: Методология анализа предметных знаний [Електронний ресурс]. — Режим доступа: http://old.ulstu.ru./people/SOSNIN/umk/Mod-ern_Scientific_Problems/beloborodov/item_znan.htm.

      
      
=====



﻿ПРОБЛЕМЫ ВЫСШЕЙ ШКОЛЫ
УДК 004.65(075)
1НФОРМАЦ1ЙНА СИСТЕМА «ПРОФКОМ ВНЗ»
Г.К. Кожевшков, доцент, к.т.н., С.М. Трохимчук, асистент, К.В. Безшкова, студент, УкраУнська iнженерно-педагогiчна академiя, Харкчв
Анотаця. Описано ШформацШну систему облту та анал1зу д1ялъност1 профстлкового комтету вищого навчалъного закладу. Наведено резулътати впровадження системи та рекомендацИ' щодо ïï використання.
Ключов1 слова: ШформацШна система, база даних, система управлтня базами даних.
ИНФОРМАЦИОННАЯ СИСТЕМА «ПРОФКОМ ВУЗ» Г.К. Кожевников, доцент, к.т.н., С.Н. Трохимчук, ассистент, Е.В. Безникова, студент, Украинская инженерно-педагогическая академия, Харьков
Аннотация. Описана информационная система учета и анализа деятельности профсоюзного комитета высшего учебного заведения. Приведены результаты внедрения системы и рекомендации по ее исполъзованию.
Ключевые слова: информационная система, база данных, система управления базами данных
INFORMATION SYSTEM «UNIVERSITY TRADE UNION»
G. Kozhevnikov, Associate Professor, Candidate of Technical Sciences, S. Trokhimchuk, Assistant, E. Beznikova, student, Ukrainian Engineering Pedagogical
Academy, Kharkiv
Abstract. The data system of registration and analysis of the trade-union committee activity of higher educational institutions is described. The results of system's implementation and recommendations concerning its application are given.
Key words: information system, database, database management system.
Вступ
1нформацшш системи (1С) у вищих навчальних закладах впроваджуються у декшькох напрямах. З одного боку - це традицшш для навчального закладу завдання, що пов'язаш з навчальним процесом. При цьому таю шформацшш системи використовуються як для облшу шформаци (облш студенев та абiтурieнтiв, облш усшшносп i таке шше), так безпосередньо i в навчальному процесi (системи дистанцшного навчання, автоматизоваш навчальш системи, електронш пошбники i таке шше).
З шшого боку, ВНЗ як звичайна оргашзацшна система потребуе для виршення господарчих завдань впровадження цшо! низки шформацшних систем для облiку фiнансiв, кадрового складу, матерiальних цiнностей тощо.
Також слщ сказати про впровадження шформацшних систем для облшу науково-дослщно! дiяльностi ВНЗ. До цього класу 1С належать системи облшу госпдоговорiв, облiку сумiсникiв, облiку публiкацiй тощо. Для виршення господарчих завдань облшу фiнансiв, кадрового складу, матерiальних цшностей у ВНЗ використовуються стан-дартш рiшення, такi як 1С «Парус», 1С «Бухгалтерiя 1С» i т.п.
Другий тип завдань розв'язуеться з використанням 1С, розроблених в рiзних ВНЗ. Наприклад, АСУ ВНЗ (ХНУ РЕ, СНАУ), система «Студент» (КНУ iM. Тараса Шевченка), робоче мiсце спiвробiтника деканату DOWS (ХНУ iM. В.Н. Каразша), iнформацiйно-аналiтична система IAS University та тдсистема роботи з абiтурieнтами ST-абiтурieнт (ХДУ), система «Абiтурiент» (ЗНУ).
Окремо стоять завдання, що пов'язанi з дiяльнiстю суспiльних органiзацiй у ВНЗ, зокрема системи облшу дiяльностi профспшково! оргашзацп вищого навчального закладу. У данш роботi розглядаеться iнформацiйна система облшу дiяльностi профспшково1 оргашзаци Украшсько! iнженерно-педагоriчноl академп.
У роботi профсшлкового комiтету будь-яко! оргашзаци дуже гостро стоиъ питання облiку членiв профсшлкового комтоту. В першу чергу це пов'язано з великими обсягами шформаци, що обробляеться. Так, наприклад, у типовому ВНЗ IV рiвня акредитацп кiлькiсть членiв профспiлки сягае	5-10	тисяч.
А якщо ще зважити на щорiчнi змiни контингенту студенев, то стае цiлком зрозумшим, що робота з документами займае багато часу i в даному випадку необхiдне впровадження шформацшно1 системи для облшу та аналiзу дiяльностi профспiлкового комiтету ВНЗ.
Аналiз публжацш
Методологiя та технологи розробки шформацшних систем достатньо детально описанi в науковш та навчальнiй лiтературi, наприклад, в [1, 2]. Проте стандарти розробки та засоби проектування шформацшних	систем	постшно
удосконалюються та змшюються. Тому автори при розробщ системи перш за все орiентувались на довiдковi системи та документащю додаткiв, якi було використано при розробщ системи.
Мета та постановка задачi
Значну роль у дiяльностi ВНЗ вщшрають профспiлки. Основними завданнями дiяльностi професiйного союзу ВНЗ е: захист
прав студентiв i сшвробггниюв, органiзацiя культурно-масових заходiв для члешв профспiлки, надання матерiальноl допомоги малозабезпеченим членам профспiлки та iн.
Для виршення цих завдань необхiдно, в першу чергу, здшснювати всебiчний облш членiв профспшково1 оргашзаци. Традицiйно це завдання виршуеться шляхом заповнення паперового облшового документа «Облшова картка члена профстлки». Однак специфiка завдання облшу членiв профспшково1 оргашзаци у вищому навчальному закладi полягае в тому, що у зв'язку iз заюнченням ВНЗ студентами старших курсiв i зарахуванням студентiв на перший курс щорiчно склад членiв профспшково1 оргашзаци ВНЗ оновлюеться приблизно на 20 %, що в абсолютних одиницях складае близько одше1-двох тисяч запишв. Процеси вiдрахування i поновлення студенев також ускладнюють завдання облiку. Природно, що в цих умовах тшьки автоматизацiя вирiшення завдання облiку й аналiзу членiв профспiлки за допомогою комп'ютерних технологiй може забезпечити яюсну i своечасну обробку шформаци.
Перед авторами ще! роботи було поставлено завдання щодо створення шформацшно1 системи, яка автоматизуе процес облшу i аналiзу членiв профспiлки ВНЗ i дасть змогу:
-	автоматизувати введення облшово1 шформаци про членiв профстлки в базу даних;
-	автоматизувати процеси ведення бази даних, що пов'язаш з оновленням, корегуванням та видаленням облшових записiв;
-	автоматизувати процес створення рiзноманiтних вихiдних докумеипв за наданими запитами;
-	автоматизувати процес облшу й аналiзу членiв профспiлки ВНЗ та результат !х дiяльностi в щлому.
Реалiзацiя задачi
У процес розробки системи було вирiшено таю завдання:
-	визначення перелшу вхщних та вихвдних документiв, необхiдних для функщонування системи;
-	вибiр середовища та побудова бази даних 1С «Профком ВНЗ»;
-	розробка шформацшно1 системи, яка автоматизуе введення, накопичення та редагування даних про сшвроб^ниюв та студентiв ВНЗ, а також видачу необхщно1 шформаци за запитами користувача;
-	наповнення бази даних 1С «Профком ВНЗ» шформащею про членiв профспiлки ВНЗ;
-	розробка запипв та звтв за заданими критерiями;
-	отримання наочно! шформаци про склад та дiяльнiсть профспiлки ВНЗ, наприклад, рiзноманiтних дiаграм.
Склад профспшково1 оргашзацп ВНЗ подшяеться на комюи (культурно-масову, спортивно-масову, оргашзацшно-масову, охорони працi, житлово-побутову тощо), бухгалтерiю та пiдроздiли, яю, у свою чергу, можуть под^тися на факультетсью профбюро. Перелiк комiсiй вщображае основнi завдання, що вирiшуe профспшковий комiтет ВНЗ.
Всi завдання, яю розв'язуються у профспiлковому комiтетi, можна роздшити на	двi
групи:
-	завдання, пов'язаш iз бухгалтерською дiяльнiстю профспiлки;
-	завдання, пов'язанi з шформацшним забезпеченням роботи профкому.
У зв'язку з тим, що сплата членських внесюв здшснюеться в бухгалтерп ВНЗ, перший тип задач розв'язусться з використанням стандартних рiшень, таких як 1С «Бухгалтерiя 1С» i т.п.
Для розв'язання другого типу завдань розробляеться 1С «Профком ВНЗ». Ця система використовуе таю вхщш документи:
-	облшова картка члена профспiлки;
-	протоколи засiдань профкому ВНЗ;
-	даш про пiльги членiв профспiлки;
-	даш про дгтей спiвробiтникiв та ш.
Вихiднi документи системи формуються за запитами. Основними запитами, на базi яких формуються звiти, е:
-	аналiз членiв профспiлки по шдроздшах, факультетах, кафедрах, групах;
-	облiк матерiальноl допомоги членам профспшки;
-	облiк пшьг членiв профспiлки;
- облiк заходiв, органiзованих профспiлковим комитетом, та члешв профспiлки, яю взяли участь у цих заходах.
Пюля ретельного вивчення завдань, як необидно вирiшити шд час розробки 1С «Профком ВНЗ», було зроблено аналiз програмних середовищ, за допомогою яких можна було б рeалiзувати систему. Одним iз вирiшальних критерпв при виборi програмного середовища був критeрiй простоти реалзаци програмного продукту та простоти його використання в умовах промислово! експлуатаци. З урахуванням цього критeрiю було обрано на MS Access [3, 4]. З одного боку, це дае змогу без зайвих затрат розробити розгалужену базу даних для збору та накопичення необхвдних даних про члешв профспшки ВНЗ, а з шшого боку, за необхвдносп розробляти стандартш та винятковi запити на замову кeрiвництва профспшки ВНЗ та вищих оргашв управлiння профспiлками.
MS Access е одшею з найбшьш популярних систем управлiння базами даних (СУБД). MS Access тдтримуе рiзнi формати даних, у тому чи^ XML, OLE, ODBC i формат служб Microsoft Windows® Sharepoint™ Services [4]. Можна пов'язати таблищ так, щоб одночасно дiставати доступ до даних з рiзних баз, працюючи з формами, звiтами i сторшками доступу до даних в MS Access. Крiм того, можна пов'язувати таблищ з шших баз даних Access, електронних таблиць Microsoft Excel, джерел даних ODBC баз даних Microsoft SQL Server™ та шших джерел [4]. О^м цього, Access дозволяе використовувати електронш таблищ i таблищ з шших настшьних i серверних баз даних для збертання шформаци необидного додатка.
На рис. 1 наведено схему бази даних, що розроблена i використовуеться у 1С «Профком ВНЗ».
Рис. 1. Схема бази даних 1С «Профком ВНЗ» Загалом база ДаНИХ 1С «ПрОфКОМ ВНЗ» мiстить 16 таблиць. Така кiлькiсть таблиць зумовлена тим, що в однiй б^ даних зберiгаeться рiзнопланова iнформацiя про студенпв та спiвробiтникiв ВНЗ. Тому в б^ даних окремо юнуе таблиця «Студенти» та таблиця «Список сшвроб^ниюв», а також допомiжнi таблищ з реляцiйними вiдношеннями «один до багатьох».
Наприклад, таблиця «Список сшвроб^ниюв» включае 13 полiв i призначена для зберпання шформаци згiдно з облшовою карткою члена профспiлки: Код запису, П1Б спiвробiтника, стать сшвроб^ника, скорочена назва кафедри, скорочена назва факультету, номер профквитка, посада, код тльги, код матерiальноl допомоги, код факультету, код кафедри, а також додаткову шформащю про сшвроб^ника.
На сьогодш база даних заповнена в повному обсязь Кiлькiсть записiв сшвробггниюв у базi складае бiльше тисяч^ кiлькiсть записiв студентiв - близько трьох тисяч.
Для ведення бази даних розроблено форми, яю дозволяють вводити, видаляти та корегувати змют записiв таблиць. Для отримання необхщно! шформаци розроблено рiзнома-нiтнi форми та зв^и (загалом бiльше 30 одиниць).
1нтерфейс користувача органiзований у виглядi кнопкових форм. Така форма оргашзаци дiалогу е зручною та зрозумшою для користувача. Система функцiонуе у двох режимах: сшвробггники i студенти. Як було зазначено вище, це пов'язано з тим, що в базi даних 1С мютиться рiзнорiдна iнформацiя про контингент спiвробiтникiв i студентiв. Використовуючи кнопковi форми, у кожшм з режимiв функцiонування користувач мае можливють переглянути всi об'екти системи, а також, за наявносп визначених прав доступу до системи, внести необхiднi змiни в базу даних 1С.
Розроблена 1С «Профком ВНЗ» впроваджена в експлуатащю у профкомi Укра1нсько1 iнженерно-педагогiчноl академи у 2009 рощ i активно використовуеться для введення, редагування, зберiгання та видачi за запитами шформаци про члешв профспiлки. Розробленi форми дають можливiсть
чабигат^Р
функци, як введення ново! шформаци в базу i видалення непо^бно1, змiна вже юнуючих даних, пошук потрiбних сшвроб^ниюв та студентiв. Форми зручно використовувати для наочного перегляду даних вибраного сшвроб^ника або студента.
База даних дае можливють автоматизувати процеси пошуку шформаци про того чи шшого спiвробiтника або студента, формувати зв^и та запити вiдповiдно до заданих критерив, змiнювати записи бази, вносити нову шформащю та ш
1з системою працюють працiвники профспшково1 оргашзаци ВНЗ, саме вони виконують всю роботу iз накопичування, змiни, збереження даних i пiдготовки необхвдних вихщних документiв стосовно спiвробiтникiв та студенпв навчального закладу.
Висновки
Впровадження системи дало змогу значною мiрою скоротити трудомюткють робiт, що пов'язанi з обробкою та пошуком шформаци в базi даних, та пiдвищити ефективнiсть роботи профспшкового комiтету академи. Експлуатацiя системи шдтвердила ефективнiсть рiшень, що були закладеш на етапах И проектування та розробки.
Л^ература
4. Мгагеой Access 2007. Шаг за шагом. -М. : ЭКОМ, 2007. - 352 с.
1.	Карпова Т.С. Базы данных: модели, разра-
ботка, реализация / Т.С. Карпова. -СПб. : Питер, 2001. - 304 с.
2.	Избачков Ю.С. Информационные систе-
мы : учебник для вузов / Ю.С. Избачков, В.Н. Петров. - 2-е изд. - СПб. : Питер, 2008. - 656 с.
3.	Константан Л. Разработка программного
обеспечения / Л. Константан, Л. Локвуд. - СПб. : Питер, 2004. - 368 с.
Рецензент: О.В. Бажинов, професор, д.т.н. ХНАДУ.
Стаття надшшла до редакцп 19 кв^ня 2010 р.

=====

        


﻿УДК 681.3.06 О.Л. ЛЯХОВ
ДЕЯК1 СУЧАСН1 ПРОБЛЕМИ ЗАСТОСУВАННЯ ЧИСЕЛЬНО-АНАЛ1ТИЧНИХ МЕТОД1В
1.	Вступ
Аналiтичним методам властивий цтий ряд переваг у математичному моделюванн наукових та прикладних задач, але Тх застосування вимагае значних трудових витрат, широких знань, розвинутого штелекту для аналь зу формульних виразiв, вибору шляхiв та здiйснення розв'язування.
Джерело переваг та недолшв едине - мова формульних виразiв незрiвнянно багатша та складнiша за мову чисел. Якщо процес розв'язування задачi можна описати у термiнах стандартних титв даних вхiдноТ мови системи комп'ютерноТ алгебри (СКА), то вона розв'язуеться автоматично. У протилежному випадку автоматич-ний процес вимушено зупиняеться i необхщне втручання людини. Для характеристики такоТ ситуацiТ при вико-ристаннi чисельно-аналiтичних методiв (ЧАМ), на наш погляд, доцтьно ввести термш «вiдносна алгоритмiчна проблема». Згiдно з уточненням поняття алгоритму, сформульованому академтом В.М. Глушковим [1], алго-ритмiчна проблема мiстить два нюанси: юнування алгоритму для розв'язування задачi 4ÍmKO окресленими за-собами (курсив наш). Останне й визначае адекватнють введеного термшу ситуацп.
Тому важливим аспектом автоматизацп ЧАМ завжди було i е питання про достатню повноту властиво-стей вхiдноТ мови та про способи представлення задачi i процесу ТТ розв'язування у виглядi даних для СКА.
Пов'язана з цим дiяльнiсть суб'екта - людини або комп'ютера пiдпадае пiд значення термшу "штелект" у тому прагматичному розумшш, яке надавалося йому з самого початку у словосполученнях "artificial intelligence" та "amplifier intelligence" [2]. Розроблення необхщних засобiв та автоматизацп такоТ дiяльностi у чисельно-аналiтичному розв'язуванн природно назвати iнтелектуалiзацieю, а функцп, що виконуються на всiх етапах розв'язування задачi i пов'язанi iз представленням даних та процесу розв'язування, - штелектуальни-ми.
Отже, тут iнтелектуалiзацiя розглядаеться як складова загальноТ проблеми автоматизацп чисельно-аналiтичного розв'язування складних для людини задач мовами СКА з метою пщвищення продуктивност шже-нерних та науково-дослiдних робiт.
2.	Основы етапи розвитку СКА як 3aco6iB автоматизацп ЧАМ
lсторiя виникнення й розвитку спроможностей СКА докладно висвтена у працях [4 -10]. У данш робот увага сконцентрована на основних етапах якюноТ змши властивостей СКА для пщвищення продуктивност чисельно-аналiтичного розв'язування при зростанн складностi задач внаслiдок природного розвитку науки та шженерп.
З появою обчислювальноТ технiки суб'екти розв'язування задач утворюють систему "людина + комп'ютер" [11]. Аналiз СКА, проведений з таких позицш, показав, що на кожному з цих етатв продуктивному розв'язуванню задач вщповщае певний розподт функцiй мiж компонентами системи "людина-комп'ютер", зу-мовлений рiвнем розвитку спроможностей обчислювальноТ техшки, властивостями вхiдних мов й вартютю працi. КритерiТ оцшки продуктивного застосування ЧАМ е вщображенням такого розподiлу.
2.1. Принципова можливють створення технiчних засобiв для виконання подiбноТ iнтелектуальноТ роботи цiкавила математиюв ще до появи електронноТ обчислювальноТ техшки. Спроби конструктивного доведення юнування розв'язку таких проблем пов'язаш з iм'ям Андре Марi Ампера, Ади Лавлейс, Алана Тьюршга та шших
[12], але пом^них результат у той перюд отримано не було. До появи електронно-обчислювальноТ технiки аналiтичне розв'язування задач здшснювалося людиною "вручну".
2.2.	З появою комп'ютерiв у п'ятидесят роки спочатку розроблялися програми для розв'язування окремих стандартних задач [13-16]. Представлення даних здшснювалося машинною мовою i розроблялося для кожноТ задачi окремо. Поява алгоритмiчних мов високого рiвня дала змогу перейти до створення бтьш загальних ал-горитмiв та програм, а потiм i систем програмування.
Висока вiдносна вартють працi та невеликi можливостi ЕОМ того перюду, якi були розташован у нау-кових центрах iз цiлком окресленою тематикою дослiджень, сприяли появi спецiалiзованих СКА для автомати-зацiТ роботи з окремими класами виразiв (полiноми, елементарнi функцiТ, функцюнальш ряди тощо). На цьому етат розвитку СКА функцiТ, пов'язанi з штелектуальною дiяльнiстю: на формування математичноТ моделi, роз-роблення представлення даних, програмування, введення початкових даних тощо виконувалися людиною. Це вимагало значних трудових витрат фахiвцiв високоТ квалiфiкацiТ, але у наслщок однорiдностi тематики час, що витрачався, був невеликим вщносно загального часу експлуатацiТ програм. Тому пщготовчий етап не складав суттевоТ частини загального процесу розв'язування, i продуктивнiсть застосування ЧАМ характеризувалася вщношенням [4]
т Обч
ч=<<1,	(1)
Тлюд
де тКОМ i Т(°ЮЮбдЧ - час, витрачений вiдповiдно при виконанн скомпiльованоТ програми та людиною безпосере-дньо на символьнi й числовi обчислення при розв'язуваннi задачi одного класу.
2.3.	Подальший рiвень розвитку обчислювальноТ технiки, поширення област запровадження та спектру ЧАМ привели до створення ушверсальних СКА. Як наслщок напрацьованого досвщу i лопки розвитку на попере-дньому етат розроблення вхщних мов здiйснювалося на основi парадигми "стандартний тип". Розв'язування задач за допомогою бтьшост з них полягало у поданн даних та алгоритмiв у термiнах типових структур i фун-кцiй вхщноТ мови, компiляцiТ й автоматичного виконання програми. Це забезпечувало швидкють обчислень, але робило програму недосяжною для користувача пщ час виконання. З ускладненням задач процес розв'язування вимушено ставав частково-автоматичним - при збтьшенш обсягу та складностi даних Тх аналiз та вибiр подальших шляхiв перетворень передавався людинi. З цього приводу ще у 70-тi роки було зауважено [17], що переачними користувачами при практичному використаннi значно бтьш продуктивною визнаеться вщносно невелика решта СКА, загальною властивютю вхщних мов яких була спроможнють до штерактивного режиму виконання програми, не дивлячись на сут^ втрати часу при обчисленнях за рахунок штерпретацп програми. Найпершими серед подiбних СКА були обчислювальн комплекси та системи з вхщними мовами сiм'Т АНАЛ1ТИК, робота над якими розпочата у середиш 60-х рокiв пiд керiвництвом академiка В.М.Глушкова i ве-деться дониш [18].
2.4.	На основi дослiдження й аналiзу результатiв розроблення i запровадження подiбних вiтчизняних й зако-рдонних систем та мов, а також досвщу Тх застосування [9], було встановлено, що в умовах збтьшення склад-носл задач i методiв однiею з основних причин високоТ продуктивносл систем з означеною властивютю е ав-томатизоване виконання у дiалозi людиною штелектуальних функцiй на всiх етапах розв'язування. 1з зростан-
ням складностi об'еклв, з одного боку, й швидкодп ЕОМ, з iншого, Т^ОМ стае вщносно невеликою складовою часу, який фактично витрачаеться, i критерiй (1) не давав правильного уявлення про продуктивнють. Цей ви-сновок був лопчним узагальненням результатiв аналiзу проблем, пов'язаних iз налагодженням програм, що
реалiзують ЧАМ. Ц проблеми, на наш погляд, були першим чутливим проявом вищезгаданоТ вщносноТ алгори-TMi4H0i проблеми, осктьки об'екти, що створювалися не налагодженими програмами, звичайно, не були типо-вими для СКА. Коефiцieнт, що характеризуе продуктивнiсть автоматизованих систем вщносно автоматичних, при розв'язуваннi таких задач визначаеться вже iншим, шж (1), спiввiдношенням:
T Обч T iHm + T Обч „ _ dian _ dian авт << j	(2)
T Обч T iHm + T Обч 1	1 люд Тком
гт^Обч	~	г	■	•■■	rriiHm ■ rriiHm
де Тавт - час, витрачений на обчислення при штерпретацп програми; T^.^ i T^^- час, витрачений на дiа-
логове оброблення даних та виконання вщповщного етапу людиною "вручну". З удосконаленням штерфейсу дiалоговий режим виявлявся продуктивншим, бо звiльняв людину вiд рутинноТ працi та пiдсилював ТТ штелек-
туальнi якостi (TdHm << T^d). Вiн дозволив створити числены автоматизован системи, ефективнi у самих
рiзноманiтних галузях науки та техшки.
Отже, на цьому етат продуктивнiсть працi була збiльшена шляхом перерозподту iнтелектуальних функцiй мiж компонентами системи "людина-комп'ютер". Досконалi iнтерактивнi системи пщсилили штелектуа-льнi якостi людини, зокрема, при налагодженнi програм, що дало змогу продуктивно (2) розв'язати задачi бть-шоТ складностi. У дiалозi успiшно розв'язуеться широке коло задач. Це робить дiалоговий режим на даний час одним iз основних способiв математичного моделювання у науковш та iнженернiй практицi.
Аналiз стану розвитку провiдних СКА у 1980-2002 роки [4-6, 19] свщчить, що цей напрям зараз е загаль-ним. Сучасний рiвень розвитку ушверсальних СКА визначають системи MATHEMATICA, MAPLE V, AXIOM i втизняш АНАЛ1ТИК-93 та АНАЛ1ТИК-2000. З Тх появою почалося систематичне застосування обчислювальноТ технiки для чисельно-аналiтичного розв'язування задач за такою поширеною схемою:
1.	Ушверсальнють СКА забезпечуеться рiзноманiтнiстю титв даних (числа, вектори, матрицi, таблица строки, масиви, списки, полiноми, функцп, групи, диференцiальнi рiвняння тощо), визначених на рiвнi реалiза-цп, та потужнютю бiблiотек математичних i графiчних функцiй, визначених на цих типах.
2.	Автоматичний режим. Людина на пщготовчому етат представляе задачу та процес розв'язування у термшах стандартних титв даних та процедур математичних бiблiотек. При цьому основними е функцюналь-ний та процедурний стилi програмування. Оцшкою продуктивностi такого використання СКА е стввщношення (1). Якщо представлення всього процесу розв'язування викликае труднощi, розв'язування переводиться у ш-терактивний режим.
3.	1нтерактивний режим. У цьому режимi людина та комп'ютер утворюють едину систему, в якш обчис-лювальнi функцiТ виконуе комп'ютер, а функцп, пов'язан iз представленням даних - людина. Оцшкою продук-тивностi такого використання СКА е стввщношення (2).
2.5. На сучасному етап стрiмкий розвиток можливостей та поширення комп'ютерноТ технiки, рют комп'ютерноТ грамотностi i математичноТ пщготовки користувачiв е стимулом для переходу до розв'язування задач з новим рiвнем складностг Як показують дослщження та досвiд, такий перехiд пов'язаний з багатьма труднощами. Ви-ршення цих питань неможливе без усвщомлення вмiсту поняття "складна задача" комп'ютерноТ алгебри.
3. Склад Hi задач; комп'ютерноТ алгебри
Поняття складност е феноменолопчним та вiдносним i звичайно пов'язусться i3 загальними фiзичними та ш-телектуальними витратами на розв'язування [11, 20 -24].
Нове для комп'ютерноТ алгебри поняття «складноТ задачЬ можна ввести як характеристику сучасного фактора, що знижуе продуктивнють застосування комп'ютерноТ алгебри у науково-дослщницьких та шженерних
3400
2600 2400 2200
роботах i зумовлюе актуальнють теми цих дослщжень.
3.1. Дослiдження показали [4, 19], що прагнення пiдтримати повсюдне використання i розширення областi застосування ав-томатичних методiв комп'ютерноТ алгебри переважно виршу-еться на основi парадигми "стандартний тип" шляхом безупин-ноТ розробки все нових i нових проблемно орiентованих станда-ртних титв даних та процедур. Це веде до швидкого (фактично експоненцiального!) зростання обсягу функцiонального напов-нення СКА (рис. 1) i тiльки частково виршуе вiдносну алгоритмь чну проблему. Внаслщок природного розвитку науки та шженерп кiлькiсть стандартних типiв та процедур СКА мусить безперерв-но зростати i далi, хоча потужнють бiблiотек вже набувае крити-чних розмiрiв (рис. 1). Вiдчуття такоТ проблеми, у виглядi ствер-дження про неадекватнють вхiдних мов СКА мовi математики, що використовуеться при прикладному моделюванш, мiститься у працях провщних фахiвцiв з комп'ютерноТ алгебри [4], почи-наючи iз 90-х роюв.
Отже, характерною особливiстю сучасного застосування ЧАМ е швидке зростання представницьких клаав задач, що мютять "вiдносну алгоритмiчну проблему". При цьому проблематичним е не юнування алгоритму, а можливють продуктивного представлення розв'язування задачi чiтко окресленими засобами, тобто вхщ-ною мовою даноТ СКА. Ця проблема е наслщком неповноти бiблiотек стандартних засобiв, не дивлячись на Тх величезнi обсяги (рис.1) i причиною вимушеного переведення чисельно-аналiтичного розв'язування у дiалого-вий режим.
2000
1988
1993
1998
Maple V
Рис. 1. Темпи зростання ктькосл стандартних функцш
3.2. Найрiзноманiтнiшим за своею тематикою галузям фундаментально!' та прикладноТ науки [19, 25 -28] притаманне майже експонен^альне зростання аналога функцп емнюноТ (довжина виразу) складносл даних (початкових, промiжних та кшцевих) при лiнiйнiй змiнi параметра т, що характеризуе ускладнення математич-ноТ моделi задачi (кiлькiсть члешв ряду, кiлькiсть пiдстановок, кiлькiсть терацш ЧАМ тощо). Сучаснi потужнi комп'ютери дають змогу обробляти величезнi шформацшш об'екти. Але при наявностi вщносноТ алгоритмiчноТ
проблеми оброблення та-
Л1
1
0,8 0,6 0,4 0,2 0
1 2 3 4 5
m
100
1000 10000 L
Рис. 2. Спадання продуктивносл дiалогового розв'язування задачi при розрахун-ках НДС згину композитного бруса: а) сигнальна часу; б) вщносна продуктивнють дiалогового й автоматичного режимiв
ких o6'eKTiB перекладаеть-ся на людину.
1нженерними психологами показано [29, 30], що швид-кють оброблення iнформа-цГ| людиною е сталою тiль-ки при невеликш довжинi коду:
Vлюд ~ const . (3)
Якщо взяти цей результат (3) за верхню межу змши швидкосл виконання iнте-лектуальних функцiй при ускладненнi задачi (спа-
дання швидкосл оброблення i3 складнiстю задачi буде тiльки покращувати якiсть отриманих тут та далi ре-зульталв), то час оброблення пропорцiйний довжин формульного виразу i зростае вщповщно. Експерименти з задачами пiдтверджують характер феТ залежностi. На рис. 2а у логарифмiчному масштабi показаний аналог
Об
сигнальноТ часовоТ складностi T для одшеТ i тiеТ ж задачi теорiТ опору композитних матерiалiв [26, 27], що була розв'язана автоматичною програмою та у дiалозi. На рис. 2 кривi 1a та 1b - загальний час розв'язування: а - в режимi дiалогу; b - автоматичною програмою. Крива 2 - "чистий" час процесора", витрачений на виконан-ня автоматичних перетворень. Кривi на рис. 2а тюструють ще одну особливють застосування ЧАМ: час розв'язування зростае в бтьшому ступенi за рахунок витрат на виконання штелектуальних функцш. Для най-складнiшого варiанту задачу примiром, «чистий час» перетворень (крива 2) складае ~ 33% i 3.4% вiд загально-го часу розв'язування, вщповщно, в iнтерактивному (крива 1a) й автоматичному (крива 1b) режимах. Порiвнян-ня часовоТ продуктивносл за критерiем (2) представленi на рис. 2б. Результати свiдчать, що продуктивнють (часова - V та варлсна - А) iнтерактивного режиму вщносно автоматичного падае при ускладненн задачi. Таким чином, з одного боку, наведет фактори свщчать про пiдвищення у даний час ролi автоматичного режиму. З шшого боку, внаслiдок iснування "вiдносноТ алгоритмiчноТ проблеми", розв'язування задач часто треба пере-водити у дiалоговий режим для виконання штелектуальних функцш людиною.
Наявнють описаних факторiв не е ознакою, що властива окремим областям науки. Загальною тенден-цiею сучасноТ науки та iнженерiТ е математиза^я й ускладнення математичних моделей проблем, що досль джуються. Цi фактори е причиною додаткових фiзичних, матерiальних та iнтелектуальних витрат при розв'язуванш, i це дае змогу характеризувати Тх вiдповiдно до загального поняття складностi (див. вище) як фактори складносл.
Чисельно-аналiтичне розв'язування задач з подiбним феноменологiчним проявом складностi близьке за своТми якiсними та числовими характеристиками до алгоритмiв розв'язування класу задач дискретноТ математики, котр^ звичайно, називають складними (або важкими). Таким чином, правомiрнiсть введеноТ назви "складна задача комп'ютерноТ алгебри" фунтуеться й на спiльностi ознак - юнування певноТ алгоритмiчноТ проблеми та схожють сигнальних характеристик (рис. 2, та [19]). Сама назва характеризуе класи задач, пщви-щення продуктивносл розв'язування яких потребуе iнтелектуалiзацiТ.
Отже, пiдвищення продуктивностi на сучасному етат розвитку СКА вимагае нового перерозподту фу-нкцiй, при якому частина iнтелектуальних функцiй виконуеться СКА автоматично, а частина, звичайно пов'язана iз програмуванням та налагодженням програм, штерактивно. Такий розподт функцiй вимагае шших, нiж (1)-(2), критерiТв, котрi ураховують юнуюче спiввiдношення мiж характеристиками системи "людина-комп'ютер" та розподiл функцш при оцшц вiдносноТ продуктивностi штерактивного та автоматичних режимiв працi.
4. Дослщження можливостi пiдвищення шляхом штелектуалiзацм продуктивностi чисельно-аналiтичного розв'язування
Структура процесу розв'язування складна, i його продуктивнють зумовлена багатьма факторами [9, 11, 24]. Можливють пщвищення продуктивносл процесу розв'язування складних задач повинна, на наш погляд, вилка-ти iз сучасних спроможностей суб'ек^в розв'язування забезпечити бтьшу продуктивнiсть автоматичних програм, шж дiалогових.
4.1. Критерш продуктивностi. На рис. 2 показано, що за критерiем (2) бтьш продуктивною, нiж дiалогова, е автоматична програма. Але цей критерш ураховуе час, витрачений на виконання штелектуальних функцш тть-ки безпосередньо у сеана iз СКА при одному прогош програми. Практика показуе, що на розробку автоматичних програм, як правило, потрiбно ютотно бтьше часу, шж на дiалоговi. Дiалоговi програми простiшi, однак
розв'язування в дiалозi передбачае вiзуальну обробку промлжних даних, iнтерактивне введення команд, що потребуе додаткового часу. 1стотним для оцiнки продуктивностi роботи е i те, що збiльшення складност задач i методiв вимагае особистоТ участi в сеансi з дiалоговою системою фахiвцiв високоТ квапiфiкацií, як правило, авторiв задач. Це також веде до додаткових витрат Тх працк
На продуктивнiсть роботи впливають i iншi фактори. Це труднощ^ пов'язанi з природними обмеження-ми швидкост обробки iнформацiТ людиною, в той час, копи прогрес обчислювальноТ техшки, за рахунок зрос-тання тактовоТ частоти та пам'ятi ОЗУ, зумовлюе неперервне збiпьшення цiеТ швидкост в другого суб'екта -комп'ютера. З iншого боку, швидкiсть обробки шформацп програмою залежить вiд якост апгоритмiв, Тх реаль зацiТ та складност задачi.
При порiвняпьних оцшках продуктивностi пропонуеться ураховувати загапьнi часовi витрати на всiх етапах розв'язування задачi [9, 24] з урахуванням питомоТ вартостi одиницi працi кожного суб'екта. Це вщповь дае i об'ективнiй, i суб'ективнiй природi складности а також е доцiпьним з огляду на рiзнорiднiсть природи су-б'ектiв розв'язування задачi, людини i комп'ютера. За критерiй продуктивностi П береться величина, обернена до загальноТ вартост Р розв'язуванням масовоТ задачи
П .
Р
(4)
Параметрами ^еТ вартостi е швидкють обробки iнформацiТ V , питома вартють працi р суб'екта, ктькють N прогонiв програми за ТТ "життя" та часовi витрати Т. Вщносну швидкiсть розв'язування задачi людиною та комп'ютером характеризуемо величиною
Р'
Vлюдина
Vn
(5)
1975 1980 1985 1990 1995 2000
1
2 3
4 5
т
програма
Вважаемо, що у (5) мае мюце (3), а при збтьшенш складност задачi швидкiсть ТТ розв'язування програмою зменшуеться. Тодi зростанню скпадностi задачi вiдповiдае зрос-тання параметра Р у (5). На рис. 3а показано практично екс-
Рис. 3. Темпи розвитку основних параметрiв системи "людина-комп'ютер": понен^альне зростання в останнi
а)	швидщфя та розмiри ОЗУ;	десятирiччя основних параметрiв
б)	спiввiдношення вартостi години прац	комп'ютерiв [31-33], що зумовлюють швидщфю при розв'язуваннi задач. Рис. 3а - зростання тактовоТ частоти V та об'ему оперативное пам'ят А за останн двадцять ам рокiв. Значення параметрiв вiднесенi (безрозмiрна величина к) до вщповщних значень у 1975 роцi. Залежност показанi у погарифмiчному масштабi. Таким чином, не беручи до уваги на цьому кроц анапiзу якють реапiзацiТ апгоритмiв оброблення iнформацiТ, можна стверджувати, що сьогоденною тенден^ею змши вiдносноТ швидкостi оброблення iнформацiТ людини та програми е спадання параметра (5) при фтсова-нш складност задачi. Але його значення, що забезпечуе виконання умови необхщност iнтепектуапiзацiТ, потребуе доспiдження.
На рис. 3б, де т = 1 (оператор), 2 (м.н.с), 3 (с.н.с), 4-5 (комп'ютер) у логарифмiчному масштабi показана вщносна вартiсть години прац людини та комп'ютера на попередньому етат розвитку СКА (крива V, 80-т роки) та на сучасному (крива А, 2000-н роки). На даний час питома вартють прац комп'ютера вже суттево ме-нша вартостi висококвапiфiкованоТ працi. Далi приймаемо, що
0 <а = Рком /Рлюд < 1.	(6)
Параметр а не залежить вщ складносл задачi.
Для дiалоговоí програми загальну вартють оцiнимо спiввiдношенням
р _ ртт + рОбч _ Nг( р + р )т ^т + р т Обч ]
рдiал _ рлюд + равт _ " Ирлюд + Рком )т дiал Р ком1 ком ] ,	(7)
де пояснення потребують тiльки скорочення: дiал - дiалог, iнт - штелектуальш функцií, ком - програма, люд -
людина, авт - автоматичний режим, Обч - автоматичн перетворення.
За умови iнтелектуалiзацií вартiсть автоматично! програми оцiнимо спiввiдношенням
р _ ртт + ртт + рОбч _ ( р + р чтпрог + р N(т^т + тОбч ч
равт _ рлюд + равт + равт _ (рлюд + рком )т	+ рком(т авт + т ком ч .	(8)
У (7) - (8) та далi прог - витрати прац людини на програмування. Для дiалоговоí програми цим параметром нехтуемо. При цьому вщносна продуктивнiсть iнтерактивного режиму збтьшуеться, що тiльки пiдсилюe адек-ватнiсть отриманих далi результатiв.
Продуктивнють автоматично' програми вiдносно дiалоговоí описуеться стввщношенням:
Еж^ +Л1,	(9)
П авт	рдiал
е (1 + а)у 1+ Ру де^о _--та Г|1 _а-!- - характеризуют^ вiдповiдно, додатковi витрати на програмуван-
N у+а + ау	у+а + уа
ня aвтомaтичноí програми й витрати на виконання програми; 0<у_т^ОЛ/тком - характеристика склад-
ностi зaдaчi; е _ тПрог/тдНОЛ - вiдноснa продуктивнiсть програмування. Оскiльки зaдaчi склады, то тдНОЛ ^ 0.
Виходячи iз об'ективноí природи зaдaчi параметр у вважаемо, як i а, незалежним у (9). Мае мюце
е _ е(у) та р_р(у),	(10)
де е характеризуе спроможнють мови до представлення даних, р - якiсть реaлiзaцií цiеí мови метамовою, влас-тивосл носiя СКА, комп'ютера та складнють зaдaчi. Мае мiсце
Твердження: Для пщвищення продуктивностi розв'язування шляхом iнтелектуaлiзaцií необхiдно i достатньо, щоб
т прог
< т1лнт,	(11)
mN дгал	х '
, ар
де т_ 1 -- ^
1 + а Доведення:
Необхiднiсть. Нехай, завдяки iнтелектуaлiзaцií, автоматичний режим продуктивнiший, тобто мае мюце
nдiал „ _ равт
+ ГЦ < 1.	(9')
Тодi, з урахуванням (9), отримуемо
або
П авт	рд
е (1+а)у 1+Ру ^ - + а-——< 1
N у+а + ау у+а + уа
е<|1-т+-р \М.	(11')
Враховуючи (9), приходимо до необхiдноí умови у виглядi (11). Достатнiсть. Для (9) маемо
е (1 + а)у 1+ Ву
^ =--1-— + а-
N у+а + ау у+а + уа Нехай iнтепектуапiзацiя забезпечуе виконання критерiю (10) або, що те ж саме, (10'). Тодi маемо
--Р1N	о
{ 1 + а ) (1 + а)у 1+Ру
----1-— + а-——.
N у+а + ау у+а + уа
Пiспя перетворень приходимо до
^ < 1. ■
4.2. Дослщження критер^ (11)
1.	1нтерфейс користувача СКА, що пiдсипюе штелектуальш якостi людини у режимi дiалогу, досяг до-сить високого рiвня i у даний час яксно не змiнюеться [19]. Тодi, зпдно з (5), Vлюд у (11) можна вважати ста-
лою i параметр ц буде залежати ттьки вiд а,Vком , а Т^НТ буде неявною мiрою складност задачi.
2.	Легко бачити, чим менша лiва частина нерiвностi (11), тим продуктивней автоматичний режим, чо-го можна досягти збiпьшенням N та ц, а також зменшенням Тппрог .
3.	Продуктивнють автоматичного режиму буде бтьша при розробленн i використаннi стандартних програм для розв'язування масових задач (N >> 1).
4.	Збтьшення ц досягаеться зменшенням значень параметрiв а та Р (11'). Сучасна тенденця полягае у зменшенж а (рис. 3б) i мае мюце (6).
5.	Зменшення Р досягаеться збiпьшенням швидкостi Vком оброблення шформацп за рахунок подаль-
шого розвитку комп'ютерноТ технiки (рис. 3а), а також за рахунок якост реапiзацiТ процедур, що виконують ш-тепектуапьнi функцiТ. З (11) можна отримати граничну оцнку значення, за межами якоТ умова (11) не буде ви-конуватися.
Нехай а=сопз1 Тодi iз (11') та (5) отримуемо
а
1--^-Р> 0
1 + а
або
< 1 + -. (12) V	а
ком
Спiввiдношення (12) може бути використане при розробпеннi вхiдних мов СКА для оцнки ефективнос-т Тх реапiзацiТ, яка повинна забезпечувати устх iнтепектуапiзацiТ. Наприклад, на сьогоджшнш день (рис. 3) маемо, що а ~ 1, i з (12) отримуемо
^юд
V ком
< 2 . (12')
Легко перевiрити, що при невиконанж (12) автоматичний режим буде продуктивншим (умова (9')) ттьки при нульовш складност (у = 0) задачи
6. При фтсованому рiвнi розвинення iнтерфейсу користувача зменшення часу програмування Тпрог
може бути досягнуте шляхом розвинення вхщноТ мови до рiвня, достатнього для здшснення iнтепектуапiзацiТ.
Нехай складнють задачi зростае. Тодi приросту параметра у вщповщае спiввiдношення, що легко отримуеться iз (11):
або
I дт прог + т
7. З (13) видно, що лiва частина е сумою двох додатних доданкв. Таким чином, якщо реалiзацiя вхщ-ноТ мови та якють програми на певному промiжку скпадностi забезпечують бiпьшу продуктивнють автоматичного режиму, нiж дiалогового (умова (9')), то при ТТ збiпьшеннi на цьому промiжку зростання часу на програмуван-ня менше, нж збiпьшення часу на виконання штелектуальних функцiй у дiапозi. Застосування автоматичних програм за умови iнтепектуапiзацiТ веде до менших вщносних витрат висококвалфкованоТ працi.
будуть зростати повтьнше, нiж витрати такоТ ж прац у дiапозi.
Отже, за умови, що властивост вхiдних мов мають достатнш рiвень штучного iнтепекту для програму-вання автоматичного розв'язування складних задач, сучасн тенденцiТ розвинення комп'ютерноТ технiки зумов-люють бiпьшу продуктивнють автоматичного режиму, нж iнтерактивного. Тобто, цей аспект достатност про-блеми подальшого якiсного пiдвищення продуктивностi чисельно-аналiтичного розв'язування наукових та при-кладних задач шляхом iнтепектуапiзацiТ на новому рiвнi скпадностi задач виконуеться: сучасн тенденцiТ розви-тку комп'ютерноТ технки сприяють (рис. 4) зменшенню значення а у (6) та Р у (5) ^ таким чином, виконанню стввщношення (11) як достатньоТ умови пiдвищення продуктивностi розв'язування складних задач шляхом автоматизацп.
Разом з цим значення Р залежать вщ якостi вхiдноТ мови СКА, i цей аспект достатностi потребуе окре-мого доспiдження [19].
4. Висновки
На основi проведених доспiджень можна зробити наступн висновки.
Загальною тенденцею сучасноТ науки i технiки е математизаця й ускладнення математичних моделей задач, що дослджуються. Рiвень розвитку комп'ютерноТ технки i пiдготовпеностi користувачiв дае змогу переходити до розв'язування задач недосяжноТ ранiше скпадностi. Потреба в оперуванн величезними анапiтичними вира-зами при розв'язуваннi задач, яю мiстять вiдносну апгоритмiчну проблему, перетворюеться у фактор, що сут-тево знижуе продуктивнють прац наукових та шженерних працiвникiв при використаннi дiалогового режиму
У роботi встановлено, що на сучасному рiвнi розвитку комп'ютерноТ технки подальше якiсне пщви-щення продуктивност застосування ЧАМ може бути досягнуте новим рiвнем автоматизацiТ - штелектуалзаць ею. За умови, що iнтелектуалiзацiя здiйснена, автоматичнi програми продуктивны за дiалоговi при розв'язуваннi складних задач. Бтьш того, Тх продуктивнють зростатиме разом iз зростанням складност задач. У працi [19] показано, що на даний час цьому напрямку комп'ютерноТ алгебри характерн стихшнють розвитку та вщсутнють единих уявлень про способи загального виршення.
Отже, е актуальним видiпення iз загальноТ проблеми автоматизацiТ проблеми iнтепектуапiзацiТ, тобто роз-роблення теоретичних i прикладних основ представлення складних задач i процесу Тх розв'язування як даних СКА. На наш погляд, е природним вивести пщходи до виршення цеТ проблеми iз природи задачi як феноме-
8. Другий доданок у (13) пропорцшний Тпрог . 1з зростанням скпадностi продуктивнють автоматичного
^	■	-.и-	ггпрог
режиму буде зростати, оскльки витрати висококвалiфiковано' працi Т г на створення автоматичних програм
СКА.
нолопчного явища науки та практики.
СПИСОК Л1ТЕРАТУРИ
1.	Глушков В.М. Теория алгоритмов. - К.: КВИРТУ, 1961. - 168 с.
2.	Базы знаний интеллектуальных систем / Т.А. Гаврилова, В.Ф. Хорошевский. - С-Пб: Питер, 2001. - 384 с.
3.	Ван-Хьюльзен Я., Калме Ж. Системы компьютерной алгебры // Компьютерная алгебра. Символьные и алгебраические вычисления. - М.: Мир, 1986. - С. 277 - 307.
4.	Абрамов С.А., Зима Е.В., Ростовцев В.А. Компьютерная алгебра // Программирование. - 1992. - № 5. - С. 4 - 25.
5.	Васильев Н.Н., Еднерал В.Ф. Компьютерная алгебра в физических и математических приложениях // Программирование. - 1994. - № 1. - С. 70 - 82.
6.	Васильев Н.Н., Гердт В.П., Еднерал В.Ф., Ширков Д.В. Компьютерная алгебра в научных и инженерных приложениях // Программирование. - 1996. - № 6. - С. 34 -47.
7.	Грошева М.В., Ефимов Г.Б. О системах аналитических вычислений на ЭВМ // Пакеты прикладных программ. Аналитические преобразования. - М.: Наука, 1988. - С. 5 - 30.
8.	Грошева М.В., Климов Д.М. Опыт использования аналитических преобразований на ЭВМ в задачах механики: Препр. / Инт проблем механики; 296. - М.: 1987. - 40с.
9.	Клименко В.П. Основные принципы построения систем интерпретации языков, проблемно-ориентированных на научные и инженерные задачи // Кибернетика. - 1990. - №1. - С.49 - 56.
10.	Девенпорт Дж, Сирэ И., Турнье Э. Компьютерная алгебра. - М.: Мир, 1991. - 352 с.
11.	Глушков В.М., Брановицкий В.И., Довгялло А.М., Рабинович З.Л., Стогний А.А. Человек и вычислительная техника. - К.: Наукова думка, 1971. - 296 с.
12.	Энциклопедия кибернетики. - М., 1974. - Т.1 - 2.
13.	Kahrimanian H.D. Analytical differentiation by a Digital Computer. - M.A. Thesys, Philadelphia, Pass.: Temple Univ., 1953. - P. 14 - 15.
14.	Nolan J. Analytical differentiation by a Digital Computer. - M.A. Thesys, Combridge: Mass. M.I.T,1953. - P.15 -16.
15.	Hellerman L.A A computer analytical methods for solving differential equation// Proc. Eastern Joint Comput. Conf. - Boston, Mass. - 1959. - Dec. - P. 238 - 243.
16.	Беда Л.М., Королев Л.Н., Сухих Н.В., Фролова Т.С. Программа автоматического дифференцирования для машины БЭСМ: Препр. / ИТМ и ВЦ АН СССР. - М.: 1959. - 20 с.
17.	Гердт В.П., Тарасов О.В., Шишков Д.В. Аналитические вычисления на ЭВМ в физике и математике. - Дубна: ОИЯИ, 1978. - 24 с.
18.	Аналитик-2000 / А.А. Морозов, В.П. Клименко, Ю.С. Фишман, А.Л. Ляхов, С.В. Кондрашов, Т.Н. Швалюк // Математичн машини i системи. - 2001. - №1, 2. - С. 66 - 99.
19.	Основные тенденции развития языков систем компьютерной алгебры / В.П. Клименко, А.Л. Ляхов, Ю.С. Фишман // Мате-матичн машини i системи. - 2002. - №2. - С. 29 - 64.
20.	Гоббс Т. Избранные труды: В 2 т. - М.: Мысль, 1964. - Т. 2. - 748 с.
21.	Пойа Дж. Математическое открытие. - М.: Наука, 1976. - 448 с.
22.Тихонов	А.Н., Костомаров Д.П. Вводные лекции по прикладной математике. - М.: Наука, 1984. - 192 с.
23.	Блехман И.И., Мышкис А.Д., Пановко Я.Г. Механика и прикладная математика: Логика и особенности приложения математики. - М.: Наука, 1983. - 328 с.
24.	Криницкий Н.А., Миронов Г.А., Фролов Г.Д. Программирование и алгоритмические языки / Под ред. А.А. Дородницына. -М.: Наука, 1979. - 512 с.
25.	Iterative process for calculations of composite bars and results by computer algebra / V.G.Piskunov, S.G.Buryhin A.V., A.V.Goryk, A.L. Lyakhov //"Composite science and technology", International conference (ICCST/3). - Durban South Africa, 2000. -11 -13 January. - P. 235 - 241.
26.	Ляхов О.Л. Про розв'язування диферен^альних рiвнянь методами комп'ютерноi алгебри: Зб. наук. праць Полт. дер. техн. ужверситету iменi Юрiя Кондратюка. - 2000. - Вип. 5. - С. 233 - 244.
27.	Клименко В.П., Ляхов А.Л., Швалюк Т.Н. Аналитическое моделирование решения некоторого класса краевых задач // Радюелектронка. 1нформатика. Управлшня. - 2000. - № 2(4). - С. 82 - 87.
28.	Piskunov V.G., Goryk A.V., Lyakhov A.L., Cherednikov V.N. High order model of the stress-strain state of composite bars and its implementation by computer algebra// Composite Structure. - 2000. - N 48. - P. 169 -176.
29.	Зинченко Т.П. Инженерно-психологические требования к построению кодовых алфавитов // Хрестоматия по инженерной психологии / Под ред. проф. Б.А. Душкова. - М.: Высшая школа, 1991. - С. 219 -230.
30.	Линдсей П., Норман Д. Переработка информации у человека. - М.:. Мир, 1974. - 539 с.
31.	Справочник по ЭВМ / В.И. Грубов, В.С. Кирдан, С.Ф. Козубовский. - К.: Наукова думка, 1989. - 544 с.
32.	Методы вычислений на ЭВМ: Справочное пособие / В.В. Иванов. - К.: Наукова думка, 1986. - 584 с.
33.	Архитектура WINDOWS для разработчиков / Microsoft Corporation: Пер. с англ. - М.: Издательский отдел «Русская редакция» ТОО «Channel Trading Ltd.», 1998. - 472 c.
      
      
    
  
=====

        


﻿УДК 681.3:519.68 М.К. МОРОХОВЕЦЬ
ОСОБЛИВОСТ1 ОРГАН1ЗАЦИ СУЧАСНИХ СИСТЕМ АВТОМАТИЗАЦП М1РКУВАНЬ Вступ
Автоматиза^я доведень теорем (АДТ) - галузь штучного штелекту, що зародилася невдовзi пiсля впровадження перших ЕОМ: перша програма для пошуку доведень теорем - „Лопк-теоретик" - з'явилася у 1956 р. Пщходи до розробки засобiв та систем АДТ можна розглядати у дектькох площинах: з боку органiзацií системи АДТ, тобто складу системи та способiв зв'язку мiж ii компонентами, i з боку формалiзмiв, що лежать в основi процедур пошуку доведень теорем. Останн роздiляються на формалiзми, якi в той чи шший спосiб iмiтують процес доведення теорем людиною (наприклад, логiчнi числення секвен^ального типу, метод семантичних таблиць, натуральне виведення, доведення за шдук^ею, доведення за аналопею), та формалiзми, що враховують, насамперед, здатнiсть обчислювальноí машини швидко виконувати велику кiлькiсть однотипних дш i не використовують зразюв мiркування, притаманних людинi (наприклад, матричн методи, зворотний метод Маслова, метод резолюцш Робiнсона). Щодо органiзацií вiдмiтимо, що на початковому етапi розвитку системи АДТ будувалися здебтьшого за принципом „чорного ящика". Така система являе собою автономну програму, що реалiзуе деяку процедуру пошуку доведення теорем, причому можливють впливу на хщ пошуку з боку користувача або не передбачаеться зовам, або значною мiрою обмежена, введення початкових даних та виведення результату пошуку здшснюеться за допомогою спецiальноí формально!' мови (наприклад, мови формул лопки першого порядку, мови диз'юнклв тощо), не передбачаеться також можливiсть сполучення тако' системи з iншими, спорщненими або допомiжними, системами. В.М. Глушковим був запропонований [1] проект системи для автоматизованого пошуку доведень теорем, вщомий пщ назвою Алгоритм Очевидносл (АО), в основi якого лежав вщмшний вiд згаданого вище пщхщ до органiзацií системи АДТ. Основна щея пiдходу: система АДТ мае бути помiчником працюючого математика, отже мае пщтримувати весь комплекс роб^, що стосуються доведення теореми (виведення, алгебричн перетворення, обчислення, побудова контрприкг^в), а також накопичувати математичнi знання i користуватися ними при доведены теореми, спткуватися з користувачем мовою хоча i формалiзованою, але близькою до природной надавати користувачевi можливють впливу на хщ доведення.
У бтьшосл систем АДТ, створених протягом 1970 - 1980-х рр., використовувався перший тип оргашзацп, значна ix кiлькiсть фунтувалася на принципi резолюцш Робшсона [2].
Досвiд експлуатацií систем АДТ свщчив, що програми, яю створювалися для доведення теорем, виявилися придатними при розв'язанш iнших задач, зокрема, побудови моделей та контприкладiв, формулювання та перевiрки припущень, дослщження теорiй i почали застосовуватися як помiчники у мiркуваннi. З огляду на це цтком природним було виникнення (у 1980 р.) термша „автоматизоване мiркування" (АМ), який почав використовуватися замють термiна „автоматизоване доведення теорем". Однак досвщ роботи виявив недолги органiзацií системи АДТ як автономно1 програми, зокрема, при розв'язанш задач, що потребують i доведень, i обчислень, i аналiтичних перетворень. Аналопчш проблеми виникли i при використанн систем комп'ютерноí алгебри (СКА). В результат на початку 1990-х рр. з'являються засоби сполучення СКА та АДТ [3]. Поява комп'ютерних мереж i пов'язаних з ними нових способiв передачi та обробки даних сприяла формуванню стiйкоí тенденцп до штеграцп рiзноманiтних програмних засобiв розв'язання математичних задач (так званих комп'ютерних математичних служб, або КМС) [4]. 1нтегра^я програм дае можливють, зокрема, розширити коло задач, яю розв'язують як системи АДТ, так i СКА, широко використовувати спецiалiзованi пакети програм як допомiжнi математичш служби, створювати та поповнювати сховища математичних знань з доступом через електронну мережу.
Сучасн системи автоматизацп MipKyBaHb
На сьогодн iснують pi3Hi форми i способи штеграцп програмних 3aco6iB розв'язання математичних задач, зокрема, автоматизацп мiркувань. Коротко охарактеризуемо ïx.
1.	Забезпечення доступу через мережу Internet до засобу АДТ, який створювався початково як автономна програма. При цьому потрiбнi засоби опису способiв звернення до програми i отримання результат. Прикладом програми АМ, що використовуе такий тип штеграцп, е вщома програма OTTER [5], яка фунтуеться на методi резолюцiй.
2.	Iнтеграцiя рiзноманiтниx КМС у межах однiеï системи. Такий тип штеграцп характерний для Системи автоматизацп доведень (САД) [6], реалiзованоï у межах проекту АО, а також для систем АПС [7], THEOREMA [8], MIZAR [9], ISABELLE [10], WMEGA [11].
Осктьки САД в юторичному плат е першою системою даного типу штеграцп, наводимо схему ïï оргашзацп ( рис. 1). На рисунку К - користувач; TL-текст - математичний текст, записаний формалiзованою мовою TL [12], що наближена до природно'1' (TL в САД - мова спткування користувача з системою, а також мова уведення даних та виведення результа^в роботи системи); СС - синтаксична система, що забезпечуе перетворення TL-тексту у внутршне представлення i навпаки; СДС - секвен^альна дедуктивна система, що здшснюе пошук виводу на основi числення а-секвенцш [13]; РДС - резолюцшна дедуктивна система, що здшснюе пошук виводу на основi резолюцiйного числення [14]; СД - середовище доведення - шформацшна
база для пошуку доведення, що являе собою сукупнють визначень та допомiжниx тверджень (у внутршньому представленнi) з вxiдного TL-тексту, як можуть використовуватися при пошуковi виводу; пошук лем -компонент САД, що залежить вщ ситуацп доведення, яка визначаеться станом простору пошуку виведення, здшснюе пошук допомiжниx тверджень (лем), застосованих в поточнш ситуацп доведення (бтьш детально про взаемод^ цього компонента САД i резолюцшно! процедури пошуку виводу викладено у [15]). Основою штеграцп дедуктивних засобiв САД служить мова TL, а бтьш точно - внутршнш рiвень ïï представлення в системк Зауважимо, що зараз створюеться верая САД, яка базуеться на мовi ForTheL [16], новiй версiï TL.
Система алгебричного програмування АПС е засобом розробки прототитв прикладних програм та ix реалiзацiï у середовищi мови С Мова програмування АПС е декларативною. В основi системи лежить загальний мехашзм переписування термiв, що дозволяе використовувати АПС як шструмент для створення рiзноманiтниx процедур символьних перетворень, зокрема, дедуктивних засобiв [17]. Для реалiзацiï процедури пошуку виводу у середовищi АПС потрiбно записати специфка^ю цiеï процедури у формi логiчного числення. У межах АПС можуть ствюнувати рiзнi математичнi служби. Семантика ix взаемодiï базуеться на теорп агентiв та середовищ [18]. Основою штеграцп засобiв розв'язання математичних задач в АПС служить мехашзм переписування термiв.
Метою проекту THEOREMA е надання (користувачев^ апарату, що дае змогу виконувати обчислення, розв'язувати задачi та доводити теореми. Реалiзацiя проекту передбачае створення системи, яка включае базу знань К, що складаеться з сукупност формул та мехашзму виводу L, мехашзму обчислення виразу T з K при заданому значены змшно1, яка входить в T, розв'язувача задач для K, що забезпечуе знаходження тих
TL-текст
К
С С
Рис. 1
значень змшноТ (х), при яких Т(х) виконуеться вщносно K, процедуру доведення для K, за допомогою
яко'1' можна з'ясувати, чи iстинний вираз Т(х) для довтьного х . Особливостями проекту е: базовим засобом
реалiзацiï проекту е система символьних обчислень Mathematica, точшше, та ïï частина, яка включае мовнi засоби; для побудови iерархiï математичних областей використовуються функтори; процедура пошуку доведень пiдтримуе так званий природний тип мiркування, тобто iмiтуе стиль мiркування, притаманний людинi; передбачаеться наявнють низки спецiальних процедур пошуку доведень (вщповщно до функторiв, що використовуються в системi), а також спе^альних процедур, призначених для пошуку доведення у деяких областях; наявний зааб представлення доведень природною мовою; плануеться механiзм автоматичного породження складних баз знань за алгебричними властивостями дано'1' предметно! областi та за означенням функтора.
Розробку системи MIZAR розпочато понад 20 роюв тому з метою створити на базi класично1 логiки та теорiï множин програмне середовище для пiдтримки написання математичних статей. MIZAR мав перевiряти правильнiсть математичних текстiв, написаних людиною. Зараз до складу системи входять: мова MIZAR, програмний шструментарш, бiблiотека, журнал гiперпосилань. Мова MIZAR створювалася як спроба формалiзувати мову математичних публтацш. В системi використовуеться класична лопка. G можливiсть за допомогою означень уводити типи, терми, конструктори формул. 1нструментарш призначено для розвитку бази даних та керування нею, перевiрки лопчно1 коректност текстiв, забезпечення узагальнення, спрощення, полiпшення текстового представлення, подання текс^в у форматах ТЕХ та HTML. Математична бiблiотека системи MIZAR - сукупнють текстiв (понад 600) на мовi MIZAR. Система розвиваеться як сховище перевiрених формальними методами математичних фак^в, органiзованих як система знань. Отже, така система може вважатися математичною службою.
Система Isabelle е засобом штерактивного доведення теорем. Вона мае апарат задання лопк. До ïï складу входить база математичних знань, яка мютить бiблiотеку сучасних математичних понять.
WMEGA е шструментальною системою для доведення теорем, яка пщтримуе розподтеш обчислення за рахунок залучення зовшшшх математичних служб. Особливютю WMEGA е наявнють планувальника доведення. Процес пошуку доведення в WMEGA здшснюеться не на рiвнi конкретного числення, а радше як процес планування доведення на бтьш абстрактному рiвнi методiв доведення. Планувальник служить в WMEGA основою штеграцп. Зараз дослiджуеться можливiсть побудови планувальника, який здатний користатися власним досвщом пошуку доведень i навчатися новим методам доведень. На базi системи розвиваеться новий пщхщ до пошуку доведень теорем, зпдно з яким для кожного правила виводу числення, що використовуеться для пошуку доведення, юнуе агент (або деюлька), який визначае застосовнють цього правила виводу на поточному кроц доведення.
3.	1нтегра^я двох рiзних систем, яю початково створювалися як окремi програмнi засоби розв'язання математичних задач. Для забезпечення такого виду штеграцп створюються спе^альш програми-зв'язки, так зван „мютки". Як правило, таким способом сполучаються СКА та системи AM (CAM). В результат або розширюються можливос^ програм AM (наприклад, комбшування СКА Maple з HOL та Isabelle надшило останш потужними засобами арифметичних обчислень i пщвищило ефективнють цих програм у мiркуваннях стосовно полiномiв та чисел), або функцюнально збагачуються СКА (так, наприклад, CAM NUPRL е алгебричним оракулом для СКА WEYL). Дiяльнiсть у цш сферi докладно висвiтлено в [19].
4.	1нтегра^я сукупностi систем з метою утворення з них „робочо1 команди", призначеноï для розподiленого розв'язання задач. Цей пщхщ виник як природне узагальнення попереднього. Вш орiентований на таке використання рiзноманiтних наявних систем обчислень i символьних перетворень, при якому досить гнучко можна формувати потужний обчислювальний комплекс залежно вщ конкретно1 задачу яка пщлягае розв'язанню. У межах даного пщходу створюються загальш засоби пiдтримки розподтеного розв'язання задач.
На сьогодш ведуться розробки: а) стандарту для передачi та представлення математичних знань (OpenMath [20]); б) стандарту для опису математичних служб (OMRS [21]); в) шструментальних засобiв компонування процедур доведення для формальних мiркувань у прикладних галузях (PROSPER [22], MSB [23]); г) архтектур, що забезпечують взаемод^ рiзних КМС [24, 25].
Для забезпечення спткування мiж рiзними системами при розподiленому розв'язанш задач потрiбнi вiдповiднi мовнi засоби. Саме з фею метою ведеться розробка OpenMath - стандарту для передачi математичних об'еклв вщ одше1 програми до iншоí. Згiдно з цим стандартом, математичш об'екти представляються за допомогою позначених дерев (OpenMath-виразiв або об'еклв), якi визначаються рекурсивно через найпростш OpenMath-вирази (цiлi числа, символи, визначення яких знаходяться у так званих змютових словниках, змшш, числа з рухомою комою, рядки символiв, масиви байлв) та символи операцш, якi використовуються для побудови складених виразiв. Це е так званий абстрактний рiвень представлення об'еклв. Об'екти, що призначенi для збер^ання або передачi, вiдображуються у послщовносл байтiв (кодуються). OpenMath забезпечуе двшкове кодування та кодування за допомогою XML. Наприклад, OpenMath-вираз binding(lambda, x, application(sin, x)) кодуеться таким чином: <OMOBJ><OMBIND><OMS cd="fns" name="lambda"/><OMBVAR><OMV name="x"/> </OMBVAR><OMA><OMS cd="transc" name="sin"/><OMV name="x"/></OMA></OMBIND> </OMOBJ>. У змiстових словниках зберiгаються значення математичних термов (так званих символiв), що стосуються ле1 чи iншоí предметно1 областi. У кожному словнику е роздт, який мiстить опис цього словника. Роздт, що стосуеться символу, мютить iм'я символу, його опис (природною мовою), може включати приклади використання символу та його властивосл. Сукупнють змютових словниюв поповнюеться. Осктьки OpenMath може служити для передачi не тiльки математичних виразiв, а й таких об'еклв, як доведення, цей зааб може використовуватися для забезпечення спткування мiж СКА та САМ.
1ншим засобом штеграцп систем, що активно розвиваеться зараз, е OMRS (Open Mechanized Reasoning Systems) - апарат, що дае змогу описувати як СКА, так i САМ. Специфка^я систем, виконана стандартними засобами, розглядаеться авторами OMRS як вщправна точка штеграцп КМС. OMRS-специфка^я мае три рiвнi: рiвень логiки, призначений для опису числення (мови та правил виводу), з якими працюе система (для опису використовуються спе^альш математичш об'екти - теорп мiркувань); рiвень управлiння, що служить для опису стратегш пошуку виводу (опис здшснюеться за допомогою так званих анотованих теорш мiркування - об'ектiв, що мiстять шформа^ю про те, як застосовувати правила виводу); рiвень взаемодií, що визначае споаб взаемодií системи iз середовищем (вщповщш засоби знаходяться в стадп розробки).
Проект PROSPER (Proof and Specification Assisted Designed Environment) спрямований на розробку шструментарю що дае змогу експерту порiвняно легко та гнучко „збирати" знаряддя для доведення теорем з метою використання у прикладних галузях. Основою для збирання такого знаряддя е HOL, але можна пщсилювати його за рахунок пщключення зовшшшх шструменлв.
MSB (Mathematical Software Bus) - це програмне середовище для сполучення рiзнорiдних систем, як виконують будь-яю види математичних обчислень та перетворень. Для пщтримки обмшу математичними даними пропонуеться використовувати OpenMath. На основi MSB передбачаеться проектування штелектуальних помiчникiв для розподiленого розв'язання математичних задач.
MathWeb являе собою розподтену мережну архiтектуру для автоматичного та штерактивного доведення теорем. Для побудови протоколiв спiлкування математичних служб використовуються OMRS та KQML (Knowledge Query and Manipulation Language - мова та протокол для обмшу шформа^ею та знаннями мiж програмними агентами) [26].
LBA (Logic Broker Architecture) - знаряддя, що забезпечуе необхщне пщгрунтя для ствпраф САМ та СКА. Експериментальна реалiзацiя LBA виконана на базi промислового стандарту СОRВА [27], що забезпечуе взаемод^ типу „шент-сервер", та стандарту OpenMath. Складовими LBA е шент (САМ, що мае потребу у
лопчнш послуз^ тобто звертаеться iз замовленням довести деяке твердження при заданих посилках), сервер (САМ, що може надати замовлену послугу), брокер (програма, яка обслуговуе клиента та сервер, передаючи Тхн повщомлення один одному, вщшукуючи для клiента той сервер, який може надати потрiбну лопчну послугу, перекладаючи запит клiента на мову сервера), база даних (в нш збер^аються вiдомостi про КМС, як можуть виступати в ролi серверiв, та про види послуг, яю вони пропонують). Дуже важливою складовою 1_ВА е модуль перевiрки сумiсностi клiента та серверу (у розумшш можливостi використання результатiв, як отримав сервер, для потреб клента), але ця складова iснуе зараз поки що на рiвнi проекту.
Висновки
Пщводячи пiдсумок, вiдмiтимо, що на вщмшу вiд раннiх програм АДТ (але не усх: згадаймо САД), при створены яких увага зосереджувалася майже виключно на виборi формалiзму пошуку доведення теорем i розробцi ефективних стратегiй пошуку, сучасн САМ вiдзначаються порiвняно складною органзацею. Особливостями органiзацiТ сучасних САМ е так:
-	вщкритють у тому розумшж, що органiзацiя САМ i засоби спiлкування та взаемодiТ загального характеру дають можливiсть нарощувати ТТ за рахунок додаткових засобiв символьних перетворень або/та залучати зовжшж математичн служби безпосередньо у процесi розв'язання задачi даною системою, або/та виконувати цй системi роль математичноТ служби для шшоТ системи чи при колективному розв'язанн задач;
-	наявнють розвинутих мовних засобiв спiлкування з людиною. Роль таких засобiв подвшна: по-перше, вони полегшують уведення даних в систему, сприймання та подальше використання результатв ТТ роботи, тобто пщвищують рiвень комфортностi працi користувача, а, по-друге, дають змогу людин спостерiгати за ходом розв'язання задачi та ефективно впливати на пошук розв'язку. З огляду на те, що щеолопя багатьох систем фунтуеться на трактуваннi САМ як помiчника людини, яка або навчаеться математиц, або веде дослiдження, або розв'язуе складну задачу, мовна складова стае невщ'емною частиною сучасноТ САМ;
-	наявнють у складi системи бази математичних знань та ТТ використання пщ час роботи;
-	наявнють засобiв планування доведення.
Розробка шструментар^ для пщтримки спiлкування та взаемодп систем (таких, як згаданi вище стандарти та архiтектури), а особливо прогрес в цш галузi, матимуть, на наш погляд, значний вплив на розвиток майбутнх програмних засобiв розв'язання математичних задач, зокрема САМ. По-перше, оскльки можна залучити пщ час роботи пщходящу математичну службу, зникае необхщнють у зосередженнi у межах однеТ системи усiх засобiв розв'язання задачi. По-друге, пiдвищуеться роль окремих спецiалiзованих програм, якi ефективно реалiзують потужнi методи розв'язання (нехай i не дуже широкого класу) задач, за умови, що так програми оформлен як здатн до спткування та взаемодiТ математичн служби. Разом з тим зросте значення дослщжень iз загальних методiв пошуку розв'язкiв задач. Питання методiв пошуку вже зараз розглядаеться на новому рiвнi. Якщо при реалiзацiТ раннiх систем АДТ перевага надавалася певнш окремiй стратегiТ пошуку, то в сучасних САМ мова йде про бтьш гнучкий засб - механзм планування розв'язку. У майбутнх САМ передбачаеться втiлення механiзму вибору методу розв'язання задачу узагальнення досвщу роботи системи та генерацiя нових методiв розв'язання [28]. Отже, принагщно зауважимо, що зароджуеться нова тенденця розвитку САМ - створення систем, здатних до навчання.
З викладеного вище випливае, що дiапазон сучасних САМ е досить широким i включае т програми та системи, що мають рiзнi можливост, але, насамперед, здатн до спiлкування та взаемодп. Отже, до сучасноТ САМ можуть бути вщнесеж:
-	математична служба (у виглядi окремоТ програми), яка ефективно розв'язуе задачi в деякй (можливо, досить обмеженiй) галуз^
-	система загального призначення (тобто орiентована на розв'язання широкого класу задач), яка е вщкритою для спткування та взаемодп;
-	система, ядром якоТ е компонент побудови мiркування, але яка забезпечуе увесь цикл розв'язання задачi (можливо, за рахунок спiвробiтництва iз зовшшшми математичними службами);
-	команда, що складаеться з пщходящих комп'ютерних математичних служб i зiбрана спецiально для розв'язання задач певного класу або для розв'язання деякоТ складноТ проблеми.
СПИСОК Л1ТЕРАТУРИ
1.	Глушков В.М. Некоторые проблемы теории автоматов и искусственного интеллекта // Кибернетика. - 1970. - № 2. - С. 3 -13.
2.	Робинсон Дж. Машинно-ориентированная логика, основанная на принципе резолюции: Киберн. сб. (нов. сер.). - М.: Мир, 1970. - № 7. - С. 194 - 218.
3.	Harrison J., Thery L. Reasoning about the Reals: the Marriage of HOL and Maple // Lect. Notes in Artif. Intelligence. - SpringerVerlag, 1993. - Vol.698. - P. 351 - 353.
4.	Лялецький О.В., Мороховець М.К. Про деяк тенденцп розвитку комп'ютерних математичних служб // Вюник КиТвського ужверситету. Серiя: фнз.-мат. науки. - Вип. 1. - Кив, 1998. - С. 193 - 204.
5.	McCune W. Otter 3.0 reference manual and guide // Techn. Report ANL-94-6, Argonne National Laboratory. - Argonne, IL, USA,
1994.
6.	Глушков В.М. Система автоматизации доказательств // Автоматизация обработки математических текстов. - Киев: ИК АН УССР, 1980. - С. 3 - 30.
7.	Letichevski A.A., Kapitonova Yu.V., Konozenko S.V. Computation in APS // Theoret. Comput. Sci. - 1993. - N119. - P. 145 - 171.
8.	A Survey of the Theorema Project / B.Buchberger, T.Jebelean, F.Kriftner et.al. // Intern. Symp. оп Symbolic and Algebraic Computation (ISSAC'97), Maui Hawaii, USA. - USA: ACM Press, 1997. - P. 384 - 391.
9.	Rudnicki P., Trybulec A. On equivalents of well-foundedness // Journаl of Automated Reasoning. - 1999.- N 23 (3 -4). - P. 197 -234. ttp//merak.uwb.edu.pl/~bancerec/introduction/.
10.	Paulson L. The Foundation of a Generic Theorem Prover // Journ. of Automated Reasoning. - 1989. - N 5. - P. 363 - 396.
11.	WMEGA: Towards a mathematical assistant / C.Benzmuller, L. Cheikhrouhou, D. Fehrer et. а!. // In: W.McCune, editor, // Proceedings of the 14th Conf. оп Automated Deduction, Townsville, Australia. - Springer, 1997. - LNAI. - Vol. 1249. - P. 252 -255.
12.	О формальном языке для записи математических текстов / В.М. Глушков, К.П. Вершинин, Ю.В. Капитонова и др. // Автоматизация поиска доказательств теорем в математике. - Киев: ИК АН УССР, 1974. - С. 3-36.
13.	Дегтярев А.И., Лялецкий А.В. Логический вывод в системе автоматизации доказательств // Математические основы систем искусственного интеллекта. - Киев: ИК АН УССР, 1981. - С. 3 - 11.
14.	Мороховец М.К. Реализация резолюционных процедур в САД // Дедуктивные построения в системах искусственного интеллекта и моделирование автономных роботов. - Киев: Ин-т кибернетики им. В.М. Глушкова АН УССР, 1987. - С. 25 - 31.
15.	Атаян В.В., Мороховец М.К. Сочетание формальных процедур поиска логического вывода и естественных приемов поиска доказательств теорем в системе автоматизации доказательств // Кибернетика и системный анализ. - 1996. - № 3. -С. 151 - 182.
16.	Паскевич А.Ю. Особливосл реалiзацiТ мови високого рiвня для запису математичних текслв // Вюник КиТвcького уыверситету. - 1999. - Вип. 2. - С. 284 - 288.
17.	Капитонова Ю.В., Летичевский А.А., Волков В.А. Дедуктивные средства системы алгебраического программирования // Кибернетика и системный анализ. - 2000. - № 1. - С. 17 - 34.
18.	Letichevski A.A., Gilbert D.R. A general theory of action languages // Cybernetics and Systems Analysis. - 1998. - N 1. - P. 16 -36.
19.	Calmet J., Homann K. Classification of communication and cooperation mechan-isms for logical and symbolic computation systems // Frontiers of Combining Systems, Series on Applied Logic. Dordrecht: Kluwer, 1996. - N 3. - P. 221 - 334.
20.	Abbott J.A., van Leeuwen A., Strottmann A. OpenMath: Communicating Mathematical Information between Co-operating Agents in a Knowledge Network // Journal of Intelligent Systems, 1998. - Special Issue "Improving the Design of Intelligent Systems: Outstanding Problems and Some Methods for their Solution".
21.	Giunchiglia F., Pecchiari P., Talcott C. Reasoning Theories: Towards an Architecture for Open Mechanized Reasoning Systems // Proc. of the First International Workshop on Frontiers of Combining Systems, Munich. - Germany, 1996.
22.	The PROSPER Toolkit / L.A.Dennis, G.Collins, M.Norrish et.al. // Proc. of the International Conference on Tools and Algorithms of Systems. - Berlin, Germany, 2000. - April.
23.	Calmet J., Homann K. Towards the Mathematical Software Bus // Theoret. Comput. Sci. - 1997. - N 187. - P. 221 - 230.
24.	Armando A., Zini D. Interfacing Computer Algebra and Deduction Systems via the Logic Broker Architecture // Proceedings of the 8th Symposium on the Integration of Symbolic Computation and Mechanized Reasoning. - Scotland, St.Andrews, 2000. - P. 52-67.
25.	Armando A., Kohlhase M., Ranise S. Communication Protocols for Mathematical Services based on KQML and OMRS // Ibid. -P. 37 - 51.
26.	Finin T., Fritzson R. KQML - a language and protocol for knowledge and information exchange // Proc. of the 13th Intl. Distributed Artificial Intelligence Workshop. - Seattle. WA, USA, 1994.- P. 127 - 136.
27.	Object Management Group. The Common Object Request Broker: Architecture and Specification // Technical Report, OMG, July,
1995.	- Rev 2.0.
28.	Jamnik M., Kerber M., Benzmuller C. Towards New Methods in Proof Planning // Proceedings of the 8th Symposium on the Integration of Symbolic Computation and Mechanized Reasoning. - Scotland, St.Andrews, 2000. - P. 144 - 159.
      
      
    
  



=====

        


﻿УДК 510.6 О.П. ПИНЬКО
СЕКВЕНЦ1АЛЬН1 СИСТЕМИ ВИВЕДЕННЯ ДЛЯ БАГАТОЗНАЧНИХ ЛОГ1К
Вступ
Проблема оргашзаци взаeмодií людини та комп'ютерноТ системи часто нерозривно пов'язана з розв'язанням лопчних задач (наприклад, в експертних системах, яю грунтуються на логiчному пiдходi до обробки знань, або в системах автоматичного доведення теорем, як використуються для розв'язання лопчних задач в математик), що зробило досить актуальним (в межах зазначеноТ проблеми) питання розробки систем автоматичного виведення в вщповщних лопчних численнях. Особливе мюце при цьому займае аналiз рiзноманiтних некласичних лопк, якi були б бтьш придатнi для моделювання мiркувань у рiзних предметних галузях i могли б бути використан в шформатицк
1снуе два основних засоби введення некласичних лопк. Перший - синтаксичний - полягае у пiдборi придатного числення, яке б вiдрiзнялося вщ класичного (наприклад, шляхом вилучення або послаблення аксюм, або правил виведення класичного числення). Другий - семантичний - полягае у використанн бтьш шж двох ютинносних значень, що привело до виникнення поняття багатозначно'1 лопки. Залишаючи питання про числены використання нескшченнозначних логiк, таких, як нечiтка (або неперервна) лопка, ми лише нагадаемо тут про кориснють деяких скшченнозначних логiк в межах шформатики.
По-перше, як вiдомо, для комп'ютерних систем характерна неповнота шформацп, що приводить до доцiльностi використання певних конструктивних лопк (наприклад, трьохзначноТ лопки Клиш) в рiзних системах машинного виведення. ^м того, у комп'ютерних системах, в яю шформа^я може надходити з декiлькох незалежних джерел, можлива наявнють несумiсноí (суперечноТ) iнформацií, обробка якоТ на засадах класичноТ або конструктивноТ логiки призводила б до повного руйнування накопиченоТ корисноТ iнформацií [3]. Тому бтьш доцтьно використовувати, наприклад, трьохзначнi паранесуперечн логiки замiсть класичноТ двохзначноТ або чотирьохзначн - замiсть трьохзначноТ лопки Клиш. 1снують також iншi цiкавi варiанти багатозначних логiк (з бтьшою кiлькiстю iстинносних значень), якi ми тут не обговорюемо докладно.
Однiею з основних задач щодо багатозначних логiк (особливо у зв'язку з автоматиза^ею виведення та застосуванням до шформатики) е пошук Тх аксiоматизацiй, якi були б придатн для комп'ютерноТ реалiзацií процедур автоматичного доведення теорем. У роботах [4, 5] була запропонована секвен^альна аксюматиза^я ¡К класичноТ лопки, рiзнi модифкацп якоТ по™ знайшли широке застосування при автоматизаци виведення в цш (двохзначнiй) логiцi. Щодо багатозначних лопк, то узагальнюючи генценовську iдею двохмюцевоТ секвенцií, у роботах [6, 7] було запропоновано використовувати багатомiсцевi секвенци. В зазначених статтях були розроблеш загальнi методи побудови m-мiсцевих секвен^альних числень для довiльних т-значних лопк, де т > 2. Далi ця iдея зазнала певних модифтацш та узагальнень [8]. Однак звичайш двохмiсцевi секвенцiальнi числення були б краще для аксiоматизацií вщношень логiчного наслiдування в некласичних лопках, оскiльки метавираз "формула ф е лопчним наслiдком скiнченноí множини формул Г" можна штерпретувати двохмiсцевою секвен^ею Г ®ф, в той час, як щодо багатомюцевих
секвенцiй така штерпрета^я (якщо вона взагалi юнуе) значно бiльш громiздка. Проте, незважаючи на побудову генценовських числень для певних некласичних лопк (наприклад, штуТцюнютськоТ), питання про придатнють генценовського двохмюцевого секвен^ального формалiзму взагалi до багатозначних лопк залишилося не вивченим в л^ератург
В цш робот ми вивчаемо сюнченнозначш логiки з визначником рiвностi. Клас таких логiк включае до складу (як злiченнi пiдкласи) клас уах двохзначних логiк (при цьому 3 = 0), клас уах трьох- и чотирьохзначних лопк зi слабким запереченням 0 (при цьому 3 ={0}), класи уах скшченнозначних лопк Лукасевича i Поста,
а також клас уах скшченнозначних функцюнально повних лопк (див. пщроздти 2.1, 2.2 та 2.3 вщповщно).
В розд^ 2 ми показуемо, як можна побудувати двохмiсцевi секвенцiальнi числення без структурних правил для довтьних багатозначних логiк з визначником рiвностi. На вiдмiну вiд числення ¡К [4, 5] та числень, розглянутих в [6, 7] i оглянутих в [8], нашi числення мютять, крiм правил уведення зв'язок, також правила уведення "комплекав зв'язок" (щея використовувати такi правила веде походження вщ роботи Попова [9]),
тобто формул вигляду у{т(р\, ...,(„)), де V е 3 , Ц- п-арна зв'язка (де, в свою чергу, „ > 0, а (\,... ,р„
- пропозицшш формули. Загальний пщхщ, запропонований в цш роботi, охоплюе деякi конкретнi числення, що введенi нами ранiше в роботах [10, 11, 12].
Секвенцп можна штерпретувати атомарними формулами першого порядку. Таким чином, секвенцiальнi числення трактуються як точнi унiверсальнi Хорновськ теорií. Це надае можливiсть використовувати програмш системи, якi мають вбудоваш процедури унiфiкацií та цiлеспрямованого лопчного виведення (такi, як Пролог та АПС [1, 2]), для реалiзацií процедур виведення в численнях, що розглядаються. Це питання докладно обговорюеться у розд^ 3.
Основнi поняття та позначення
Ми дотримуемося звичайних алгебраíчних понять [13]. Щоб ушфкувати позначення, алгебри позначатимуться жирними курсивними великими латинськими леерами (можливо, з шдексами), а íх носií - вщповщними курсивними великими латинськими леерами (з тими ж iндексами).
(Абстрактна) пропозицйна мова - це довтьна алгебра'1'чна сигнатура -, символи (тобто операцп)
якоí трактуються як (пропозицйн^ зв'язки. Зафксуемо злiченну множину V = {р, }г>0, елементи яко1
називатимуться пропозицйними змнними або атомами. Абсолютно втьна ¡-алгебра з системою втьних твiрних V позначаеться Р-. Елементи Г- називаються (пропозицйними) формулами. Якщо А - ¡-алгебра, то iнтерпретацieю в А називаеться усякий гомоморфiзм iз в А. (Як звичайно, штерпретацп в алгебрах ототожнюються з 1х обмеженнями на множину V або нав^ь на його пщмножини, що складаються з "суттевих" пропозицшних змiнних. При цьому ми iнодi використовуемо такi позначення iнтерпретацiй, як
V / а\,..., у„ / а„ ], де V\,..., \п - пропозицшш змшш, а а.\,..., а„ - елементи алгебри, що розглядаеться). 1нтерпретацп в називаються L-пiдстaновкaми.
(Багатозначна) ¡-лог'1ка - це довтьна пара вигляду М = {А, О), де А - ¡-алгебра, елементи яко1 називаються и (ютинносними) значеннями, а О С А (елементи й називаються вiдзнaченими (ютинносними) значеннями М). Вiдношення (логiчного) нaслiдувaння С„М лопки М визначаеться як оператор замикання на множит ¥ъ таким чином [14]. Для уах X С ¥ъ та (ре ¥ъ установимо (ре С„М {X) т.т.т.к., для кожно1 штерпретацп Л в А, к[Х] С О ^ Ь{р)е О.
¡-Секвенця - це довтьна пара скшченних множин Г i А ¡-формул, яка записуеться у виглядi Г ® А. Поняття (секвенцального) правила, його посилки та висновку, оберненого правила, (секвенцально'О аксоми, (секвенцального) числення, виведення в числены та секвенцп, що мае виведення в числены, визначаються, як звичайно.
L-Секвен^я Г ®А називаеться стинною в M при нтерпретацп h в A, якщо
И[Г]с D ^ И[а] П D Ф 0, i хибною у противному pa3i [15]. L-Правило називаеться (лог'нно)
загальнозначимим в M, якщо при будь-якш штерпретацп в A одна з його посилок хибна в M або його висновок ютинний в M [12]. Вщзначимо, що yd структуры правила (включаючи nepepi3) загальнозначимi в M [12].
2. Секвенщальж числення для логiк з визначником piBHOCTi
Зафiксyемо скiнченнy пропозицiйнy мову L та скшченнозначну логiкy M = (A, D), таку, що 0Ф D Ф A.
Визначником рiвностi для M називаеться така множина 3 унарних похщних зв'язок, крiм p0, що для будь-яких
a, bе A , таких, що a Ф b та aе D ^ aе D, юнуе таке vе 3, що v(a)е D ^ v(b)& D .
Далi ми уводимо скiнченнy синтаксичну конструк^ю (визначення 1), яка пов'язана з M i 3 та використовуеться по™ для побудови вщповщних секвен^ального числення (визначення 2 та теорема 2) i скiнченноí точно! yнiверсальноí ХорновськоТ теорií першого порядку без рiвностi (роздiл 3), та доводимо ТТ iснyвання (теорема 1). Спочатку ми уводимо узагальнене поняття лтери.
Нехай W i V. W-Лтера - це будь-який елемент множини W u{v(w) | vе 3, w е W}. Множина уах W-лiтер позначаеться Lit(W). V-ГПтери називаються просто лтерами. Секвен^я Г ® А називаеться (W-) лтерною, якщо Г U А складаеться з (W-)лiтер.
Визначення 1. Секвен^альна (3, L) -таблиця для M - це будь-яка пара Т = (l, р) вщображень
множини (L \ 3)u(L х3) в множину скшченних множин лiтерних секвенцiй, таких, що для уах n > 0 i кожноТ n-арноТ /не L :
1)	якщо /!£ 3, то Л(/) i р(н/ складаються з {p1,..., pn}-лiтерних секвенцiй, таких, що для yсiх a1,..., an е A, /(a1,..., an )е D т.т.т.к. деяка секвенцiя iз l(/) хибна в M при штерпретацп [pj / a1,..., pn / an ] в A т.т.т.к. кожна секвен^я iз р(н) iстинна в M при штерпретацп
[pj aJ,..., Pn / an] в A;
2)	для уах v е 3 , l(/, v) i р(/, v) складаеться з {pj,..., pn}-лiтерних секвенцiй, таких, що для уах aj,..., an е A , v(/(a1,..., an ))е D т.т.т.к. деяка секвен^я iз l(/, v) хибна в M при штерпретацп [pj / aj,..., pn / an ] в A т.т.т.к. кожна секвен^я iз р(/, v) iстинна в M при штерпретацп [ pj / aj ,... , pn / an ] в A.
Теорема 1. Теорема юнування. 1снуе секвенцiальна (3, L) -таблиця для M.
Доведення: спочатку уведемо певн корисн позначення. Розглянемо довтьш aе A та 1 £ i £ n . Множину yсiх {pi}-лiтер у, таких, що g[pi / a]е D(f D), позначимо Pi (a)(N{ (a))вщповщно). Вiдзначимо, що
a = b ^"уе Pl (a) :g[p i / Ь]е D та "уе Nl (a) :g[p i / b]g D
(1)
для yсiх b е A .
Розглянемо довтьш п > 0 та п-арну /те Ь . Спочатку розглянемо довтьну Vе 3 . Ураховуючи (1), ми бачимо, що Л{/, V) :={и\<г<„Рг {аг )®и\<г<„Мг {аг) | а\,..., ап е А, v{/{a\ ))е О} - скiнченна множина {р\,..., рп }-лiтерних секвенцiй, таких, що для усх а\, ..., ап е А, v{/{al, ..., а„ ))е О т.т.т.к. деяка секвенцiя iз Л{/, V) хибна в М при штерпретацп \р\ / ах,..., рп / а„ ] в А. Аналопчно
Р{/ V) :={и\<г<„Рг {аг )®^\<г<„^г {а, ) 1	а„ е А А/{а\ У)^ О}	-	CKiHЧеHHа	множина
{Р\,..., р„ }-лiтерних секвенцiй, таких, що для усх а\,..., а„ е А, v{/{a\, ..., а„ ))е О т.т.т.к. кожна
секвенця iз р{/, V) ютинна в М при iнтерпретацií \р\ /а\,..., р„ /а„ ] в А. Далi припустимо, що 3 . Тодi,	ураховуючи	(1),	ми	бачимо,	що
Л{/) :={и\<г<„ Рг {аг )®^\<г<„Кг {аг ) 1 ^^^ а„ е А	ап )е О} -	скнченна	множина
{Р\,..., рп } -лiтерних секвенцш, таких, що для усiх а\,..., ап е А, //{а\, ..., а„ )е О т.т.т.к. деяка секвенця iз Л{/) хибна в М при штерпретацп \Р\ / а\,..., р„ / а„ ] в А. Аналопчно
Р{/) :={^\<г<„Рг {аг )® и\<г<„ N г {аг ) 1 а\ ,..., а„ е А /l{a\,..., а„ ^ О} - скнченна множина
{Р\,..., рп } -лiтерних секвенцiй, таких, що для усх ах, ..., а„ е А,/{а\, ..., ап )е О т.т.т.к. кожна секвенця iз р{/) i стинна в М при i нтерпретацií \р\ / а\,..., р„ / а„ ] в А. Таким чином, отримано секвенц альну
{3, Ь) -таблицю Т = {Л, р)для М. □
В i дзначимо, що доведення теореми 1 е конструктивним. Ефективна процедура, яку можна витягти з нього, надае можлив i сть знайти секвенц i альну таблицю, яка, у свою чергу, е структурою вхщних даних для ефективно! процедури м^ мi зац i I секвенцi альних таблиць, що буде подана в i нш i й робот.
Визначення 2. Нехай Т = {Л, р) - секвенц i альна {3, Ь) -таблиця для М. Числення С{М, Т)
складаеться з таких акс ом та правил:
1) для кожно! w е V, довiльних ск i нченних множин лтер Гi А, кожноí {р0}-лiтерноí секвенцií 0® X , що загальнозначима в М, акс ома Г и 0[р0 / w]®Аu х[р 0 / w];
2) для кожного п > 0, кожноí п-арно! /е Ь / 3 , довтьних формул (\,...,р„ та довтьних ск i нченн
их
множин формул Г i А правило з посилками	вигляду
Г и0[р\/ р\,..., рп/рп ]®Аих[р\/р\,..., рп/рп ], де 0®хеЛ{/), i	висновком
Г и {/{р\,..., р„ )}®А та правило з посилками	вигляду
Г и0[р\/р\,..., рп/рп ]®Аих[р\/р\,..., рп/рп ], де 0 ® X е р{/), i	висновком Г ®Аи{М{р\,...,р„)};
3) для кожного п > 0, кожноí п-арно! /е Ь , кожноí Vе 3, довтьних формул рх,...,рп та довтьних
сю нченних множин формул Г i А правило з посилками	вигляду
Г и0[р\/р\,..., рп/рп ]®Аих[р\/р\,..., рп/рп ], де 0®ХеЛ{/, V), i	висновком
Г и\у{/{р\,..,р„ ))}®А та правило з посилками	вигляду
Г u0[p, / j,..., pn /jn Aus[p, / j,..., pn /jn ], де 0®хер(/, v), i висновком
Г ®Au{v(m(jJ,..., jn))}.
Наступна теорема узагальнюе вiдповiднi теореми KopeKTHOCTi та повноти, що доведет у [10, 11, 12]. Теорема 2. Теорема коректност та повноти. Нехай T = (l, р)- секвен^альна (3, L) -таблиця для
M. Тoдi сeквeнцiя мае виведення в числены C(M, T) т.т.т.к., вона загальнозначима в M.
Доведення: узагальнюе доведення вщповщних тверджень i3 [11, 12]. (Через те, що замша головних зв'язок похщними збер^ае загальнозначимють секвенцш та налeжнiсть аксioм i правил до вщповщних вepсiй
числення C(M, T), досить довести теорему 2 ттьки для випадку, коли 3 складаеться з головних зв'язок.)
Вщзначимо, що ус правила C(M, T)та правила, що обернет до них, е загальнозначимими в M. Зокрема, ми
безпосередньо отримаемо доведення необхщностг Достатнють доведемо шдук^ею за ступенем Э секвенцш, який визначаеться таким чином.
Спочатку визначимо ступнь Э формул шдук^ею за Тх складтстю, установлюючи:
-	Э(^) := Э^^)) := 0, де wе V та vе 3;
-	^(jl,...,jn)):=э(у(т(ф1.,...^п))):=j+Sj£,.£n(j)+^3Э(^г))), де теL 13, vе3 та jj,...,jn - довтьт формули;
-	Э(v(m(j))) := 1 + Э( j) + Э(^Ы), де m, v е 3 та j-дoвiльна формула.
(Вщзначимо, що Э^) = 0, де j - дoвiльна формула, т.т.т.к. j- лiтepа.) Далi, для довтьно'Т сeквeнцiТ Г ®A, установимо Э(Г ®A) := Э(j)+ ZyeA Э((). (Вщзначимо, що Э(Г ®A)= 0 т.т.т.к. сeквeнцiя Г ® A - лтерна.)
Розглянемо дoвiльну секвен^ю Л ® П , що загальнозначима в M.
Спочатку припустимо, що Э(Л®П)= 0. Вщ супротивного доведемо, що для деякоТ w е V сeквeнцiя (Л П Lit({w})) ®(Пп Lit({w})) е загальнозначимою в M. Припустимо, що для уах w е V iснуе iнтepпpeтaцiя hw в A, при якш (Л П Lit({w}))®(nn Lit({w})) хибна в M. Визначимо штерпретацп h в A, установлюючи h(w) := hw (w) для уах w е V. Очевидно, що сeквeнцiя Л®П хибна в M при штерпретацп h. Це суперечить ТТ зaгaльнoзнaчимoстi в M. Таким чином, юнуе така w е V, що сeквeнцiя (Л П Lit({w}))®(nn Lit({w})) загальнозначима в M. Установимо 0 := (Л П Lit({w}))[w / p0 ]та X := (П П Lit ({w}))[w / p 0 ]. Тoдi 0®X- {p 0 } Штерна сeквeнцiя, яка загальнозначима в M. Таким чином, згщно з визначенням 2.1), установлюючи Г := Л \ Lit({w}) та A := П \ Lit({w}), ми бачимо, що Л®П - aксioмa числення C(M,T), тому вона, очевидно, мае виведення в ньому.
Дaлi припустимо, що Э(Л ® П)> 0. Тoдi iснуе (е ЛиП , яка не е лтерою. В цьому paзi iснують n > 0, формули jj,...,jn та n -арна /те L , таю, що або 3 i ( =/j,..., jn), або ( = v(m( jj,..., jn)) для деякоТ vе 3 . Припустимо, що (е Л (випадок, коли (е П розглядаеться аналопчно). Згщно з визначенням 2.2)-3), установлюючи Г := Л \ {(} та A := П , ми бачимо, що C(M, T)
мi стить правило з висновком Л ® П та посилками, ступ нь яких менше, нж Э{Л ® П). Ус i посилки такого
правила загальнозначимi в М. Тод, за i ндукц i йним припущенням, ус посилки цього правила мають виведення
в C{M, T). Таким чином, його висновок Л ® П також мае виведення в C{M, T). □
В щзначимо, що доведення теореми 2 конструктивне. Ефективна процедура, яку можна витягти з нього i яка використовуе (як структуру вхщних даних) деяку секвенц i альну таблицю (що знайдена теоретично або отримана внаслщок мi н мi зац и), дае алгоритм розв'язання проблеми i снування виведення секвенц и в численнi,
що задаеться визначенням 2 у випадку, коли 3 складаеться з головних зв'язок (роздт 3).
Зазначимо деклька корисних наслщк в теореми 2, як узагальнюють вi дпов i днi результати роб i т [10, 11, 12]. Насамперед, використовуючи теорему 2 та теорему компактност щодо синченнозначних лог к [14], ми
робимо висновок, що вi дношення наслщування М акс оматизуеться численням C{M, T)у такому розумi ннi.
Наслi док 1. Для усх X с FL та ре FL , ре CnM {X) т.т.т.к. i снуе скнченна Г с X , така, що
секвенц я Г ®р мае виведення в C{M, T).
Далi вi дзначимо дек лька синтаксичних властивостей числення C{M, T), як можна легко довести, використовуючи теорему 2.
На^ док 2. Структуры правила (включаючи перерi з), допустимi в C {M, T).
На^ док 3. Правила числення C {м, T) оборотнi.
Завершуючи цей роздiл, ми зазначимо дектька нескi нченних ^ченних) класi в скнченнозначних лог к, до яких придатний наш пщхщ.
2.1.	Двохзначн лог>ки. Нехай А :={/, ^ и О :=^}. Тод i 3 = 0 - визначник рi вност для М. единою
{p0}-л i терною секвенцi ею, що загальнозначима в М, е {р0}® {р0}. У раз i ^а^чно! лог ки можна легко
п^ брати {Ь, 3) -секвенц i альну таблицю Т для М, таку, що C{M, T) е добре в щомою версi ею числення Генцена 1-К [4, 5].
2.2.	Трьох- i чотирьохзначн логiки з'1 слабким запереченням. Нехай унарна зв'язка слабкого заперечення —I е Ь, {/, А с{/, t, п, Ь}, О := А п{, Ь}, —/ е Б, —t < Б, —п < О (якщо п е А) та —Ь е О (якщо Ь е А). Тодi 3 = {—} - визначник рi вност для М. единими {р0} -лiтерними секвенцi ями, що
загальнозначимi в М, е {р0	0}, 0®{ро, —р 0} (т.т.т.к. п < А) та {р0, —р0 }®0 (т.т.т.к. Ь < А).
Цей клас лог к охоплюе чотирьохзначну лог ку Белнапа [3], íх рiзноманiтнi розширення, як вивчалися у [12] (включаючи лог ку, що акс оматизуеться численням Попова [9]), трьохзначну лог ку Клин i , суперi нтуíц i онi стську трьохзначну лог ку Гьоделя [16], трьохзначн паранесуперечлив i лог ки та багато i нших. У роботах [10, 11, 12] були уведен та вивчен числення щодо деяких iз зазначених лог к (або (х фрагмент в). Цi числення можна отримати iз певних таблиць, використовуючи визначення 2. Зазначен роботи мi стять також результати, як випливають з теореми 2 та наслщк в 1, 2 i 3.
2.3.	Сюнченнозначш логки Лукасевича та Поста. Нехай п > 2, Ь := {—,А,У, з}, де —,А,У, 3-зв'язки заперечення, кон'юнкцп, диз'юнкцií та i мплi кац i í вщповщно, М - п-значна лог ка Лукасевича з множиною i стинносних значень А :={0, . . . ,п — \}, множиною в iдзначених i стинносних значень О :={п — \} i операц i ями, що визначен таким чином: —а := п — \ — а, а А Ь := тт{а, Ь), а V Ь := тах{а, Ь) i а 3 Ь := шт{п — \ + Ь, п — !). Як вi домо, А мае похi днi операц и 0\,..., Оп—2, так, що
Gi (a) := min(max((n -1 )(a - i + l),0 ), n - 1 ), де 1 < i < n - 2 i a, b e A . Легко побачити, що
3 = {G1,..., Gn-2}- визначник piBHOCTi для M. Таким чином, сюнченнозначш логiки Лукасевича охоплюються
нашим пщходом. Це також стосуеться лопк Поста та iнших фунцiонально повних лопк. (Нагадаемо, що n-значну лопку Поста (так як i будь-яку iншу функцiонально повну n-значну логiку) можна отримати з n-значноТ логiки Лукасевича додаванням до L деяких зв'язок.)
3. Процедури виведення у численнях, що розглядаються
Зафксуемо скiнченну пpопозицiйну мову L, скнченнозначну L-логiку M, визначник piвностi 3 , що складаеться виключно з головних зв'язок, для M i секвенцальну (3, L) -таблицю T = (l, р) для M. Проблему юнування
виведення фiксованоТ секвенцп в численнi C(M, T) можна звести до проблеми суперечност певноТ скiнченноТ унверсальноТ ХорновськоТ теоpiТ, яка, у свою чергу, мае розв'язок. При цьому процедуру розв'язання другоТ проблеми (яка фактично е детермшованою процедурою оберненого виведення в численн
C (M, T) можна pеалiзувати в системах декларативного програмування, таких, як АПС [1, 2] або Пролог. Слщ
вщзначити, що штерактивний iнтелектуальний прувер, pеалiзований у АПС, узагальнюе пошук виведення у логчному пpогpамуваннi. Тому заради стислостi викладення достатньо вивчити питання pеалiзацiТ процедури
оберненого виведення в численн C (M, T) лише для Пролога.
Вщзначимо, що пpопозицiйнi змiннi iнтеpпpетуються функцональними константами. Таким чином, пpопозицiйнi формули штерпретуються основними термами (нагадаемо, що пропозицшш зв'язки - це функцюнальш символи). 1нтерпретуючи скiнченнi множини списками, ми, таким чином, штерпретуемо лiвi i пpавi частини секвенцiй списками основних теpмiв. Для iнтеpпpетацiТ секвенцш ми використуемо тетрарний предикатний символ seq. 1нтуТтивно, якщо Г i А - списки формул та 0 i X - списки лтер, то вираз seq( Г, 0, А, х) ототожнюеться з секвенцею Г U0® AuS . Ми також використовуемо вбудований у
Пролог бшарний предикат member. (Нагадаемо, що member(j, Г) означае, що j е елементом списку Г ).
Зараз ми покажемо, як, виходячи з логки M i секвенцальноТ таблиц T, можна побудувати Пролог-програму Р(М, Т), яка завершуеться на запитах, що штерпретують секвенцiТ, i е такою, що довiльна секвенця мае виведення в C (M, T) т.т.т.к., вiдповiдний запит отримуе позитивну вiдповiдь в Р(М, Т). Визначення 3. Пролог-програма Р(М, Т) складаеться з такоТ послщовност правил:
1)	для кожного n > 0 i кожноТ n-арноТ jie L / 3 так два правила:
seq([m(P1,..., Pn) | X], W, Y, Z ): -{seq([0[A / Pl,..., pn / Pn] | X], W, [s[pi / Pl,..., pn / Pn] | Y] Z )|0®Sel(m)}}.
seq([ 1W, [m(P1,..., Pn) | Y], Z): -{seq(0[p1 /P1,..., pn /Pn],W, [s[p1 /P1,..., pn /Pn] | Y], Z ) | 0®Sep(m) }}.
2)	для кожного n > 0, кожноТ n-арноТ jie L i кожноТ ve 3 так два правила:
seq([v( j(P1,...,Pn) ) | X], W, Y, Z ): -{seq([0[A /P1,...,pn /Pn] | X], W, [s[px /P1,...p„ / P^Y, Z ] | 0®Sel(m, v) }}.
seq([],W, [v( j(P1,...,Pn) )| Y],Z): -{seq{0[pl /P1,...,pn /Pn], W, [s[p1 /P1,...,pn /Pn]| Y],
Z ) | 0®Se p(m, v)}}.
3)	seq([L | X], W, Y, Z): -seq{X, [L | W], Y, Z). seq([], W, [L | Y], Z): -seq([\W, Y, [L | Z]).
4)	для кожноТ {p0}-л i терноТ секвенц ii 0 ® X , що загальнозначима в M, таке правило:
seq([], X,[], Y): -{member jjp0 / P], X ) jt 0}, {member(y[p0 / p], Y) x}.
(Порядок речень у програмi може в i др iзнятися в iд зазначеного вище. Однак групи речень 1) i 2) мають передувати реченням 3).)
Теорема 3. Секвенц я Г ® А мае виведення в C (M, T) т.т.т.к., запит seq(Г, [],А, []) отримуе
позитивну в щпов i дь в Р(М, Т). При цьому процедура вi дпов i дi на зазначений запит, яка реалi зуеться
i нтерпретатором Пролога, завершуеться.
Доведення: В iдзначимо, що ус i (головнi та промi жн) запити, що мi стять предикат seq, е основними. Далi у запитах, що мi стять предикат member, другий терм е основним. Тому при ун фi кац i Т перевi рка на уходження змi нноТ не потрi бна. (Нагадаемо, що у Пролозi використовуеться спрощений алгоритм ун фi кац i Т, без перевi рки на уходження змi нноТ.) Тодi, використовуючи наслщок 3 (оборотнi сть правил) i конструктивне доведення теореми 2, неважко перев i рити твердження теореми 3. □
Як приклад, розглянемо програму, що в i дпов i дае численню Генцена LK [4, 5] щодо класичноТ лог ки, де conj - кон'юнкц я, disj - диз'юнкцi я, impl - i мплi кац i я та neg - заперечення:
seq(\conj(P\ P2) | X] W, Y, Z): -seq{[Pl, P2 | X], W, Y, Z).
seq([disj(P1, P2) | X], W, Y, Z): -seq([P11X] W, Y, Z), seq([P2 | X], W, Y, Z).
seq(impl[(P\, P2) | X], W, Y, Z): -seq(X, W, [P11 Y] Z), seq([P2 | X], W, Y, Z).
seq([neg(Pi) | X] W, Y, Z): seg(X, W, [P11Y], Z).
seq([L | X], W, Y, Z): -seq(X, [L | W], Y, Z).
seq([l W, [conj(P1, P2) | Y], Z): -seq([l W, [Pi | Y], Z), ([], W, [P2 | Y] Z).
seq([l W, [disj{P\P2) | Y], Z): -seq([lW, [Pi,P2 | Y], Z).
seq([\ W, [impl(pPi, P2) | Y] Z): -seq([Pi], W, [P2 | Y], Z).
seq([\ W, [neg(Pi) | Y], Z): -seq([Pi], W, Y, Z).
seq([\ W, [L | Y], Z): -seq([\W,Y, [L | Z]).
seq([], X, [],Y): -member(P, X), member(P, Y).
Аналогчш програми побудован для числень, що уведен у роботах [9, 10, 11, 12]. Висновки
Таким чином, доведено, що можна побудувати секвенц альн числення без структурних правил (але з допустимими структурними правилами) для довтьних пропозицйних синченнозначних лог к з визначником рi вност. Оскiльки зазначен числення можна i нтерпретувати точними ун версальними Хорновськими теорi ями та процедура ц леспрямованого виведення для даних теорi й, що реалi зована в таких системах програмування, як АПС або Пролог, i м^е процедуру оберненого виведення в зазначених численнях, можна говорити про
реалiзацiю лопчно'Т задачi пошуку виведення в численнях, побудованих для скшченнозначних лопк з визначником рiвностi, засобами АПС та Пролога.
СПИСОК Л1ТЕРАТУРИ
1.	Kapitonova J.V., Letichevsky A.A., Konozenko S.V. Computations in aps // Theoretical Computer Science. - 1993. - Vol. 119. -P. 145 -171.
2.	Капитонова Ю.В., Летичевский А.А. Об обработке математических текстов в системе алгебраического программирования // Штучний Ытелект. - 2000. - Т. 3. - С. 459 - 465.
3.	Belnap N.D. A useful four-valued logic // Modern uses of multiple-valued logic. - Dordrecht: D. Reidel Publishing Company, 1977. - P. 8 - 37.
4.	Gentzen G. Untersuchungen über das logische Schlißeen (I) // Mathematische Zeitschrift. - 1934. -- Vol. 39. - P. 176 -210.
5.	Gentzen G. Untersuchungen über das logische Schließen (II) // Mathematische Zeitschrift. - 1934. - Vol. 39. - P. 405 - 431.
6.	Schröter K. Methoden zur Axiomatisierung beliebiger Aussagen- und Prädikatenkalküle // Zeitschrift für Mathematische Logik und Grundlagen der Mathematik. - 1955. - Vol. 1. - P. 214 - 251.
7.	Rousseau G. Sequents in many-valued logic (I) // Fundamenta Mathematicae. - 1967. - Vol. 60. - P. 171 - 181.
8.	Baaz M., Fermüller C.G., Salzer G. Automated deduction for many-valued logics // Handbook of Automated Reasoning. -Amsterdam: Elsevier Science Publishers, 2001. - P. 1356 - 1402.
9.	Попов В.М. Секвенциальные формулировки паранепротиворечивых логических систем // Синтаксические и семантические исследования неэкстенсиональных логик. - М.: Наука, 1989. - С. 285 - 289.
10.	Пынько А.П. Структурный семантический подход к построению пропозициональных логических систем: Препр. / Российская АН. Ин-т космических исследований; Пр-1815. - М.: 1992. - 33 с.
11.	Pynko A.P. Characterizing Belnap's logic via De Morgan's laws // Mathematical Logic Quarterly. - 1995. - Vol. 41, № 2. - P. 442 - 454.
12.	Pynko A.P. Functional completeness and axiomatizability within Belnap's four-valued logic and its expansions // Journal of Applied Non-Classical Logics. -1999. - Vol. 9, N. 1. - P. 61 -105.
13.	Общая алгебра: В 2 т. - М.: Наука, 1991. - Т. 2. - 480 с.
14.	Los J., Suszko R. Remarks on sentential logics // Ruch Filozoficzny. - 1958. - Vol. 5. - P. 177 - 183.
15.	Zygmunt J. Entailment relations on logical matrices (I) // Bulletin of the Section of Logi. - 1979. - Vol. 8. -- P. 112 - 115.
16.	Gödel K. Zum intuitionistischen Aussagenkalkül // Anz. Akad. Wiss. Wien. - 1932. - Vol. 69. - P. 65 - 66.

=====

        


﻿УДК 004.9:35.075.5
В.В. КАЗИМИР, В.П. ШЕМЕТ
МОДЕЛ1 ОЦ1НКИ ЕФЕКТИВНОСТ1 СИСТЕМ УПРАВЛ1ННЯ РЕПОНАЛЬНОГО Р1ВНЯ
1.	Вступ
Розбудова молодо! держави вимагае вщповщних змiн у структурi та функцюнуванш рiзних гiлок влади. Перехiд вщ централiзованого до децентралiзованого управлiння приводить до змщення акцентiв на регюни i вимагае деталь-них наукових дослщжень. Це пiдтверджують i матерiали щорiчноí мiжнародноí науково-практично1 конференцií "Ефективнють державного управлiння - регiональний аспект" [1].
В Укра1'ы виконавча влада репонального рiвня зосереджена в обласних адмшютративних центрах, якими виступають обласн державнi адмiнiстрацií (ОДА). В межах сво'х повноважень ОДА здiйснюють виконавчу владу на територп областi, а також реалiзують повноваження, делегованi !м обласною радою. ОДА забезпечують на тери-торií областi виконання державних i регiональних програм соцiально-економiчного та культурного розвитку, про-грам охорони довктля, пiдготовку та виконання обласного бюджету; взаемод^ з органами мюцевого самовряду-вання, реалiзацiю iнших наданих державою, а також делегованих обласною радою повноважень.
Сво1 задачi ОДА виконують через систему управлiння репонального рiвня (СУРР), яка, насамперед, е системою управлЫня iнформацiйними потоками i використовуе iнформацiйнi технологií для пщвищення ефективностi роботи регiональних адмЫстративних центрiв.
На сучасному рiвнi розвитку Ыформацмних технологiй одним iз найбтьш дiйових засобiв пiдвищення яко-ст i науковоí обфунтованост управлiння реально функцюнуючих систем е задача формування вщповщних моделей систем управлЫня [2]. В той же час юнук^ дослщження систем управлiння репонального рiвня враховують або структуру, або окремi процеси функцiонування системи управлЫня. Наприклад, у статтi [3] розглянуто засто-сування iмiтацiйних моделей для дослщження соцiально-економiчних процесiв (споживчий вид дiяльностi насе-лення), а в статт [4] розглянутi моделi для прийняття ршень по капiтальному ремонту та реконструкцп жилого фонду великого мюта.
Метою даноí статтi е пошук загального пiдходу до моделювання СУРР, який би враховував одночасно i структуру, i процес функцюнування системи управлiння. В рамках виршення цiеí задачi пропонуеться комплексне використання анал^ичних та iмiтацiйних моделей для оцЫки ефективностi СУРР. Розгляд запропонованого пщхо-ду проводиться на прикладi моделювання системи управлiння Чернiгiвськоí обласно1 державноí адмiнiстрацií, яка вже мае свою власну веб-сторну в 1нтернет [5], до речi, вперше серед ОДА Украши.
2.	lнформацiйнi потоки в ОДА
ЧернИвська ОДА мае iерархiчну структуру, яка включае обласн управлiння, територiальнi органи виконавчоí влади, райдержадмУстрацп, райвиконкоми та мюьквиконкоми. Всi iнформацiйнi потоки, якi проходять, повинн реест-руватися у загальному вщд^ ОДА [6]. Для прикладу вiзьмемо Постанову Кабiнету Мiнiстрiв (КМ) Украши, структурна схема проходження яко1 в ОДА зображена на рис. 1.
Рис. 1. Структурна схема проходження Постанови КМ УкраТни ^м власних Ыформацмних потош, ОДА опрацьовуе Ыформацю, що надходить до не' вщ центральних та мiсцевих органiв влади. Структурна схема зовшшых iнформацiйних потош ЧернИвськоТ обласноТ державно' адмiнiстрацií зображена на рис. 2,
де АП - АдмУстращя Президента УкраТ-ни;
КМ - КабЫет Мiнiстрiв УкраТни; ДК - мiнiстерства, державнi ком^ети, державнi фонди, iншi органи виконавчоТ влади;
ОДА - обласна державна адмУстраця; ТОУ - обласнi управлiння, територiальнi органи виконавчоТ влади; РА, МВ - райдержадмiнiстрацiТ, райви-конкоми, мiськвиконкоми.
Пiсля аналiзу даних про Ыформацм-нi потоки в ЧернИвсьш обласнiй держа-внiй адмУстрацп за 1999 - 2000 рр. маемо Ыформацю наведену на рис. 3, iз якого видно, що вщношення вхiдних У формацмних потокiв до вихiдних мае максимальне значення мiж обласною державною адмУстращею та Кабiнетом Мiнiстрiв УкраТни на державному рiвнi, а також мiж райдержадмiнiстрацiями, рай-виконкомами, мiськвиконкомами та обла-
Рис. 2. Структурна схема зовншых iнформацiйних потокiв
ОДА(АП) ОДА(КМ) ОДА(ДК)
Рис. 3. Вщношення вхщних потош до вихщних
сною державною адмУстрацею на обласному рiвнi. Це свщчить про значно бiльший пош документiв суб'екта управлiння до об'екта на вертикалi управлiння Кабiнет Мiнiстрiв УкраТни - обласна державна адмУстраця - ра-йонна державна адмУстращя.
3. Анал^ична модель iнформацiйних потокiв
Для дослщження iнформацiйноí системи Держадмiнiстрацií скористаемось потоковою моделлю [6], вхiдними еле-ментами якоí будуть iнформацiйнi ресурси, що надходять iз зовнiшнiх джерел Ыформацп, а вихiдними - Ыформа-цiя, що спрямовуеться в центральн i мiсцевi органи управлiння (рис. 4),
де Х1 - документи, що надходять iз мiсцевих
Х1
У1
Х 2	У 2
Рис. 4. Модель Ыформацмно!' системи держадмУстрацп
оргаыв управлЫня (обласнi управлiння, районнi адмiнiстрацií);
Х2 - документи, що надходять iз центральних
органiв управлiння (Адмiнiстрацiя президента, КабЫет Мiнiстрiв, державнi комiтети);
У1 - документи до мiсцевих органiв управлiння; У2 - документи до центральних оргаыв управ-
лiння.
Як математична модель процеав проходження Ыформацп була використана задача лiнiйного програму-вання. Цiльова функцiя, що визначае кориснють iнформацií для прийняття управлЫських рiшень, мае вигляд
р = ЁУгтг = у^ + у2г2 ®
тах
(1)
г=1
де У1 - коефiцiент корисностi iнформацií, що надходить у мiсцевi органи (0 < У1 £ 1);
У2 - коефщент корисностi iнформацií, що надходить у центральн органи управлiння (0 < У2 £ 1). Обмеження, яга мае система, будуть мати такий вигляд:
с V + с V £ Л ■
1 ~ 2 — и1 '
с V + с V £ Л ■
21 1 22 2 2
с31^1 + с32^2 £ Л3'
(2)
де с11 - норма використання iнформацií з мiсцевих органiв управлiння для пщготовки документiв в мюце-вi органи, байт/байт;
"12
норма використання Ыформацп з мюцевих органiв управлiння для пщготовки докумен^в в
центральнi органи, байт/байт;
с21 - норма використання Ыформацп з центральних органiв управлЫня для пiдготовки документiв в мiсцевi органи, байт/байт;
с22 - норма використання Ыформацп з центральних оргаыв управлiння для пiдготовки документiв в центральн органи, байт/байт;
с31 - норма часу на пщготовку документа в мiсцевi органи управлiння, год/Кбайт;
с32 - норма часу на пщготовку документа в центральн органи управлЫня, год/Кбайт;
d1 - ктькють iнформацií, що надходить в систему з мюцевих оргаыв управлiння за перiод дослщжен-
ня, М байт, тобто ^ = Ъ11 + Ъ21;
d 2 - кiлькiсть iнформацií, що надходить в систему з центральних оргаыв управлЫня за перiод досль дження, М байт, тобто d2 = а11 + а21 + а31;
d3 - час обробки вах документiв за перюд дослiдження, тис. годин.
Норми використання Ыформацмних ресурсiв визначалися з обсяпв iнформацií, що надходить, i обсягiв iнформацií на виходi системи, а норми використання часу - засобом експертних оцЫок шляхом опитування служ-бовцв Чернiгiвськоí облдержадмiнiстрацií.
Графiчне зображення системи обмежень моделi Ыформацмно! системи Чернiгiвськоí облдержадмУстра-цií наведено на рис. 5.
У2
М байт 116
С
N
13.9
0	89	200	325 м байт у1
Рис. 5. Система обмежень моделi iнформацiйноí системи облдержадмУстрацп
Представлений варiант вiдображаe наявнi Ыформацмы потоки за 2000 рiк. Заштрихована частина - це область припустимих ршень. Обмеження 1 i 2, що накладен на iнформацiйнi потоки, залежать вщ потреби в звт ностi перед вищестоящими органами Державного управлЫня i потреб в Ыформацп управлiння для мiсцевих орга-ыв. Обмеження 3 визначаеться часом обробки Ыформацп.
Як видно iз рис. 5, задача може мати оптимальне ршення в однм iз трьох точок: А, С або О. Але точки С i О не пщходять, тому що при ршены в точц С система не буде мати зворотного зв'язку, а при ршены в точц О не буде зв'язку з вищестоящими органами Державного управлЫня. Тому залишаеться лише точка А. Область можли-вих уявлень функцп V при и проходженнi через точку А приведена на рис. 6.
Вщповщы значення коефiцiентiв корисностi Ыформацп в цiй зонi будуть дорiвнювати
0.06 < < 0,2.
V
(3)
Рис. 6. Область можливих уявлень функцп Р в точц А
Таким чином, точка А характеризуе оптимальний обсяг Ыформацп, що обробляеться в заданих обмежен-нях. Обмеження, яга накладаються часом обробки iнформацií, знаходяться за межами област припустимих ршень (рис.5). Це означае, що час обробки не е критичним параметром системи. До перетину з точкою А пряма 3 не на-кладае додаткових обмежень, тобто зменшення часу обробки Ыформацп в цих межах не змЫюе оптимальних зна-чень корисност iнформацií. Скорочення часу обробки Ыформацп на 24.3 тис. годин приведе до паралельного переносу прямо! 3 в напрямку припустимих ршень, i вона торкнеться точки А. Вщповщно змiниться значення виразу (3), i вiн буде мати вигляд
V
0,06 < < 0,6 .	(4)
V2
Подальше перемщення прямо' 3 приведе до появи ново' вершини багатокутника, який обмежуе область припустимих ршень, тобто вiдбудеться зниження рiвня корисностi iнформацií, що опрацьовуеться.
Як видно iз виразiв (3) та (4), V2 > V1, тобто коефщент корисностi iнформацií, що надходить в центральн органи управлЫня, не може бути меншим вщ коефiцiента корисностi iнформацií, що надходить в мiсцевi органи.
Для оцЫки коефiцiентiв математичноí моделi, зокрема, часу обробки докумен^в (<^3), необхщно викорис-тати iмiтацiйне моделювання.
4. Iмiтацiйне моделювання СУРР
Ытацмне моделювання - це дослiдження системи шляхом проведення статистичного експерименту iз створеною математичною моделлю. У процес розробки iмiтацiйноí моделi використовуються три рiвнi представлення системи, що пщлягае моделюванню:
-	концептуальний;
-	формалiзований;
-	програмний.
Концептуальна модель - це опис системи, виконаний звичайною мовою. Формалiзована модель - це опис концептуально! моделi формальними засобами за допомогою формул та алгоритмiв. Програмна модель - це опис формалiзованоí моделi за допомогою мови програмування для безпосередньо! реалiзацií на ЕОМ.
Для прикладу концептуально! моделi вiзьмемо структурну схему проходження Постанови КМ Укра'ни, зо-бражену на рис. 1.
4.1. Формалiзована модель ОДА
З точки зору показнигав, що використовуються при виборi методiв та засобiв побудови моделей СУРР [7], краще використати систему iмiтацiйного моделювання (С1М), описану в [8], тому що:
1)	вже е практична реалiзацiя С1М;
2)	С1М дозволяе автоматизувати процес створення i дослiдження iмiтацiйних моделей;
3)	С1М дозволяе створювати формалiзованi моделi, якi описуються процедурами, доступними для розу-мiння спецалютами рiзних галузей знань, що не мають вiдповiдних знань в област iмiтацiйного моделювання.
С1М передбачае використання трьох арх^ектурних рiвнiв при побудовi формалiзованоí моделi:
-	рiвень моделей для побудови агрегатно' моделi;
-	рiвень агрегатiв для опису внутршньо''' структури агрегатiв за допомогою Е-мережних переходiв;
-	рiвень переходiв для реалiзацií правил виконання Е-мережних переходiв.
Як формальний апарат для опису внутршньо''' структури агрегатiв в С1М вибрано Е-мережi [9]. В Е-мережних схемах агрегатiв переходи та позицп позначаються символiчними iменами, у яких буква характеризуе перехщ або тип позицп (Т - перехщ, Б - проста позицiя, К - позиця, що дозволяе перехщ), а число - порядковий номер переходу або позицп.
У нашому випадку агрегати - це об'екти СУРР (загальний вщдт, начальник вщдту, начальник управлЫня, заступник голови, голова), Ыформацмний обмiн мiж якими здмснюеться шляхом передачi мiток з атрибутами (до-кументiв): Постанова КМ Укра'ни (первинний документ) i листи та вщпов^ на не' (вториннi документи).
Кожний агрегат (голова ОДА, заступник голови ОДА, загальний вщдт, начальник управлЫня, начальник вщдту) описуеться Е-мережею [10], яка вщображае процес функцюнування вiдповiдного структурного елемента СУРР. Як приклад на рис. 7 зображена Е-мережа агрегату для загального вщдту ОДА.
Я7
Я9
81 О-
-И1
Г1 81
Т1
82 . 815 О-
Т3
83 ■ 816
О—и—►<>
Т4
84 О-
Т5
Т5
85 I 818
85 | 87
—иэ—И—►о—н
88
Т2
Т8
Т6
Т7
Рис. 7. Агрегат загального вщдту
89 -ХЭ
810 ->о
811 ->о
812 -►о
813
Т9
Процедура R7, що дозволяе перехiд (рис. 7), керуе опрацюванням позицiй на переходi T7, до якого надхо-дить iнформацiя з позицiй: S1 - вщ КМ УкраТни, S2 - вщ голови, S3 - вщ заступника голови, S4 - вщ начальника управлiння, S5 - вщ начальника вiддiлу. Пiсля тимчасовоТ затримки на переходi T2 об'ект потрапляе в чергу T8, яку опрацьовуе процедура R9, що дозволяе перехщ. Пюля цього Ыформа^я потрапляе через тага позицп: S9 - до КМ УкраТни, S10 - до голови, S11 - до заступника голови, S12 - до начальника управлЫня, S13 - до начальника вщдь лу.
Для приведення моделi до "руху" замЫимо <КМ УкраТни> (рис. 1 ) на агрегат <генератор> (рис. 8). Маркiрована позиця S3 в агрегатi для генератора означае посилання Постанови КМ УкраТни. Подальше перемщення м^-ки у моделi визначаеться ТТ схемою та правилами спрацьовування переходiв у елементарних мережах рiзних типiв. 1з <генератора> (КМ УкраТни) Ыфор-маця надходить в загальний вiддiл, а обмЫ iнформацiею мiж головою ОДА, заступником голови ОДА, начальником управлЫня, начальником вщдту здм-снюеться через загальний вщдт. Результати опрацювання Постанови КМ
S3
Ю-
S 2
S 1 К>
T1
T2
Рис. 8. Агрегат для генератора
УкраТни в СУРР надсилаються до КМ УкраТни. 4.2. Програмна модель ОДА
Використавши систему iмiтацiйного моделювання, побудуемо програмну модель СУРР у графiчному редакторi С1М. На вищому рiвнi представлена структурна схема СУРР (рис. 9), що складаеться iз шести агрегатiв для: генератора (ОЕЫЕКАТОК_1), голови (01__1), заступника голови ^0_1), загального вiддiлу (ZV_1), начальника управляя (ЫУ_1), начальника вщдту (NW_1). Один iз перелiчених вище агрегатiв приведений на рис. 10.
Рис. 9. Агрегатна модель проходження Постанови КМ УкраТни та вторинних докуменлв
ЩАгрегат GL - Система Имитационного Моделирования	Jnj*l
Модель Агрегат Редактирование Компиляция Прогон Статистика Инструменты Окна ?
ёй§ tP ф k • с + -с э- ®с	i § и -
II
PI	i P2
inp PI [>-
TS P7
-I—O—
P3
o-
P4 I4 pg
О-ф-О-
□
PJ
-О-
out P6 P6 F<]
■^o—1
iL
J
J
Рис. 10. Агрегат для голови ОДА Пiд час роботи моделi для адресування iнформацií була використана млтка (роэ.М[0] - роэ.М[9]), яка мае так атрибути:
КМ УкраТни	Голова	Заст. голови	Нач. управлшня	Нач. вiддiлу	Голова	Заст. голови	Нач. управлiння	Нач. вщдту	КМ УкраТни
M[0]	M[1]	M[2]	M[3]	M[4]	M[5]	M[6]	M[7]	M[8]	M[9]
Вiд кого					Кому
Для тимчасовоТ затримки, перетворення та дозволу для переходу були створен вщповщы процедури, одна з них наведена нижче.
Процедура, що дозволяе перехщ для переходу Y1 (на рис. 7 перехщ T7) агрегату загального вщдту (ZV), працюе таким чином. Якщо надiйшла iнформацiя вiд КМ УкраТни (flagKM = 2), то вона через перехщ T7 надходить iз позицп S14 у позицiю S5. Аналогiчно опрацьовуеться iнформацiя, що надходить вщ голови (flagGL = 2), заступника голови (flagZG = 2), начальника управлЫня (flagNU = 2), начальника вiддiлу (flagNW = 2): import proc.Procedure; import util. *;
public class ZV_R1 extends Procedure { ZV agg; public ZV_R1(ZV a) { agg = a;} public int run()
{ if (agg.flagKM == 2) return 1; // надходження шформацп вщ КМ УкраТни else
if (agg.flagGL == 2) return 2; // надходження шформацп вщ голови ОДА else
if (agg.flagZG == 2) return 3; // надходження шформацп вщ заступника голови ОДА else
if (agg.flagNU == 2) return 4; // надходження шформацп вщ начальника управлшня ОДА else
if (agg.flagNW == 2) return 5; // надходження шформацп вщ заступника начальника управлшня ОДА else return -1;}}.
4.3. Планування експерименту i аналiз результатiв
Параметры эксперимента		>
Имя модели:	ODA
Время моделирования:	50000.0
Число прогонов:	10
Интервал:	|Да	d
Автостоп включен:	| Нет	d
Дов. вероятность:	10.90	d
Дов. интервал:	0.0
Статистика позиций:	| Да	d
Статистика переходов:	| Да	d
Начало стат.:	0.0
Период стат.:	|5|0000.0
Циклограмма:	| Да	d
Параметр
Удалить
Втор. Статистик а |
Оокранить
Отменить
Рис. 11. Параметри експерименту
При проведены експериментв будемо оцнювати час проходження Постанови КМ Украши та вторин-них документв по вiддiлах ОДА. Цей процес е не-оргадичний, нестацiонарний. Планування виконуе-мо для рiзних мток, рiзних умов роботи. Потiм усе-реднюемо за сукупнiстю отриманих даних пюля 10 прогонв моделi. Параметри експерименту зафксо-вано у вкн на рис. 11.
Використавши в процедурах тимчасовоТ затримки пуасонiвський закон розподту випадко-вих величин для генератора, а для решти агрегатв - нормальний закон, отримаемо дан, що наведен у табл. 1 (час у хвилинах).
Згщно з даними, наведеними в табл. 1, мь нмальний час обробки Постанови КМ Украши -1701 хвилина, максимальний - 4450 хвилин, а се-редне значення часу обробки Постанови КМ УкраТни - 2891 хвилина. Ц дан можуть бути використан
для обчислення коефiцiента d3 аналiтичноТ модели
розглянуто^ у розд^ 3 даноí статтi.
Таблиця 1. Час проходження Постанови КМ Украши та вторинних документв у вщдтах ОДА
Прогон моделi	Загальний вщдт	Голова	Заступник голови	Начальник управлшня	Начальник вщдту	Разом
1	149	978	360	336	447	2270
2	131	2206	443	216	340	3336
3	156	2018	342	437	342	3295
4	146	686	293	360	341	1826
5	155	2806	502	535	472	4450
6	137	467	415	328	399	1701
7	142	2155	539	342	299	3459
8	154	2425	292	298	267	3398
9	172	1488	313	381	470	2794
10	163	1005	426	596	219	2385
МУмум	131	467	292	216	219	1701
Максимум	172	2806	539	596	472	4450
Середне значення	151	1623	393	383	360	2891
Порiвняння екстремальних значень часу проходження Постанови КМ УкраТни та вторинних документв у вщдтах ОДА зображено на рис. 12.
о га т
3000 2500 2000 1500 1000 500 0
•о
.—. г		г~	г- г-П
<Р <Р
о^	О^
^ ^ ^
□	Мiнiмум
□	Максимум
Рис. 12. Порiвняння екстремальних значень часу проходження Постанови КМ Украни та вторинних доку-
ментiв у вщдтах ОДА
5. Висновки
В стагп запропоноване загальне рiшення щодо побудови моделей оцнки ефективностi систем управлЫня репо-нального рiвня, якi враховують одночасно i структуру, i особливост процесу функцiонування СУРР. Суть пщходу полягае в комплексному використаннi анал^ичних та iмiтацiйних моделей, коли останн використовуються, напри-клад, для отримання оцнок коефiцiентiв, необхiдних при аналiтичному моделюваннi.
На основi проведених дослщжень iнформацiйних потокiв в Чернiгiвськiй ОДА були розроблен аналiтична та iмiтацiйна моделi, якi дозволяють оцiнити витрати часу на обробку Ыформацп у рiзних вiддiлах ОДА i можуть бути використан при прийняттi ршень з метою удосконалення СУРР.
Наведен результати пщтверджують широкi можливостi та ефективнють теоретичних методiв та Ыструме-нтальних засобiв iмiтацiйного моделювання складних систем, обфунтованих i розроблених за участю одного з ав-торiв. Агрегативнi моделi у поеднаннi з графiчною мовою Е-мереж дозволяють точно вщобразити iнформацiйнi процеси в СУРР i отримати необхiднi кiлькiснi оцнки íх ефективностi.
Отриманий досвiд в моделюванн СУРР може стати основою бтьш глибоких дослiджень у цй галузi i бути поширеним на органзацмш системи iншого призначення.
СПИСОК Л1ТЕРАТУРИ
1.	!нформац1йна агенц1я "Льшвсью новини" // http://www.aopr.lviv.ua/01/23/index.htm.
2.	Оцнка якостi та ефективностi соцiально-економiчного монiторингу у складних системах / А.О. Морозов, В.Л. Косолапов, С.М. Смiрнова, В.1. Суперсон // Математичн машини i системи. - 2001. - № 1, 2. - С. 169 - 185.
3.	Буринская З.В., Фурсова Т.И. Система имитационного моделирования анализа и прогноза развития социально-экономических процессов // Проблемы управления и информатики. - 1999. - № 2. - С. 75 - 83.
4.	Имитационная система сбалансированных решений по капитальному ремонту и реконструкции жилого фонда крупного города в условиях переходного периода / Н.Е. Егорова, А.Н. Кириллова, Е.Ю. Фаерман, К.А. Фонтана и др. // Экономика и математические методы. - 1997. - Т. 33. - Вып. 1. - С. 77 - 91.
5.	Веб-сторЫка ЧернИвськоТ обласноТ державно! адмУстрацп // http://www.reaadm.cn.ua/cai-bin/valmenu.sh7p0201 .html.
6.	Моделювання iнформацiйних процесiв в CMCTeMi управлшня облдержадмiнiстрацiй / В.В. Казимир, 1.М. Олiйченко, О.В. Саво-стенко, В.П. Шемет // Вiсник Чернiг. держ. технол. ун-ту. Збiрник. - 2001. - № 13. - С. 145 - 150.
7.	Казимир В.В., Шемет В.П. Вибiр показниш та крт^я ефективностi ЫформацмноТ комп'ютерноТ системи управлiння регюна-льного управлшня економiки // Вiсник Чернг. технол. iнституту. Збiрник. - 1998. - № 6. - С. 43 - 49.
8.	Казимир В.В., Демшевская Н.В. Формальный объектно-ориентированный подход к моделированию сложных систем // Прац ПершоТ мiжнар. науково-практичноТ конф. з програмування УкрПРОг'98. - КиТв: Кiбернетичний центр НацiональноТ академп наук УкраТни. - С. 593 - 598.
9.	Nutt G. Evaluation Nets for Computer Systems Performance Analysis // FJCC, AFIPS PRESS.- 1972. — 41, Pt. 1.- P. 279 - 286.
10.	Казимир В.В. Конкретизация кусочно-линейных агрегатов аппаратом Е-сетей // Тезисы докладов НТК. - Петродворец: ВВМУ-РЭ, 1988. - С. 104 - 107.
      
      
=====

        


﻿УДК 167/168
О. О. Шашро, кандидат фшософських наук
СЕМАНТИЧН1 ЗАСАДИ МОДЕЛЮВАННЯ
КОМУН1КАТИВНОГО ДИСКУРСУ В 1НТЕРНЕТ-ПРОСТОР1
У cmammi формулюються семантичш засади анал1зу та моделювання комуткативного дискурсу на рiзних рiвнях простору глобально! мережi 1нтернет. Розглянутi специфiчнi особливостi використання семантики можливих свiтiв для моделювання глобального та аргументативно! семантики - для моделювання локального рiвнiв ттернет-простору; обговорен особливостi переходу вiд одного рiвня до тшого. Наприктц стaттi окреслеш шляхи подальшого до^дження комуткативного простору тформацтного поля 1нтернету.
Ключовi слова: семантика можливих свiтiв, аргументативна семантика, логiчнa модель, тформащя, логiчне значення, комуткативний дискурс, глобальна мережа 1нтернет.
Актуальтсть проблеми. Сучасний сощум з його тенденщями глобалiзащi та шформатизацп все бшьш наполегливо провокуе вихщ традицшно приватних комушкацшних процеав на рiвень публiчностi. Плщним грунтом для виразу публiчних комушкативних акпв стала глобальна мережа 1нтернет. Сьогодш в iнтернет-просторi сформувалися особливi структури, призначеш безпосередньо для забезпечення переачних користувачiв мережi можливiстю здiйснювати комушкативш акти, спрямованi до масового адресата. Так, серед найбшьш використовуваних структур такого типу — сощальш мереж та блоги; дещо рiдше зус^чаються особистi сайти користувачiв.
Користувачiв кожно'1' i3 соцiальних мереж чи блопв можна умовно розглядати як велику сощальну групу i3 вiдповiдною наявшстю групових норм, цiнностей, правил поведшки, глобальною метою яко'1' якраз i е комунiкативний процес як такий (о^м локальних цiлей користувачiв, таких як самореклама, працевлаштування, розв'язання особистюних проблем i т.iн.). Вiртуальнiсть
© Шатро О. О., 2014
та публiчнiсть, що е базовими характеристиками таких груп, суттево впливають на специфшу здiйснюваних у серединi них комушкативних актив. Таким чином, дослщження ефективностi комунiкативних процесiв вiртуального середовища вимагае створення спещально'1' комушкативно'1' модел^ яка враховуватиме всi наслiдки публiчностi комушкацп. Побудову тако'1' моделi необхщно починати iз встановлення ii семантичних засад, а також мови та синтаксису, що дозволятимуть максимально точно виразити публiчний комушкативний процес засобами лопки.
AHani3 останнгх джерел i публЫацш. Незважаючи на беззаперечну актуальшсть проблеми, що розглядаеться, сьогоднi ще неможливо вести мову про наявшсть ii фундаментальних дослiджень. Це пов'язано з тим, що вщ початку вiртуальна реальнiсть розглядалася дослiдниками скорее як iгровий простiр, нiж як окрема площина соцiального буття (як приклад можемо навести роботи О. О. Антоново'1', С. В. Соловйова [1], G. Burdea, P. Goiffet, M. Heim, K. Perason та ш.). Тшьки зараз ученi доходять висновку, що головний змют вiртуальноi реальностi мiститься у полi online-комушкащй (це питання ми обговоримо нижче). З шшого боку, логiчним наслщком усе бiльшого розповсюдження 1нтернету виявилися спроби репрезентацп вае'1 глобально'1' мережi в цiлому за допомогою лопчних моделей (так, одним з найбшьш щкавих дослiджень у цiй галуз^ на нашу думку, е робота В. I. Шалака [2]). Останшми роками з'являються й першi спроби системного аналiзу та моделювання комушкативного простору 1нтернету та його окремих блоюв (так, ми
можемо вести мову про дослщження в галузi сощальних мереж Сазонова, дослщження мережi 1нтернет як специфiчного медiа-простору Г. Почепцова [3] та ш.). Незважаючи на безумовну актуальнiсть та наукову й тзнавальну цiннiсть даних дослiджень, вони видаються все ще надмiрно розрiзненими та уривчастими, для того щоб вести мову про наявшсть повноцшно!' цшсно!' концепцп комушкативного iнтернет-простору в сучаснiй науцi.
Ця стаття також не претендуе на створення повно'1 та несуперечливо'1' теорп вiртуальних комунiкацiй. II мета — видшити семантичнi засади, на яких стане можливим повноцiнний та цшсний логiчний аналiз комунiкативного простору глобально'1' мережi 1нтернет. Результатом такого аналiзу мае стати побудова лопчно'! модел^ яка вже у свою чергу може привести до формування вщповщно'! теорп.
Виклад основного матерiалу. Говорячи про лопчну семантику, ми маемо на увазi принциповi засади стввщнесення знакiв лопчно'! мови, що обираеться чи конструюеться, iз 1'хшм значенням; або, шшими словами, визначаемо для наших засобiв лопчно'! формалiзацii правила штерпретацп. Однак нам видаеться очевидною необхщшсть почати з визначення основних логiчних значень, що використовуватимуться в подальшому у мовi, та 1'х спiввiдношень, i вже тiльки пiсля цього переходити до побудови безпосередньо мови, обираючи найбiльш зручнi синтаксичш конструкти для виразу вже обгрунтованих логiчних значень.
У першу чергу нам необхщно розв'язати питання, чи будемо ми в подальшому розглядати вiртуальний комушкативний дискурс у термiнах ютинносп, правдоподiбностi, переможностi тощо. Для цього ми маемо зрозум^и характер самого дискурсу, особливосп курсування в його межах шформацп, як сказав би Л. Вотенштейн — правила гри [4].
У сучаснш логiцi юнуе безлiч варiантiв розумiння змiсту комушкативного дискурсу, вщ представлення його у виглядi бiльш чи менш складно'1 гри iз чiтко визначеними параметрами перемоги та поразки й правилами ходу до повно'1 вщмови вщ формалiзацii та звертання до аналiзу мовленневих комунiкативних прийомiв у сучаснш неформальнш логiцi. Вибiр дослiдниками того чи шшого варiанта обумовлений самими дискурсивними формами, аналiз яких здшснюеться. Ми можемо стверджувати, що при моделюванш оnlineкомунiкацiй розумiння 1'хньо'1 дискурсивно! специфiки залежатиме вiд рiвня здшснення комунiкативних актив. Таких рiвнiв ми можемо видшити два:
1)	глобальнш рiвень iнтернет-простору, який включае всю повноту шформацп, що мютиться у глобальнш мережц
2)	локальний рiвень окремого iнтернет-ресурсу чи сайту, що здшснюе репрезентацiю ймовiрноi та несуперечливох iнформацiйноi картини свiту.
Специфiка нашоi моделi полягатиме в тому, що ми маемо використовувати рiзнi лопко-семантичнi системи для репрезентацii першого та другого комунiкативних рiвнiв мережевого дискурсу. Це пов'язано з тим, що, якщо на глобальному рiвнi смислове поле 1нтернету е вщкритим для постiйного оновлення iнформацiйного масиву та мютить усю повноту ймовiрних суперечливих даних, то на локальному рiвнi системи е замкненими на соб^ iз чiткою iерархiею смиошв та встановленими традицiями iнтерпретацii шформацп. Таким чином, у результат ми отримаемо двоступеневу модель публiчноi штернет-комунiкацii iз можливiстю здiйснення переходу мiж рiвнями аналiзу вiдповiдно до нагальних потреб.
Щодо семантичних засад моделювання першого — глобального — комушкативного рiвня штернет-простору, то ми дiйшли висновку щодо оптимальносп використання для цього семантики можливих свiтiв С. А. Кршке [5].
Звернемось до змютовного тлумачення поняття «можливий свiт». Професор О. Д. Смирнова пише: «Знання е релятивiзованим вiдносно обставин^ У семантищ можливi свiти можуть трактуватися як об'ективш або суб'ективнi обставини, при яких здшснюеться акт судження... У загальному випадку вони являють собою певний кортеж факторiв, який
ми вважаемо за доцшьне враховувати при ощнщ висловлювання як ютинного чи хибного» [6, с. 134].
У випадку смислово'1 i лопчно!' штерпретацп значення шформацп такими контекстними обставинами виступатиме локалiзацiя вiдповiдних iнформацiйних повщомлень, яка включатиме iнформацiйне поле сайту, на якому мютиться повiдомлення про сайти, на яю наявнi безпосередш посилання зi сторiнки iз повщомленням. Вiдповiдно до спiввiдношення шформацп, яка мютиться у самому повiдомленнi, та решти шформацп, ^явно!' в межах локального простору повщомлення, змiст повщомлення оцiнюватиметься в термiнах чотиризначноi лопки Дана-Белнапа [7], тобто iнформацiя, наявна у повщомленш, може бути проштерпретована як: Т — iстина;
Г — хиба;
В — перенасичена оцшка (« iстина, i хиба»); N — iстиннiсний
провал («ш iстина, нi хиба»).
Використання такоi моделi штерпретацп шформацп для комп'ютерних систем обгрунтовуе Я. В. Шрамко [8]; ми припускаемо, що вс цi надбання можна перенести й на штерпретащю шформацп людиною в межах однiеi лояльно! iнформацiйно-комунiкативноi системи.
Таким чином, як окремий можливий св^ розглядатиметься кожен окремий сайт або кортеж сайпв, пов'язаних мiж собою прямими перехресними посиланнями. Можливi св^и н та н знаходитимуться у вщношенш досяжностi тодi i тшьки тодi, коли iстиннiснi значення кожного повщомлення у свт н зб^атимуться iз iстиннiсними значеннями вiдповiдних повщомлень у свт
Змiстовно це можна проштерпретувати таким чином: два можливi св^и знаходяться у вiдношеннi досяжностi тодi i тiльки тодi, коли шформащя на сайтах, що вичерпують обсяг можливих свтв, е несуперечливою. Вимога повноти можливих свiтiв — вщсутня.
Вiдношення досяжностi матимуть усi класичш властивостi:
1)	рефлексивнiсть: можливий св^ н знаходиться у вщношенш досяжносп до самого себе:
нЯн;
2)	транзитившсть: якщо iз можливого св^у н досяжний свiт и, а iз можливого свiту и досяжний свгг V, то iз можливого св^у н досяжний свiт V. нЯи^иЯу ^ нЯу (зворотне не е вiрним) ;
3)	симетричшсть: якщо можливий свiт н знаходиться у вщношенш досяжносп до можливого св^у и, то можливий св^ и знаходиться у вiдношеннi досяжносп до можливого свiту н. нЯи ^ иЯн.
Змiстовна iнтерпретацiя наведених властивостей надае змогу розглядати можливосп штернет-нав^ацп для кожного окремого користувача мереж1, в межах яких збер^атимуться iстиннiстнi характеристики шформацп, тобто когштивний свiт суб'екта зберiгатиметься у несуперечливому сташ. Так, властивiсть рефлективностi забезпечуе вшьне пересування сторiнками сайту iз вiдсутнiстю небезпеки щодо отримання суперечливоi шформацп; вiдношення транзитивностi характеризуе пошук додатковоi шформацп на рiзноманiтних штернет-ресурсах без ризику переходу вiд штерпретацп товно!' шформацп як ютинно1/хи6но'1 до перенасичено'1 оцiнки.
Другий — локальний — рiвень моделювання iнтернет-простору вимагае суттево! змiни пiдходу. Справа полягае у тому, що, обмежуючись шформащею з одного штернет-ресурсу, ми локалiзуемо модель усерединi одногоединого можливого св^у; отже, нас цiкавитиме не стшьки спiввiдношення iстиннiсних значень, скiльки специфша сприйняття надано!' на сайтi шформацп пересiчним користувачем. I якраз тут ми маемо звернутись до поняття
переконливосп та правдоподiбностi, а отже — до аргументацшно'1' семантики. Ця семантика «... виходить з того, що переконання як висновки окремих кроюв аргументацп можна переглядати, але це не означав, що при цьому необхщно переглядати 1'хш припущення... Головною рисою аргументацшно'1' семантики е демонстращя залежностi переконань вiд аргуменпв» [9, с. 93]. Основним поняттям у данш семантицi е поняття прийнятносп припущень, з яких на пiдставi правдоподiбниx мiркувань робляться вiдповiднi висновки, а результуючий масив шформацп вже оцшюеться суб'ективно кожним користувачем у межах значень «ютина», «хиба», «суперечшсть», «невизначешсть». Цей процес вiдбуваеться за кшька умовних крокiв:
1)	ознайомлення з шформацшним масивом, що мютиться на iнтернет-ресурсi;
2)	зiставлення отримано'1' шформацп iз власним когнiтивним св^ом та пошук суперечностей щодо оцшки вже вщомо'1 шформацп;
3)	при вщнайденш суперечностей вiдмова вiд сприйняття ресурсу як адекватного та пошук шшого ресурсу (iз повертанням до кроку (1));
4)	при виявленш вщсутносп суперечностей — прийняття штернет-ресурсу як адекватного та надiйного джерела шформацп;
5)	вбирання ново'1, рашше невщомо'1 шформацп, яка здалася прийнятною та правдоподiбною, до власного когштивного свiту.
Таким чином, вiдбуваеться збагачення когштивного св^у користувачiв мережi 1нтернет, що е формальним втiленням ще'1 розумiння масово'1 комушкацп як «четверто'1 влади».
Висновки. Таким чином, для лопчного моделювання iнтернет-простору публiчноi комушкацп нам необxiдно побудувати дворiвневу структуру на пiдставi двох рiзниx семантик.
На нижчому (локальному) рiвнi ми маемо звернутись до аргументацшно'1 семантики, що стосуеться парафп неформально! логiки. При усшшному проxодженнi всix п'яти кроюв прийняття шформацп та оцiнцi ii як iстинноi користувач стае готовим до переходу на вищий (глобальний) рiвень комунiкативного простору 1нтернету, тобто до мiжсайтовоi навiгацii; вiдповiдно для нав^аци всерединi комунiкативноi моделi це дорiвнюватиме переходу до рiвня семантики можливих свiтiв. При цьому шформацшним еталоном стае сайт, який пройшов аргументацшну перевiрку, i з цього моменту прийнятними для користувача стають будь-яю iнтернет-ресурси, що знаходяться у вщношенш досяжностi щодо виxiдного сайту. У результат формуватиметься специфiчне розгалужене «павутиння» всерединi мережi 1нтернет, на вузлах якого знаходитимуться «прийнятнi» для користувача сайти, а поза вузлами — ва iншi iнтернет-ресурси; бшьш того, мiж усiма вузловими штернет-ресурсами iснуватимуть вiдношення досяжностi.
Наступним кроком у розбудовi дано'1 моделi мае стати детальне розроблення логгчно'1 мови iз можливостями ii штерпретацп у термiнаx обох обраних семантик.
Л1ТЕРАТУРА
1.	Антонова О. А. Теория и практика виртуальной реальности: логико-философский анализ / О. А.
Антонова, С. В. Соловьев. - СПб. : Изд-во С.-Петерб. ун-та, 2008. - 168 с.
2.	Шалак В. И. Логический анализ сети Интернет / В. И. Шалак. - М. : ИНФ РАН, 2005. - 97 с.
3.	Почепцов Г. Вщ Facebook^ i гламуру до Wikileaks: мед1а-комун1кацй' / Г. Почепцов. - К. :
Спадщина, 2012. - 464 с.
4.	Витгенштейн Л. Философские исследования / Л. Витгенштейн. Философские работы. Часть I;
пер. с нем. // Витгенштейн Л. [составл., вступ. статья, примечания М. С. Козловой; пер. М. С.
Козловой и Ю. А. Асеева]. - М. : Гнозис, 1994. - С. 75-319.
5.	Saul A. Kripke Naming and Necessity / А. Saul. - Great Britain : Billing & Sons Ltd, Worcester, 1990.
- 160 р.
6.	Смирнова Е. Д. Основы логической семантики / Е. Д. Смирнова. - М. : Высш. шк., 1990. - 144 с.
7.	Dunn Michael J. Four-valued Logic [Електронний ресурс] / Michael J. Dunn. - Режим доступу: http: //philpapers.org/rec/JMIFL.
8.	Shramko Y. Truth and Falsehood. An Inquiry into Generalized Logical Values / Y. Shramko. - Springer, 2011. - 250 p.
9.	Навроцький В. В. Аргументацшна семантика / В. В. Навроцький // Фшос. думка. - 2009. - № 4. - С. 92-101.

=====

        


﻿УДК 004.5 1.М. ОКСАНИЧ*
1НТЕРФЕЙС СИСТЕМИ КВАЗ1ДОВ1ЛЬНИХ ЗАПИТ1В У ЕДИНОМУ 1НФОРМАЦ1ЙНОМУ ПРОСТОР1
1нститут проблем математичних машин i систем НАН Украши, Кшв, Украша
Анотаця. Розглядаеться задача побудови довтьних запит1в користувача в единому тформацтному простор1. Пропонуеться застосування технолога кваз1довыьних запит1в в единому тформацтному просторi складног предметног област1. Наводиться приклад перехресно-го запиту.
Ключов1 слова: ттерфейс користувача, довтьт запити користувача, единий тформацтний про-стiр.
Аннотация. Рассматривается задача построения произвольных запросов пользователя в едином информационном пространстве. Предлагается применение технологии создания квазипроизвольных запросов в едином информационном пространстве сложной предметной области. Приводится пример перекрестного запроса.
Ключов1 слова: интерфейс пользователя, произвольные запросы пользователя, единое информационное пространство.
Abstract. The problem of constructing arbitrary user queries in a single information space is discussed. The use of technologies for creating quasi-random queries in a single information space of complex domain is proposed. The example of a crosstab query is given. Keywords: user interface, arbitrary user queries, single information space.
1. Вступ
У зв'язку з поширенням тформацтно-комушкацтних технологий в yci сфери людсько'1 дiяльноcтi, яке спостер^аеться на сьогодшшнт день у свт, викликае ттерес задача об'еднання тформацтних ресурав, що описують рiзнi види ще! дiяльноcтi, та технологий 1х обробки в единому шформацшному проcторi (СШ) [1]. Стутнь такого об'еднання може бути рiзною i залежати як вщ тформацтних потреб cпоживачiв тформацп, так i вщ наяв-них технiчних можливостей. Переваги створення единого тформацтного простору очевидна це едина iнформацiйна база даних з единими довiдниками i несуперечливою iнформацiею, уведеною без дублювання i завжди актуальною; вiдcутнicть необхiдноcтi ттеграцп рiзних iнформацiйних систем, що використовують «сво!» бази даних; можливicть створення ушфшованих програмних комплекciв i единих методiв управлiння iнформацiйними процессами.
Одним з головних завдань, якi стоять перед тформацтною системою, що працюе в С1П, е видача тформацп, необхщно! кориcтувачевi. Поряд з масивом заздалепдь передба-чених системою докумешив i довiдок (так званих регламентованих запшив), користувач повинен мати можливють cамоcтiйно («на льоту») отримувати довшьну, необхiдну йому iнформацiю, яка мютиться в iнформацiйнiй cиcтемi, тобто тформацтна система повинна надавати кориcтувачевi засоби побудови довшьних запитiв. У даний час на ринку тформацтних технологий юнуе ряд таких iнформацiйних систем. Це система управлтня документами "Браво" [2], система управлтня торговою дiяльнicтю «АСТОР» [3], система «^-Бюджет РФ» [4] та т. Як правило, це тоземш системи, вони складш, дорогi i розрахованi на певш предметнi облаcтi. Тому задача створення заcобiв побудови довiльних запитiв користувача в тформацтнт cиcтемi, що працюе в С1П, е все ще актуальною на cьогоднiшнiй день.
© Оксанич 1.М., 2014
ISSN 1028-9763. Математичш машини i системи, 2014, № 3
У статп [5] була запропонована й описана технология побудови квазiдовiльних запипв користувача для одше! вузько! предметно! область Квазiдовiльними названi довiльнi запити користувача, яю вiн може створювати самостiйно, оперуючи тiльки заздалегiдь зумовленими термшами дано! предметно! областi. Перевагою квазщовшьних запитiв е також i можливiсть автоматично! побудови iнтерфейсу (виходячи з метаопиав тематичних представлень в Sybase PowerDesigner) на природнiй мовi користувача, оскiльки для побудови штерфейсу використовуеться iнформацiя, що знаходиться в базi даних [6].
Розглянемо можливосп та особливостi застосування технологи побудови квазщовшьних запипв до iнформацiйних ресурав единого iнформацiйного простору.
2. 1нформацшна модель складноУ предметноУ областi
Створення единого iнформацiйного простору дае можливють побудувати та описати iнформацiйну модель вае! предметно! областi, для яко! будуеться СГП, а не тшьки окремо! ii частини. Це дозволить об'еднати рiзнi iнформацiйнi запити користувача в единому штерфейа, що у свою чергу дасть змогу проводити аналiз i монiторинг поточного актуального стану вае! предметно! обласп та можливiсть оперативно аналiзувати шформащю про не!.
Рис. 1. Модель складно! предметно! обласп
Розглянемо складну предметну область (ПрО), наприклад, предметну область яко-го-небудь мшютерства або вщомства. Таку ПрО можна уявити такою, що складаеться з низки домешв (областей), кожен з яких описуе якийсь вид дiяльностi (наприклад, будiвництво, лiквiдацiя надзвичайних ситуацiй, проведення навчань, фiнанси, закупiвлi та ш.) Для опису семантики предметно! обласп будемо використовувати фреймову модель.
Тодi кожен iз доменiв складно! ПрО буде являти собою набiр фреймiв (роздiлiв) i слотiв (термiнiв, понять) ПрО (рис. 1).
Доменна структура ПрО дае уявлення про сукупшсть рiвноцiнних видiв дiяльностi, якi здшснюються в данiй ПрО, в той час як фреймова модель представляе частину ПрО тшьки по одному виду дiяльностi, тобто для кожного виду дiяльностi (для кожного домену ПрО) будуеться своя фреймова модель.
Фреймова модель подае кожен домен ПрО у виглядi iерархiчноi структури фреймiв, якi виступають як тематичш роздiли домену ПрО:
Ф - модель = {Д„ Фш, СЛ1пк },
де Д. - домени складно! ПрО;
Ф1п - фрейми домену (роздши ПрО, що складаються з одного або декшькох понять ПрО);
СЛ1пк - слоти фрейма Ф1п (термiни роздiлiв ПрО, якi можуть приймати певш значення).
Строгий порядок розташування фреймiв у серединi домену i слотiв у серединi кожного фрейма дае можливють створити для користувача природну i звичну картину роботи в штерфейа, де найбшьш важливi для нього роздши завжди будуть попереду.
Фреймова модель ПрО е основою для створення реляцшно! модел^ яка використовуеться для збер^ання даних у БД.
3. Побудова тематичних представлень
Задача побудови штерфейсу користувача квазщовшьних запитiв полягае в тому, щоб кори-стувач бачив на екраш комп'ютера роздши i термiни роздiлiв ПрО, розташоваш в зрозумiлому i потрiбному для нього порядку, тобто фактично фреймову модель ПрО. Ця задача може бути виршена за допомогою тематичних представлень ^ртуальних таблиць в БД), що iмiтують фрейми i слоти фреймово! моделi ПрО, i змют яких динамiчно обчислюеться СУБД на пiдставi даних, що мiстяться в реляцшних таблицях БД.
Перевагою С1П е можливiсть створення едино! вiртуальноi бази даних вае! ПрО. Не важливо, де i на яких серверах знаходяться даш про ПрО, але якщо вони об'еднанi в едину мережу, то вони стають завжди спшьно доступними, а використання алiасiв у назвах представлень приховае справжнi мiсця розташування даних.
Технология побудови тематичних представлень TemaView, яка описана в [5], у ви-падку складно! ПрО доповнюеться ще одним метаописом - створенням MegaView, що мiстить данi про вс домени ПРО. Для моделювання фреймово! моделi кожного домену ПрО використовуеться окрема система TemaView, кореневий фрейм яко! являе собою «головне» представлення - GlaView. 1нформащю про всi GlaView (назву та опис) мютить MegaView. Додаючи або видаляючи рядки з MegaView, можна додавати або видаляти шформащю в штерфейа про цiлi домени складно! ПрО, а додаючи або видаляючи рядки з кожного GlaView, можна додавати або видаляти шформащю про окремi роздши домену ПрО. Система тематичних представлень для складно! ПрО, яка створена за iерархiчною схемою з'еднання, показана на рис. 2.
На рис. 2:
MV - MegaView складно! ПрО;
GVi - GlaView 1 -го домену ПрО;
ТУт - TemaView п -го фрейма 1 -го домену ПрО;
ГОп - первинний ключ, який з'еднуе TemaView п -го фрейма 1 -го домену ПрО.
Рис. 2. Тематичш представлення складно! ПрО
Використання бази даних Bciei ПрО дае можливють будувати перехресш запити, а саме запити до даних з шших домешв ПрО. Це означае, що е можливicть конструювати не лише фразу WHERE в реченш SELECT [5], а й фразу FROM. Для цього пропонуеться ви-користовувати для алiаciв тематичних представлень мнемошчне кодування, яке дозволить однозначно щентифшувати кожне представлення за змютом. Наприклад, якщо потрiбно знайти, в яких доменах використовуеться той або шший термш ПрО, необхщно: 1) кори-стуватися подiбним кодуванням для TemaView, що описують схож! фрейми в рiзних доменах (принаймш 3-5 оcтаннiх cимволiв в алiаcах повиннi cпiвпадати); 2) використовувати однакове кодування для одних i тих же термшв ПрО в уах TemaView. Однак, оcкiльки для складно! ПрО таких TemaView буде досить багато, то для того, щоб не плутатися, i пропонуеться використовувати мнемошку в !хшх назвах.
Розглянемо приклад. Потрiбно визначити, де використовувався автомобшь КАМАЗ-
5320.
Ршення.
1-й	крок. Знаходимо TemaView, даш яких мicтять технiку. Тут може бути зробле-ний, наприклад, такий запит: Select VIEW_NAME from dba_views where substr(VIEW_NAME , 9,4 ) = ' TEXN '.
2-й	крок. Переглядаемо вci TemaView у ци^ i знаходимо тi, в яких значення поля ' Назва виду техшки ' = ' КАМАЗ-5320 '.
3-й	крок. Для кожного TemaView n-го фрейма i-го домену ПрО iз знайдених, вико-ристовуючи первинний ключ i-го домену IDin, знаходимо GlaView i -го домену ПрО, яке мютить назву цього домену ПрО.
4-й	крок. За назвою кожного GlaView iз знайдених GlaView в MegaView знаходимо опис тих видiв дiяльноcтi складно! ПрО, де використовувався автомобшь КАМАЗ-5320.
4. Висновки
Запропонована технолопя створення квазщовшьних запшйв в С1П надае можливють побу-дови iнтерфейсу користувача, в якому вш мав би можливють проаналiзувати стан Bciei' складно! ПрО по питаннях, що його щкавлять, провести монiторинг та отримати вщповщш оцiнки процесiв, якi протiкають у ПрО у реальному масштабi часу. ^iM того, iнтелектуалiзований iнтерфейс, що використовуе доменно-фреймову структуру, надае користувачевi реальну картину ПрО, яка вщповщае його уявленню i розумiнню ПрО. Описана технология може бути використана для створення системи запшйв в единому шформацшному просторi будь-яко! складно! предметно! областi.
СПИСОК Л1ТЕРАТУРИ
1.	Единое информационное пространство-Life-Prog.htm [Электронный ресурс]. - Режим доступа: http://life-prog.ru/view_zam2.php?id=104&cat=4&page=1.
2.	БРАВО-ДОКА - Документоархив.htm [Электронный ресурс]. - Режим доступу: http://www.bravosoft.ru/prj doka.html.
3.	Ваш магазин - АСТОР-Украина.htm [Электронный ресурс]. - Режим доступа: http://astor-ua. com.ua/ retail/vash-magazin.html.
4.	Хохлова М.Н. Сетецентрическая G-3 система управления «G-3 Бюджет РФ» [Электронный ресурс]. - Режим доступа: http: //www 1 .minfin. ru/common/img/uploaded/library/2011/10/Cefey 22102011.pdf.
5.	Оксанич И.Н. Квазипроизвольные запросы к базам данных и информационная модель их реализации / И.Н. Оксанич // Математичш машини i системи. - 2010. - № 3. - С. 45 - 52.
6.	Литвинов В.А. Технология и инструментарий реализации гиперпараметрическах (квазипроизвольных) запросов к тематической базе данных / В.А. Литвинов, И.Н. Оксанич, В.И. Ходак // Математичш машини i системи. - 2012. - № 1. - С. 60 - 68.
Стаття над1йшла доредакцп 27.05.2014
      
      
    
  



=====

        


﻿ЗАСОБИ ЗАХИСТУ ШФОРМАЦП
УДК 621.391
методи компьютерно! стеганографп
Навроцький Д. О.
Розглянут1 методи комп 'ютерног стеганографп з точки зору можливост1 гх кла-сифгкаци.
Вступ. Постановка задачi
Захист шформацп (31) вщ несанкцюнованого доступу - одна з найдав-нiших проблем. Як вщомо, цiль криптографп полягае в блокуваннi несанк-цiонованого доступу до шформацп шляхом шифрування змюту повщом-лень. Цiль стеганографп - сховати сам факт юнування секретного повщом-лення. При цьому, обидва способи можуть бути об'еднаш i використанi для пiдвищення ефективностi захисту шформацп (наприклад, для передачi криптографiчних ключiв). Комп,ютернi технологи додали новий iмпульс розвитку й удосконалюванню стеганографп, з'явився новий напрямок в об-ластi захисту шформацп - комп'ютерна стеганографiя (КС).
Основнi принципи комп'ютерноУ стеганографп
У сучаснiй КС юнуе два основних типи файлiв: повщомлення - файл, що призначений для приховування, i контейнер - файл, що може бути ви-користаний для приховування в ньому повщомлення. При цьому контей-нери бувають двох типiв. Контейнер-оригiнал (або "порожнш" контейнер) - це контейнер, що не мютить сховано! шформацп. Контейнер-результат (або "заповнений" контейнер) - це контейнер, що мютить сховану шфор-мацiю. Пiд ключем розумiеться секретний елемент, що визначае порядок занесення повщомлення в контейнер. Класичним е наступний принцип вбудовування даних [1,2]. Нехай сигнал контейнера представлений посль довшстю з N бт Процес приховання шформацп починаеться з визначення бгг контейнера, як можна змшювати без внесення помггних спотворень — стеганошляху. Далi серед цих бгг, зазвичай у вщповщност до ключа, оби-раються бiти, що замшюються бiтами приховуваного повiдомлення.
Базовими положеннями сучасно1 КС е:
1.	Забезпечення автентичшсть i цiлiснiсть файлу.
2.	Обiзнанiсть супротивника з можливостями КС.
3.	Безпека грунтуеться на збереженш стеганографiчним перетворенням основних властивостей переданого файлу при внесенш в нього секретного повщомлення i деяко1 невщомо1 супротивниковi шформацп - ключа.
4.	Витяг секретного повщомлення мае становити складну обчислюваль-ну задачу.
Огляд стеганографiчних методiв i 1х класифжащя
Сучаснi методи КС розвиваються у двох основних напрямках: 1) мето-
В^ник Национального техтчногоутеерситету Украгни "КП1"	105
Серiя — Радютехтка. Радюапаратобудуеання.-2007.-№35
ди, зacнoвaнi m викopиcтaннi cпeцiaльниx влacтивocтeй кoмп,ютepниx фo-pмaтiв; 2) мeтoди, зacнoвaнi m нaдмipнocтi ayдio i вiзyaльнoï iнфopмaцiï. Бiльшicть мeтoдiв КС бaзyeтьcя m двox пpинципax:
1)	фaйли, як не вимaгaють aбcoлютнoï тoчнocтi (нaпpиклaд, фaйли з 3o-бpaжeнням, звyкoвoю iнфopмaцieю тoщo), мoжyть бути видoзмiнeнi (дo пeвнoгo cтyпeня) без втpaти cвoeï фyнкцioнaльнocтi;
2)	opгaни чуття людини не здaтнi нaдiйнo poзpiзняти нeзнaчнi змiни у мoдифiкoвaниx тaким чинoм фaйлax тa/aбo вiдcyтнiй cпeцiaльний шефу-мeнтapiй, який був би cпpoмoжним викoнaти дaнy зaдaчy.
Icнyючi мeтoди КС мoжнa клacифiкyвaти (p^.l), cпиpaючиcь нa вiдoмi пyблiкaцiï [l-7] тa вибиpaючи тoй чи iнший клacифiкaцiйний кpитepiй.
дaниx
Риc.1. Клacифiкaцiя мeтoдiв кoмп'ютepнoï cтeгaнoгpaфiï.
3a cпocoбoм oбpaння кoнтeйнepa poзpiзняють cypoгaтнi, ceлeктивнi тa iмiтaцiйнi мeтoди cтeгaнoгpaфiï. В сурогатних (безальтернативних) мето-дax cтeгaнoгpaфiï вiдcyтня мoжливicть вибopy кoнтeйнepa i для пpиxoвy-вaння пoвiдoмлeння вибиpaeтьcя пepший кoнтeйнep, щo тpaпивcя, який у бiльшocтi випaдкiв не e oптимaльним для пpиxoвyвaнoгo пoвiдoмлeння ^к звaний epзaц-кoнтeйнep). У селективних мeтoдax КС пepeдбaчaeтьcя, щo пpиxoвaнe пoвiдoмлeння пoвиннo вiдтвopювaти cпeцiaльнi cтaтиcтичнi xapaктepиcтики шуму кoнтeйнepa. Для цьoгo re^p^ra велику кiлькicть anb-тepнaтивниx кoнтeйнepiв, з нacтyпним oбpaнням (шляxoм вiдбpaкoвy-вaння) нaйoптимaльнiшoгo з ниx для ^н^ет^го пoвiдoмлeння. Окpeмим
l06	Bí^uk Нацюнального mexнiчного yrneepcumemy yuparnu "КП1
Сeрiя — PadiomexmKa. Рaдiоaпaрamобудувaння.-2007.-№35
випадком такого тдходу е обчислення деяко! хеш-функцп для кожного контейнера. При цьому для приховання повщомлення обираеться той контейнер, хеш-функщя якого зб^аеться 3i значенням хеш-функцп повiдомлення (тобто стеганограмою е обраний контейнер). В iMima^unux методах стега-нографп контейнер генеруеться самою етеганосистемою. При цьому юну-ють декшька варiантiв реатзаци. Так, наприклад, шум контейнера може iмi-туватися приховуваним повiдомленням. Це реашзуеться за допомогою процедур, як не лише кодують приховане повщомлення пiд шум, але й збе-рiгають модель початкового шуму. У граничному випадку за моделлю шуму може будуватися цiле повiдомлення. Прикладом може слугувати метод, реа-лiзований у програмi MandelSteg [5], яка в якост контейнера генеруе фрактал Мандельброта (Mandelbrot fractal), або ж апарат функцш iмiтащ! [6].
Г*	_ __•• • i	•••
За способом доступу до приховувано1 шформацп розрiзняють методи потокових (безперервних) i фiксованих (обмежено'1 довжини) контейнерiв.
За способом оргатзацЦ' контейнери, подiбно завадозахищеним кодам, можуть бути систематичними i несистематичними. У перших можна вка-зати конкретнi мюця стеганограми, де знаходяться iнформацiйнi бгги влас-не контейнера, а де шумовi бiти, призначенi для приховування шформацп (як, наприклад, у широко поширеному методi найменшого значущого бь ту). У випадку несистематично! оргашзацп контейнера такий подiл не мо-жливий. У цьому разi для видшення приховано! шформацп необхiдно об-робляти вмiст усiе! стеганограми.
За використовуваним принципом приховування методи комп'ютерно! стеганографп подiляють на два основних класи: методи без-посереднъоИ замши i спектралъш методи. Якщо перш^ використовуючи нaдлишковiсть iнформацiйного середовища в просторовш (для зображен-ня) або часовш (для звуку) областi, полягають в замш малозначимо! час-тини контейнера бгами секретного повiдомлення, то друп для приховування даних використовують спектральне представлення елементiв середовища, куди вбудовуються приховуваш дат (наприклад, до рiзних коефь щенлв дикретно-косинусних перетворень, перетворень Фур'е, Карунена-Лоева, Адамара, Хаара тощо).
Основним напрямком КС е використання властивостей саме надлишко-вост контейнера-оригiнала. Але при цьому треба зважати на те, що при приховуванш шформацп вщбуваеться спотворення деяких статистичних властивостей контейнера або ж порушення його структури.
В особливу групу можна видшити методи, що використовують спеща-льш властивостi форматiв представлення файлiв [7]:
—	зарезервованi для розширення поля файлiв, якi зазвичай заповню-ються нулями i зазвичай не враховуються програмою;
—	спещальне форматування даних (зсування ^в, речень, абзащв або обирання визначених позицiй лггер);
BicHUK Национального техтчногоутверситету Украгни "КП1"	107
Серiя — Радютехтка. Радюапаратобудування.-2007.-№35
—	використання незадiяних дшянок на магштних та оптичних ноЫях;
—	видалення файлових заголовюв-щентиф1катор1в тощо.
Для таких метод1в характеры! низький
стушнь скритностi, низька пропускна здат-нiсть i слабка продуктившсть.
За призначенням розрiзнюють стегано-методи власне для прихованого передавання (прихованого збереження) даних i методи для приховування даних у цифрових об'ектах з метою захисту авторських прав на них.
За типами контейнера видшяють стега-нографiчнi методи iз контейнерами у вигля-дi тексту, аудюфайлу, зображення та вiдео.
З огляду на зазначене запропоновано алгоритм оргашзацн приховування повщом-
лення наведений на рис.2.	Рис 2 Стеганограф1чний алгоритм
Висновки i перспективи дослщження	приховування поввдомлення.
Характерною тенденщею в даний час в област З1 е впровадження криптологiчних методiв. Однак на цьому шляху багато ще невирiшених проблем, зв'язаних з руйшвним впливом на крип-тозасоби таких складових шформацшно! збро! як комп'ютерш вiруси, логь чнi бомби, автономш репликативнi програми, т.п. Об'еднання методiв КС i криптографп е гарним виходом з положення, що створилося. У цьому ви-падку можна усунути слабк сторони вщомих методiв захисту шформацп i розробити бшьш ефективнi новi нетрадицiйнi методи забезпечення шфор-мацшно! безпеки. Наведена схема класифшацн i запропонований алгоритм приховування повщомлень, допоможуть наглядно ощнити можливостi КС, спрощують написання стеганографiчних програм для рiзних типiв даних.
Лггература
1.	Конахович Г.Ф., Пузыренко А.Ю. Компьютерная стеганография. Теория и практика. К.: "МК-Пресс", 2006. — 288 с.
2.	Грибунин В.Г.,Оков И.Н.,Туринцев И.В. Цифровая стеганография.М.:Солон-Пресс, 2002.
3.	Хорошко В.О., Азаров О. Д., Шелест М.С., Яремчук Ю.С. Основи комп'ютерно! стега-нографп : Навч. поаб. для студенпв i астранпв. — Вшниця: ВДТУ, 2003.
4.	Генне О.В. Основные положения стеганографии.// Защита информации. №3, 2000.
5.	N.F. Johnson, S. Jajodia, Steganalysis: The Investigation of Hidden Information, IEEE Information Technology Conference, Syracuse, New York, USA, Sept. 1st-3rd. 1998.
6.	1нформацшний ресурс http://www.datapro.com.
7.	Барсуков В.С., Романцов А.П. Компьютерная стеганография: вчера, сегодня, завтра.
Технологии информационной безопасности XXI века. (http://st.ess.ru/)._
Навроцкий Д. А.	Navrotsky D. A.
Методы компьютерной стеганогарфии The methods computer steganography
Рассмотрены методы компьютерной стега- The methods computer steganography from нографии с точки зрения их классификации] the view of their classification are considered
108	BicHUK Нацюнального техтнного утверситету Украгни "КШ"
Серiя — Радютехтка. Радюапаратобудування.-2007.-№35
      
      
    
  



=====

        


﻿УДК 004.891.2
ЕКСПЕРТНА СИСТЕМА У ГАЛУЗ1 ШФОРМАЦШНО1 БЕЗПЕКИ
Назарько А. I., Дюжаев Л. П.
Розроблена консультацтна експертна система, що дозволяе ощнити стутнь eid-пов1дност1 системи менеджменту тформацтног безпеки тдприемства вимогам мiж-народного стандарту ISO 17799. Ощнювання ризиюв проводиться за Байесом. Про-грамний продукт реалiзований в середовищi Borland C+ + Builder 6.
Вступ
Центральна парадигма штелектуальних технологш сьогодш — це об-робка шформаци, що мае бути представлена у виглядi знань. Системи, ядром яких е база знань або модель предметно! област^ що описана мовою надвисокого наближеного до природного рiвня, називають штелектуаль-ними. Найчастше таю системи застосовуються для ршення складних за-вдань, де основна складшсть ршення пов'язана з використанням слабофо-рмалiзованих знань фахiвцiв-практикiв i де лопчна (або значуща) обробка шформаци превалюе над обчислювальною. Прикладом можуть бути розу-мiння природно! мови, шдтримка ухвалення рiшення в складних ситуащях, постановка дiагнозу й рекомендаци з методiв лiкування, аналiз вiзуальноi шформаци та ш.
Постановка задачi
Сучасш експертнi системи (ЕС) - це складш програмнi комплекси, що акумулюють знання фахiвцiв у конкретних предметних областях i переда-ють цей емшричний досвiд для консультування менш квалiфiкованих ко-ристувачiв. Оцiнювання шформацшно! захищеностi системи iз залученням послуг квалiфiкованого спецiалiста базуеться на яюсних методах оцiнки, на вiдмiну вщ ЕС, якi дозволяють на виходi одержати не лише якiсну ощн-ку, тобто вiдповiднiсть системи певному класу або рiвню захищеностi, тому або шшому стандарту безпеки, а й кшьюсну.
Основна складшсть реалiзацil ЕС полягае у використанш мов логiчного програмування LISP та Prolog, як не е загальновживаними i потребують значний час для ефективного 1хнього оволодiння.
Натепер гостро сто1ть питання управлiння iнформацiйною безпекою шдприемств i тому виникае необхщшсть своечасно отримувати ефектив-ний експертний висновок у данш галузi. Тому виникае потреба створити ЕС на мовi програмування, що знайома бшьшост людей i проектування яко! не забере багато часу, при цьому розумшня програмно! моделi ЕС дозволяе вдосконалювати i адаптувати li пiд iншi потреби.
Аналiз дослвджень i публiкацiй
Проблематицi ЕС на сьогодш придшено багато уваги, але в основному розглядаються можливостi мов програмування, створених саме для ЕС. Фундаментальш знання про ус досягнення у сферi розробки ЕС можна знайти в [1], де описуються програмш алгоритми усiх ключових ланок ЕС,
118	BicHUK Нащонального техтчного утверситету Украгни "КП1"
Серiя — Радютехтка. Радюапаратобудування.-2007.-№35
не прив язуючись конкретно до якихось мов програмування.
Для тестування та апробаци юнуючих на цей час закордонних комер-цшних ЕС авторами були вибраш програмш продукти Кондор 2005, Гриф 2005 (Digital Security, Рошя) та Cobra (C & A Systems Security Ltd, Велико-бриташя), як найкращi з сучасних ЕС в данш сфер^ в результатi чого вияв-леш основнi спiльнi риси в робот цих програм, зокрема присутнiсть аналь зу ризикiв та можливiсть власноруч змшювати ваговi коефщенти. На ос-новi дослiджень була створена ЕС на мовi програмування С++ в середовишд вiзуального проектування Borland C++ Builder 6. Вона дозволяе перевiрити вiдповiднiсть полiтики шформацшно! безпеки компанп вимогам мiжнаро-дного стандарту безпеки ISO 17799 (BS 7799) "Управлшня шформацшною безпекою", в результатi чого виявляються основнi погрози безпеки для бiз-нес-процесiв, виробляються рекомендаци з тдвищення поточного рiвня захишеностi для захисту вщ виявлених погроз i по усуненню недолiкiв у системi безпеки й керування. В якост базового стандарту безпеки, за яким вщбуваеться аудит, було використано стандарт BS 7799 [2], серед ос-новних роздшв якого можна вщокремити: безпека персоналу; фiзична безпека; контроль доступу; розробка й техшчна шдтримка обчислюваль-них систем; вiдповiднiсть системи основним вимогам та ш.
Теоретичш викладки
В програмi використовуеться система ощнювання ризикiв, в основi яко! лежить теорема Байеса [3]:
P(H: E) =-PEHPH)-, (1)
P(E: H)P(H) + P(E:" не H")P(" не H")
де H - деяка гiпотеза; E - свщчення, що пiдтверджуе або не шдтверджуе цю гiпотезу; P(H) - апрюрна ймовiрнiсть справедливостi гiпотези H (це ймовiрнiсть того, що наступить H без врахування факту юнування E); P(H : E) або P(H :" не E") - апостерiорна ймовiрнiсть гiпотези H, тобто ймовiрнiсть H при умовi, що факт юнування E вiдомий.
Формула (1) справедлива, для випадку, коли E вщбулося. Якщо ж E не вщбулося, у формулi (1) замють E слiд вживати "неE". При цьому P(H : E) часто е неочевидним, ймовiрнiсть же P(E: H), навпаки, е величиною бшьш очевидною, якщо враховувати даш по предметнш область Для випадку двох и бшьше свщчень E1 та E2, за умови, що E1 та E2 неза-лежнi - P(E1 & E2: H)=P(E1: H)P(E2: H). Якщо E е свщченням, яке говорить, що «вс Ei вщбулися» i, ^м того, всi вони незалежнi один вщ одного, то можна визначити P(E: H) як P(E: H) = P(E1: H)P(E2: H).. .P(E1: H)
Ствердження про незалежнiсть свiдчень дозволяе скоротити розмiри предметно! областi та зменшити складнiсть проблеми висновку.
Bíchuk Национального техтчногоутверситету Украгни "КП1"	119
Серiя — Радютехтка. Радюапаратобудування.-2007.-№35
Принципи побудови розробленоУ ЕС
Алгоритм роботи програми базуеться на алгоритм^ наведеному в [3], де розглянута можливють створення ЕС на мовi програмування BASIC. Створена ЕС для встановлення вщповщностей так само використовуе ма-сиви i структури, при цьому використовуються переваги мови програму-вання С++ в порiвняннi з BASICом.
Створена база знань шдключаеться до експертно!' системи у виглядi ди-намiчноi бiблiотеки, що дозволяе для подальшого доопрацювання системи без внесення змш у модуль роботи з користувачем (штерфейс опитування) проводити роботи лише над файлом бази знань, а також використовувати iншi бази знань, що будуть базуватись на iншi стандарти безпеки. Кожен роздш бази знань представлений у виглядi правил i запит1в, що стосуються лише його i аналiзуеться окремо. Це дозволяе використовувати паралельну процедуру аналiзу шформаци, в результат чого весь розрахунок базуеться на використанш вше! сприйнято!' шформаци i проводиться пiсля завершен-ня опитування користувача системи. На даному еташ користувач повинен вщповюти на вс запити експертно!' системи в межах одного роздшу, шсля чого формуеться вiдповiдна картина шформацшно! безпеки. Надалi можливе проведення аналiзу безпеки не по всiм запитам, тобто за вщсут-ностi яко'сь частини шформаци (невпевненiсть користувача у вщповщ, вiдсутнiсть вiдповiдi на запитання). Незадiянi запити зберiгаються системою, як не використаш, i в подальшому сеансi роботи, вiдповiвши на них, ix можна буде долучити до аналiзу. Така гнучкiсть дозволяе користувачевi вiдповiдати на запитання не лише в жорстко заданих межах (як це реалiзо-вано в юнуючих системах), а мати вибiр порядку вщповщь Кожне запитання мае певний дiапазон можливих вщповщей, що дозволяе створити шкалу впевненосл, яка мiстить максимальнi i мшмальш значення для всix змiнниx.
Для ощнювання ступеня впливу розглядаеться сума квадралв вiдxилень для кожно!' змшно!'. Спочатку розраховуеться середне значення ощнок, отриманих в результатi застосування правил для кожно!' змiнноi:
п x. .
i, j
m = Е-, де m - середне значення ощнок; п - кшьюсть можливих ви-
j=1 п
xодiв (результатiв) системи; xi - значення масиву правил. По^м розраховуеться квадратичне вдаилення цих оцiнок вiд отриманих середшх зна-
п
чень: vi
= Е (Х-,j - m)2 • |MINI(i) - MAXI(i)| , де MINI - масив мшмальних
j=1
значень змiнниx; MAXI - масив максимальних значень змшних. Остання формула визначае значення vi як суми квадратiв вiдxилень вщносно xi j
для змiнноi i за кожним можливим виходом системи.
120	BicHUK Нащонального техтчного утеерситету Украти "КП1"
Серiя — Радютехтка. Радюапаратобудуеання.-2007.-№35
Розглянутий метод вибирае змшну як найбшьш важливу ту, оцшки яко! бiльше вiдрiзняються вщ середнього значення. В кiнцi аудиту генеруеться звгг, в якому структурно мютиться iнформацiя про заходи, що вже прийня-тi в шформацшнш системi компани, а також про т^ що вiдсутнi, але мають бути застосованi для усунення ризиюв, що присутнi в системi менеджменту шформацшно! безпеки компани.
Висновки
Створена ЕС зручна у користуваннi, увiбрала у себе найкращi якост ю-нуючих аналогiв та позбавлена тих недолтв, що були виявлеш при тесту -ваннi подiбних ЕС. Хоча на сьогодшшнш день дана ЕС не може в повнш мiрi конкурувати зi сво1ми аналогами, перш за все за вщсутност вибору рiзних методiв обробки шформаци та неможливостi роботи в умовах неви-значеностi, але виявленi напрямки подальшого 11 доопрацювання. Отрима-т експериментальнi результати свiдчать про можливють створення ефек-тивно! ЕС на мовi програмування високого рiвня. Незначна доробка розро-блено! ЕС дозволить використовувати 11 для аудиту не лише в сферi шформацшно! безпеки, а й у шших галузях науки й технiки, де традицшш ма-тематичнi методи моделювання малопридатнi.
Л1тература
1.	Стюарт Рассел, Питер Норвиг Искусственный интеллект: современный подход, 2-е изд.: Пер. с англ.- М.: Издательский дом "Вильямс", 2006.- 1408 с.
2.	Стандарт безопасности ББ 7799 "Управление информационной безопасностью. Практические правила", 2000.
3.	Нейлор К. Как построить свою экспертную систему. М.: Энергоатомиздат, 1991.286с.
Дюжаев Л. П., Назарько А. И. Экспертная система в области защиты информации.
Разработана консультационная экспертная система, позволяющая оценить степень соответствия системы менеджмента информационной безопасности предприятия требованиям международного стандарта ISO 17799 "Управление информационной безопасностью. Практические правила". Оценивание рисков производится по Байесу. Программный продукт реализован в среде Borland C++ Builder 6.
Dyuzhaev L. P., Nazar'ko A. I. Expert system in the field of the information security.
Consultative expert system for estimation of the level of conformance of the information security management system of the enterprise to the requirements of the standard ISO 17799 "Code of Practice for Information Security Management" has been developed. Bayes's estimation of risks is performed. Appropriate software has been realized in the environment of Borland C++ Builder 6.
В^^к Нащонального mexнiчногоунiвeрсumemу y^amu "КП1"	121
Сeрiя — Рaдiоmexнiкa. Рaдiоaпaрamобудувaння.-2007.-№35
      
      
    
  



=====

        


﻿1НФОРМАЦ1Я ПРО ЗАК1НЧЕН1 РОЗРОБКИ
УДК 621.391
СИГНАЛЬНИЙ ПРОЦЕСОР ADSP-218x В ГЕНЕРАТОРАХ ПЕР1ОДИЧНИХ КОЛИВАНЬ
Коцержинський Б.О., Храновський А.А.
Для тестування лшй зв 'язку створено простий генератор псевдовипадкових бтар-них посл1довностей на баз1 сигнального процесора ADSP-218x.
На 6a3i сигнальних npo^copiB ADSP-218x фiрми ANALOG DEVICES нами створений генератор спещальних перюдичних коливань для тестування лши зв'язку.
Алгоритм функцiонувaння генератора досить простий завдяки наявнос-тi у вказаних процесорiв цикшчно! адресацн, що дозволяе циклiчно безпе-рервно читати дат i3 внутршньо! пaм'ятi даних (i3 циклiчних буферiв) з наступною !х передачею у вихiднi буфери. Передача виконуеться двома командами за два цикли тактово! синхрошзацн процесора, тобто частота коливань лише удвiчi менша за тактову частоту i для процесорiв ADSP-218x може сягати 40 МГц. Якщо для виведення використовуеться зовшшня шина даних, то одночасно виводяться 16 бггових по-слiдовностей.
Структурна схема генератора зображена на рис.1. У внутршнш пaм'ятi даних збершаються 128 кодових послiдовностей, кожна дов-жиною 128 двiйкових кодiв, у вигляд1 8 цикпичних 16-розрядних мaсивiв 16х128.	Рис.1 Структурна схема генератора
Кожний масив використовуеться для одночасного виведення 16 псевдови-падкових послщовностей довжиною 128 двiйкових кодiв (пачки). Вибiр пачки реaлiзуеться через систему переривань послщовним натискуванням кнопки "CHOICE" з вщображенням номера пачки на iндикaторi (0 ... 7). Пiсля скидання системи кнопкою "RESET" автоматично вибираеться ну-льова пачка. Кнопка "START" запускае генератор на виведення двшкових псевдовипадкових послщовностей у виглядi прямокутних кодiв. Частота коливань визначаеться кварцовим резонатором. Передбачеш режими: не-скшчена передача двiйкових псевдовипадкових послiдовностей з часовим штервалом мiж послiдовностями ,значення якого програмуеться i потрiбно для анашзу !х проходження через лшш зв'язку приймальним пристроем; одноразова передача 20 двшкових псевдовипадкових послщовностей з за-даним часовим iнтервaлом мiж послiдовностями; передача двiйкових псе-
BicHUK Нащонального техтчногоутверситету Украти "КП1"	149
Серiя — Радютехтка. Радюапаратобудування.-2007.-№35
вдовипадкових послщовностеи за задании час, значення якого програму-еться. Часов1 режими визначаються внутршшм таИмером. Змша режим1в для спрощення програмно-апаратно! реашзаци генератора реашзуеться змшою мжросхеми flash-пам'ять Шсля включення живлення i натискуван-ня кнопки "ЛЕЖГ"генератор готовиИ для виведення 16 перших двшкових псевдовипадкових послщовностей. Якщо потрiбнi iншi послiдовностi, то цеИ вибiр виконуеться послiдовним натискуванням кнопки "CHOICE", шсля чого генератор запускаеться натискуванням кнопки "START". На-ступний запуск виконуеться у тому ж ^ порядку.
Коцержинский Б.А., Храновский А. А. Сигнальный процессор АДУР-218Х в генераторах периодических колебаний
Для тестирования линий связи создан простой генератор псевдослучйных бинарных последовательностей на базе процессора АБ8Р--218х
Kotcerjincky B.A., Khranovsky A. A.
A signal processor ADSP-218x in period wave
generator
For testing communication lines the simple generator quasyrandom of binary sequences on the basis of the alarm processor ADSP-218x is created
150	BicHUK Нацюнального техтчного утверситету Украгни "КП1
Серiя — Радютехтка. Радюапаратобудування.-2007.-№35
      
      
    
  



=====

        


﻿РАДЮТЕХН1ЧНИЙ ФАКУЛЬТЕТ У Р1К 110 Р1ЧНИЦ1 ЗАСНУВАННЯ НАЦЮНАЛЬНОГО ТЕХН1ЧНОГО УН1ВЕРСИТЕТУ УКРА1НИ "КИЮСЬКИЙ ПОЛ1ТЕХН1ЧНИЙ ШСТИТУТ"
Нацiональному техшчному унiверситету Украши "Кшвський пол^ех-шчний iнститутм (НТУУ "КШ") цього року виповнюеться 110 роюв. Радю-техшчний факультет (РТФ) - один з найстарших факультeтiв ушверсите-ту. Заснований в 1930 рощ РТФ весь цей час активно впливав не тшьки на процес розвитку вищо! освгги в галузi pадioтexнiки на теренах Украши (i СРСР в щлому), але i на розвиток само!' pадioтexнiки, як науки, як складо-во! матepiальнol культури людства.
Сьoгoднi у piк 110 piчницi заснування НТУУ "КШ" на факультет юну-ють, розвиваються взаемно доповнюють i пiдтpимують один одного на-прямки науково! i освггньо1 дiяльнoстi. Загальний обсяг наукoвo-дoслiдниx poбiт на факультет сягае 2 млн. грн., виконуеться 6 iннoвацiйниx пpoeктiв, на виставщ наукового парку "Кшвська пол^ехшка" знаходиться 29 експо-натiв - розробки наукoвцiв, викладачiв та студенпв РТФ. В наукових до-слщженнях систематично приймае участь завбiльшки чверт загально!' кь лькoстi студeнтiв факультету, восьмеро з яких отримують iмeннi стипендп. Чотири роботи факультету отримали Гранти для фшансово1 пiдтpимки на-уково-дослщно1 роботи студeнтiв i асшранлв НТУУ "КП1".
Стала традищею участь студeнтiв РТФ в oлiмпiадаx, кoнфepeнцiяx та сeмiнаpаx, серед яких: Мiжнаpoдна кoнфepeнцiя "Современные проблемы радиотехники и телекоммуникаций" (м. Севастополь); Международная крымская конференция "СВЧ техника и телекоммуникационные технологии"; Мiжнаpoдна конференщя з теорп i практичного використання антен -"International conference on antenna theory and techniques"; Мiжнаpoдна конференщя "Вища техшчна освта i проблеми та перспективи розвитку в кон-тeкстi Болонського процесу"; Всеукрашська наукoвo-тexнiчна кoнфepeнцiя "Фiзичнi процеси та поля техшчних i бюлопчних oб'ектiв" (м. Кременчук); Мiжнаpoдний науково-практичний семшар "Актуальнi питання технолоп-чного менеджменту в галузi охорони здоров'я" (м. Луцьк) та iн. За час уча-стi РТФ в означених заходах лише студентами та асшрантами шдготовле-но i представлено близько 50 доповщей, що нерщко вiдзначались дипломами та грамотами. Так на четвертш Мiжнаpoднiй мoлoдiжнiй науково-тexнiчнiй конференцп "Совремнные проблемы радиотехники и телекоммуникаций РТ-2008" доповщ А.Витяганця, В.Смолянинова, О.Шпильки вщзначеш дипломами, як кpащi; за доповщь англiйськoю мовою студенти I. Рибша та Ю. Юрков отримали сертифжати науково-практично1 студент-сько!' конференцп "Innovation in science and technology" (м. Кшв), що була присвячена 110-й piчницi НТУУ "КП1".
За всю юторш проведення Всеукрашських студентських oлiмпiад з ди-
BicHUK Нацюнального техтчногоутверситету Украти "КП1"	5
Серiя — Радютехтка. Радюапаратобудування.-2008.-№37
сциплш радютехшчного профiлю студенти РТФ жодного разу не залиша-лись без призових мюць. Не став винятком i цей рiк: команда РТФ (К. До-ценко, Д. Долженко, С. Пшьтяй, О. Сушко, Ю. Нiжебецька, А. Третьяков) посiла перше мюце на Всеукрашськш студентськ1й олiмпiадi з радютехш-ки, що проходила в м. Севастополе в шдивщуальному залiку К. Доценко посiла перше мюце, Д. Долженко - трете мюце. С.Пiльтяй посiв перше мь сце у змаганнях з дисциплши мЕлектродинамiка та поширення радю-хвиль". На II етапi Всеукрашсько! студентсько! олiмпiади з напрямку мЕлектроннi апарати" (м. Харкiв) команда РТФ (О. Кузьменко, М. Зшчен-ко, А. Митрофанов) завоювала друге мiсце у командному залжу, а М. Зь нченко - друге мiсце в шдивщуальному залiку. Перше мiсце у командному залжу виборола команда РТФ (А. Митрофанов, Я. Омельчук, А. Новосад) i на II еташ Всеукрашсько! студентсько! олiмпiади з напрямку "Електрош-ка" (м. Львiв) а А. Митрофанов та А. Новосад подшили друге мюце в командному залжу.
На радютехшчному факультет 3 та 4 квiтня вщбулася друга науково-технiчна конференцiя "Радюелектронжа у XXI столiттi", присвячена 110-й рiчницi НТУУ "КПI". В конференцп взяли участь студенти, асшранти, мо-лодi вченi та спещалюти радiотехнiчного та iнших (сумiжних за напрям-ком наукових дослiджень) факультети НТУУ "КШ", молодi науковцi нау-ково-дослiдних установ та пiдприемств м. Киева. Головна мета конференцп - шдйом творчо! активностi молодi - була безумовно досягнута. Про це свщчить показник участi студенев в И роботi: з 73 представлених доповь дей 51 належить студентам РТФ переважно 5 та 6 куршв. Тематикою допо-вщей були охопленi практично всi напрямки науково! дiяльностi кафедр факультету - аналiз радiотехнiчних кiл i сигналiв; розробка конструкцiй та методiв розрахунку антен, вузлiв надвисокочастотного дiапазону; розробка методiв пiдвищення точностi визначення координат цш при радюлокацп та удосконалення систем радiозв'язку; впровадження iнформацiйних технологи в радiоапаратобудування, починаючи вщ розробки конструкцп i закiнчуючи експлуатащею апарату; розробка методiв та засобiв захисту шформацп та бiомедичних технологи; дослiдження технологiчних проце-сiв та пристро'в мiкроелектронiки та наноелектронiки. В цю тематику впи-сувались i доповiдi молодих науковцiв та спецiалiстiв промислових шд-приемств та наукових установ м. Киева, що приймали участь у робот конференцп.
Робота конференцп проходила в рамках секцшних та одного пленарного засщання. Працювало 4 секцп: "Радютехшчш кола та сигнали" (керiв-ник - проф. Рибш О.I.); "Радютехшчш пристро! та системи" (керiвник -проф. Правда В!.); "Електродинамжа, антени та пристро! НВЧ дiапазону" (керiвник - проф. Дубровка Ф.Ф.); "Конструювання, технологiя, виробниц-тво, експлуатацiя радюапаратури" (керiвник - проф. Зiньковський Ю.Ф.).
6	В^ник Нацюнального техтчногоутеерситету Украти "КП1"
Серiя — Радютехтка. Радюапаратобудуеання.-2008.-№37
На пленapномy засщант 6ули зaслyхaнi чот^и нayковi доповiдi (по однiй вщ кожно!' кaфедpи РТФ), в яких вiдобpaженi pезyльтaти пpоведених мо-лодими науковцями y 2007/2008 pокaх дослщжень, що вiдповiдними кафе-дpaми були визнаш кpaщими. За тpaдицieю, що склалася, aвтоpи пленеp-них наукових доповщей (студентка Ю. Hiжебецькa - кеpiвник пpоф. Pибiн O.I., студент A. Дубжовський - кеpiвник доц. Дем'яненко П.О., мaгiстpaнт О. Шпилька - кеpiвник пpоф. Жук С.Я., araiparn Д. Baсиленко - кеpiвник пpоф. Дyбpовкa Ф.Ф.) вiдзнaченi почесними ^амотами за кpaщy наукову pоботy, а aвтоpи кpaщих доповiдей, пpедстaвлених на секцiйнi зaсiдaння, вiдзнaченi дипломами I, II, III ступешв.
Сшд зазначити, що кiлькiсть доповiдей, в бшьшш чи меншiй мipi ^и-свячених pозpобцi методiв та зaсобiв бiомедичних технологiй склала ^и-близно 25%, а pозpобцi констpyкцiй та методiв pозpaхyнкy антен i вyзлiв надвисокочастотного дiaпaзонy - близько 30% зaгaльноï кiлькостi, що ви-значае шдвищений iнтеpес до цих питань з боку фaхiвцiв paдiотехнiчноï гaлyзi та споживaчiв вiдповiдноï пpодyкцiï. Сшд також вiдмiтити, що сеpед доповщей, як1 були пpедстaвленi студентами РТФ, завбшьшки 30% ^и-свяченi вiдобpaженню pезyльтaтiв pобiт, спpямовaних на pозpобкy, досль дження i пpaктичнy pеaлiзaцiю мaтеpiaльних об'eктiв, що е безпосеpеднiм свiдоцтвом yчaстi стyдентiв в пpaктичнiй нayковiй дiяльностi кaфедp, свь доцтвом вмшня стyдентiв викоpистовyвaти отpимaнi фaховi знання в ^ак-тичнiй пpоектнiй та дослiдницькiй pоботi. Piвень пpедстaвлених pобiт, ш-теpес до конфеpенцiï з боку нayковоï молодi факультету та пiдпpиeмств м. Киева дае вс пiдстaви вважати, що конфеpенцiя стане тpaдицiйною, а вплив ïï пошиpиться на вищi нaвчaльнi заклади, нayково-дослiднi установи та пiдпpиeмствa за межами м. Киева.
Наведене дозволяе ствеpджyвaти, що РТФ i нaдaлi pозвивaтиме наукову дiяльнiсть, покpaщyвaтиме piвень пiдготовки сво1х випускник1в, займе пд-не мiсце сеpед кpaщих факультетв НТУУ "KПI", спpaведливо вважати-меться ефективним складником i наукового, i освггнього пpостоpiв як Укpaïни так i зapyбiжжя.
В^ник Нацюнального meхнiчногоунiвeрсиmemу Украти "КП1 Сeрiя — PadiomexH^a. Радiоапараmобудування.-200S.-№37
      
      
    
  



=====

        


﻿ПристроХта системирадюзв'язку,радюлокаци,раЫонавиацп
УДК 621.391
РЕАЛ1ЗАЦ1Я ШВИДКОГО ДИСКРЕТНОГО ПЕРЕТВОРЕННЯ ФУР'С НА 8-РОЗРЯДНИХ М1КРОКОНТРОЛЕРАХ
Фес1ч В.П., Корчовий О.В., Мовчанюк А.В.
Розглянут1 особливост1 реал1зацп швидкого дискретного перетворення Фур'е на 8-розрядних мжроконтролерах.
При виршенш ряду задач (контроль частоти напруги i коефщенту гар-мошк в джерелах безперебшного живлення; дослiдження характеристик динамiчних ланок з невисокою швидкодiею, тощо) спектр сигналу доцшь-но обчислювати на 8-розрядних мiкроконтролерах. Враховуючи те, що програмне забезпечення (ПЗ) для спектрального аналiзу дискретного сигналу на мiкроконтролерi (МК) мае бути компактним, ушверсальним, шви-дким i оптимiзованим пiд особливостi МК, найкраще реалiзовувати поста-влену задачу з використанням алгоритму швидкого дискретного перетво-рення Фур'е (ШДПФ) - оптимiзованим способом обчислення дискретного перетворення Фур'е (ДПФ). Розглянемо алгоритм по основi 2 (Яа^х-2) [1]. Иого щея полягае в наступному: повне обчислення ДПФ роздшяеться на комбшащю 2-елементних ДПФ, як мiстять названу "метелик" базову операщю множення i до-давання (рис. 1), I операци об'еднання Тх результатiв.	Рис. 1
Х[0]о-
Х[4]о-
Х[2]<
Х[6]о-
Х[1]о-
Х[5]<
Х[3]<
Х[7]<
Стад ¡я 1	Стад1я 2	Стад ¡я 3
п ^ ^^^	\/	\ /
-1		\\//
п ^ ^^^	№2а у \	\хх/
-1	-1	¡\j\hj\
\/	/ \]\ \
-1		и/I / / \ \
п ^ ^^^	У \	и/2 / \
-1	-1	-1
Вихщнм даш в порядку реверсивних ¡ндекс1в
N. Множень у 1од2Л/
■оХи
■оХ[1]
= Х[2]
Х[3]
-°Х[4]
Х[5]
Х[6]
хт
комплексних чисел
Рис. 2. Алгоритм 8-точкового ШДПФ ЯаШх-2
50	Вкник Нащонального техшчного ушверситету УкраХни "КШ"
Серiя - Радютехмка. Радюапаратобудування.-2008.№37
Пристрог та система радюзв 'язку, радюлокаци, радюнавиацп
При реалiзащi 8-елементного ШДПФ по алгоритму Radix-2 юнцевий результат обчислюеться з використанням трьох каскадiв (рис.2). Базова операцiя 2-елементного ДПФ формуе основу всього обчислення. Результата обчислень на ушх стадiях розрахунк1в, помiщаються на мiсця, як поча-тково мiстили вихiднi вщл^ з часовоi областi x(n). Для роботи алгоритму елементи вихщного масиву x(n) мають бути впорядковаш з використанням алгоритму швертування бiтiв iндексiв елементiв (порядок слщування вихiдного масиву x(n) на рис. 2, N мае бути ступенем двшки [2]).
Для збершання вихщних даних i результатiв при виконанш ШДПФ по алгоритму Radix-2 потрiбно N комiрок пам'ятi для комплексних чисел (при виконанш ДПФ - N комiрок для вихщних даних i N комiрок для ре-зультатiв обчислень). Недостатнi ресурси 8-розрядних МК накладають ряд обмежень на ix обчислювальш можливостi. Для оптимiзацii алгоритму по швидкостi при знаходженш iнверсного порядку слiдування елементiв масиву вихщних даних i при знаходженш комплексного значення експоненти замють громiздкиx обчислень можна використати константш довiдковi таблицi значень, що записаш в пам'ять програм.
В бшьшосл компiляторiв 8-розрядних МК е тшьки 32-розрядний тип даних з плаваючою комою - float, використовуючи який можна добитись достовiрниx результатiв обчислень ШДПФ. Але обчислення зi змшними такого типу даних е громiздкими, виxiдний програмний код великим, а для збер^ання змiнниx такого типу необхщно багато оперативноi пам'ятi.
Шсля оцiнки необxiдноi точностi розраxункiв для 8-розрядних вхщних даних, запропоновано масиви для збер^ання виxiдниx даних та результат обчислень i деяких результат промiжниx обчислень описати 16-розрядними знаковими цшими змiнними типу int. В частинах програми, де необхщна висока точшсть промiжниx обчислень, яка суттево впливае на к1нцевий результат (знаходження експоненти комплексного числа в головному цикш, збшьшення степеня експоненти при обчисленнях в кожнш операцп «метелик») використати 32-розряднi знаковi типи даних з плаваючою комою. В кожнш операцп "метелик" при множеш елементiв виxiдного масиву на значення експоненти комплексного числа (де необхщно "узго-дити" типи int i float) використати функщю множення 16-розрядних знако-вих цших змiнниx на 32-розряднi знаковi з плаваючою комою, результат яко!' 16-розрядний знаковий цiлий.
При вибраному представлен також здiйснюеться оцiнка максимального значення ШДПФ, яке може бути при використанш вщповщних типiв даних. Масив вихщних даних е 8-розрядним, знаковим. Якщо сигнал на вхщ поступае в виглядi постiйноi напруги максимальноi амплiтуди (127 для знакозмiнноi 8-розрядно' вибiрки), то спектр буде повшстю визначатись значенням X(о) i дорiвнювати 16255, Переповнень значень змшних типу
BicHUK Нацюнального техтчногоутверситету Украгни "КП1"	51
Серiя — Радютехтка. Радюапаратобудування.-2008.-№37
ПристрЫ та система радюзв 'язку, радюлокаци, радюнавкацй'
int (-32768... 32767) не виникне.
Po3Mip оперативно!' пам'ят N байт визначае граничну кшьюсть N / 4 16-розрядних комплексних елеменпв ШДПФ. Але навiть тако! межi досяг-нути неможливо, оск1льки для виконання програми МК необхiдна певний розмiр оперативно! пам'ятi для збершання промiжних результатiв i для ор-ганiзацii стеку. Практично кiлькiсть елеменпв ШДПФ складае N / 8.
Для перевiрки реалiзацii алгоритму ШДПФ Radix-2 обраний 8-розрядний МК Atmega16 компанп Atmel. В якостi вихщних даних викорис-тано три 128-елементш масиви 8-розрядних цiлих знакових значень тесто-вих сигналiв (сума трьох синусо'д рiзних частот, прямокутний iмпульс i радiоiмпульс), записанi в пам'ять програм МК. Значення вибраного вихщ-ного сигналу зчитуються з пам'ят програм МК i записуються в оперативну пам'ять, шсля цього здшснюеться обчислення ШДПФ. Обрахованi коефь щенти кореляцп мiж результатами ШДПФ, отриманими за допомогою МК i «еталонними» результатами, отриманими в середовищi Matlab для трьох дослщжуваних сигналiв показав, що !'х значення (r1 = 0,9998, r2 = 0,9999, r3 = 0,9997) мають прийнятш межi. Час обчислення ШДПФ з використання вбудованого в МК апаратного помножувача, який вимiрювався з викорис-танням вбудованого 16-розрядного таймера-лiчильник склав 6124 мкс. Час обчислення ШДПФ без використання вбудованого в МК апаратного помножувача - 33578 мкс.
Програма обчислення ШДПФ на мовi С для 8-розрядного МК Atmega16 показала, що алгоритм ШДПФ Radix-2 можна використовувати в 8-розрядних малопотужних МК. Результати для 16-розрядних даних суттево не вiдрiзнятимуться вщ "еталонних" результатiв. Використання вбудованого апаратного помножувача зменшуе час розрахунюв.
Л1тература
1.	Блейхут Р. Быстрые алгоритмы цифровой обработки сигналов.М.:Мир,1989.547 с.
2.	http://www.neic.nsk.su/~mavr/LIB/Kester/05.pdf - Быстрое преобразование Фурье,
У. Кестер. 27 с.
Ключов1 слова: швидке перетворення Фур'	e, nporpaMyBaHHA MiKpoKompo^epa
Фесич В.П., Карчевой А.В., Мовчанюк А.В. Реализация быстрого дискретного преобразования Фурье на 8-разрядных микроконтроллерах Рассмотрены особенности реализации быстрого дискретного преобразования Фурье на 8-разрядных микроконтролерах.	Fisich V.P.,Korchovyy O.V.,Movchanyuk A.V. Realization of fast Fourier's transform by 8bit microcontrollers In present article considers peculiarity of realization Fast Fourier Transform by 8-bit microcontrollers.
52	BicHUK Нацюнального техтчногоутверситету Украти "КП1
Серiя — Радютехтка. Радюапаратобудування.-2008.-№37
      
      
    
  



=====

        


﻿УДК 001.89
С.Ф. ШЕВЧУК, канд. техн. наук, доц., ЧФ НТУ "ХШ", Чершвщ, О.1. АРТЕМЕНКО, канд. техн. наук, доц., ПВНЗ "Буковинський ушверситет", Чернiвцi,
Б.М. ГАЦЬ, канд. техн. наук, ст. викл., ПВНЗ "Буковинський ушверситет", Чершвщ
ОСОБЛИВОСТ1 РОЗРОБКИ 1НФОРМАЦ1ЙНИХ ТЕХНОЛОГ1Й МОДЕЛЮВАННЯ ТУРИСТИЧНИХ КОМПЛЕКС1В
Запропонована структура шформацшних технологiй для моделювання та анал1зу процес1в формування [ розвитку окремих туристичних об'екпв, цшсних туристичних комплекс1в на регiональному та локальному р1внях. Розроблеш шформацшш технологи дають змогу проводити анал1з процес1в започаткування та ведення туристичного б1знесу, використання природних та рекреацшних ресурав вщповщно! територи. 1л.: 3. Ыблюгр.: 12 назв.
Ключов1 слова: шформацшш технологи, туристичш комплекси, туристичний б1знес, використання природних та рекреацшних ресурав.
Вступ. Туризм е прiоритетною галуззю в Украíнi, про що сввдчить схвалення Концепцп Державно! щльово! програми розвитку туризму та курортiв, метою яко! е створення умов для зб№шення потоку туристiв, створення розвинуто! туристично! iнфраструктури шляхом рацiонального використання туристичних ресурав, що сприятиме зб№шенню обсягу надходжень до бюджетiв уах рiвнiв вiд провадження туристично! дiяльностi.
Важливим iнструментом пiдвищення ефективностi туристично-рекреацiйно! галузi е впровадження сучасних шформацшних технологш (1Т). Щд шформацшною технологiею зазвичай розумiють сукупнiсть методiв, процесiв, програмно-технiчних засобiв, що об'еднуються в технологiчний ланцюг для забезпечення збору, обробки, зберiгання, передачi та ввдображення iнформацi! [1].
Анал1з лггературних даних та постановка проблеми. Велик! обсяги шформацп, якими насичена туристична галузь зумовлюють необхiднiсть використання 1Т для забезпечення як1сного рiвня управлшня. Так1 1Т для туризму можна подiлити на класи, що представлен на рис. 1 [2].
На сьогодш iнформацiйне та програмне забезпечення туристично! галузi представлене, в основному, програмами для автоматизацi! облiку, дiяльностi туристичних фiрм та готелiв. Разом з тим ввдсутт комплекснi
© С.Ф. Шевчук, О.1. Артеменко, Б.М. Гаць, 2014
шформацшш технологи, спецiалiзованi системи, програмш комплекси, призначеш для виршення задач прогнозування об'екпв туристично!' iнфраструктури та процесiв туристично! галузi [3]. Вирiшення тако! задачi потребуе створення комплексу iнформацiйних технологш, призначеного для моделювання та прогнозування просторового розвитку iнфраструктури об'ектiв туристично! галузг
Сфери застосування шформашйних технологш у турисгачшй галуа
т Автоматизашя управл!ння	♦ Автоматизашя облику	t Нагромадження та розподш шформаш	t Системи ппернет-бронювання	t Прогнозування i моделювання
1	i i			1
Обшк персоналу, електронний документо-
o6ir. управления проектами
Використання бухгалтерських
програм. cneni ашзованого
програмното забезпечення дня розрахунку шн туроператор1в та управлшня завантаженням рейав. вщкригтя рахунюв в ¡нтернет-грошах
Накопичен-ня табциць, баз даних. форму вання каталопв. форму вання сховшц та простору даних
Використання системи ¡нтернет-бронювання на
Web-caiiri пщприемсгва,
участь у м!жнародних системах ¡нтернет-бронювання
Використання просторових СППР. Г1С та надбудов до них. програм моделювання та прогнозування туристичних процеав
Рис. 1. Сфери застосування шформацшних технологш у туристичнш галузi
Сучаснi засоби аналiзу територiального розмiщення та моделювання просторового розвитку об'екпв базуються на використанш геоiнформацiйних технологiй. Наприклад, в робоп [4] проводиться проектування системи мониторингу озер в урбанiзованiй мюцевосп. Також, в роботi [5] створюеться система тдтримки прийняття рiшень на основi даних з геоiнформацiйно! системи (Г1С). Створення та використання геоморфолопчно! цифрово! бази даних описано в робоп [6]. Визначенню iндексу, що характеризуе ризик опустелювання земель присвячено роботу [7]. В нiй Г1С використано як джерело даних, про склад i рельеф грунтiв. В робоп [8] виконуеться iмiтацiйне моделювання паводкових ситуацiй в реальному часг за допомогою World Wide Web виконуеться одержання та передача актуальних даних, далi iде !х обробка в Г1С та запуск iмiтацiйно!' моделi. Результати моделювання представляються у виглядi карт, до яких також е доступ через WWW. Для прогнозування змши рiвня грунтових вод використовувались
функцюнальш можливосп Г1С [9]. В роботi [10] Г1С е також джерелом даних для оцiнки придатностi земель. Результата дослвдження рiвня придатностi територи м. Мехшо вiзуалiзуються за допомогою геошформацшного картографування.
Мета i задачi дослщження. Метою дослiдження е розробка комплексу 1Т, призначених для прогнозування та моделювання розвитку просторових характеристик туристичних об'ектiв. Вирiшення ще! задачi передбачае:
-	автоматизацш створення моделей та методiв прогнозування туристичних процесiв;
-	розробку моделей просторового розвитку для об'екпв туристично! iнфраструктури;
-	розробку 1Т моделювання туристичних комплексiв.
Методи i засоби розробки шформацшних технологiй моделювання туристичних комплексiв. Всебiчне охоплення потреб туристично! галузi вимагае розроблення 1Т на двох рiвнях:
-	локальному - для моделювання та аналiзу процеав формування та розвитку окремих туристичних об'екпв;
-	репональному - для моделювання та аналiзу процесiв розвитку цiлiсних туристичних комплекав.
Розв'язання задачi прогнозування розвитку просторово! форми iнфраструктури об'ектiв туристично! галузi полягае у використаннi даних Г1С та побудовi вiдповiдних математичних моделей. Для цього вручну здiйснюють вибiрку даних або розробляють програмну надбудову над Г1С, що реалiзуе вiдбiр та обробку даних. Проте таким чином практично неможливо вчасно, ефективно та комплексно розв'язати поставлену задачу. Для цього розроблено шформацшну технолопю прогнозування розвитку iнфраструктури (1ТМР1) об'екпв туристично! галузi, яка iнтегруе методи прогнозування просторових характеристик об'екпв туристично! шфраструктури, розширюе аналiтичнi можливостi для подготовки вiдповiдних рiшень, за рахунок проблемно-орiентовано! адаптацi! математичних моделюючих програмних пакетiв з автоматизованим поданням геопросторових даних та !х опрацювання, що дозволяе забезпечити та реалiзувати комплексний пвдхвд у прийняттi вiдповiдних ршень. 1ТПР1 складаеться з наступних етатв:
1.	Постановка задачi. Визначаються задачi та об'ект прогнозування.
2.	Вiдбiр даних з Г1С, реалiзований на основi розробленого алгоритму в1дбору та конвертацп геопросторових даних.
3.	Обробка даних.
4.	Навчання пбридно! нейромереж1 ANFIS, формування бази правил та систем нечеткого виводу.
5.	Розрахунок просторового розподiлу належносп територи до урбашзовано! методом визначення ступеня належностi територи до урбашзовано!.
6.	Розрахунок по моделях на основi математичних фракталiв та дифузи методом моделювання просторово! форми шфраструктури туристичних мiстечок.
7.	Графiчне вщображення результату моделювання [11].
Спiльним вхвдним параметром моделей на основi математичних
фрактатв та дифузи е матриця просторового розподiлу належностi територи до урбашзовано!. З Г1С при виборi об'екту дослiдження визначаються координати атракторiв та обмеження. Додатково для кожно! моделi визначаються значения емпiричних параметрiв. Реалiзацiя моделей фракталiв ввдбуваеться за рахунок математичних фракталiв, дифузи - на основi клiтинних автоматiв. Вихвдним результатом е просторова форма шфраструктури об'екттв туристично! галузi.
Для аиалiзу перспектив розвитку туристично! iнфраструктури репону необх1дно попередньо виявити наявнiсть та оцшити як1сть рекреацiйних ресурсiв територи. Основною характеристикою туристично-рекреацiйного ресурсу, яка впливае на розвиток туристично! шфраструктури е його привабливють. Показник рекреацшно! привабливосп територi! представлено як лшгвютичну змiнну Р = "рекреацiйна привабливють територи". Змшна визначаеться видами вщпочинку та рекреацi!, якi можна органiзувати та здiйснити на данш територi!, яка залежать ввд ктматичних, географiчних, юторико-культурних умов та дiяльностi людини.
Загальний сезонний рiвень рекреацiйно! привабливостi територiально! одиницi - складаеться з привабливостей усiх елементарних дшянок, якi належать даиiй територи:
Рйк (í) = Ьк •
г=1 ] =1
Р (О, О у е Я,
(1)
о, оу г я,
де	- чисельнiсть населення Я -! адмiнiстративно-територiально!
одиницi (звичайна змшна); р (/) - показник рекреацiйно! привабливостi територi! елементарно! дмнки О (звичайна змiнна); Я - територiальна одиниця (звичайна змiнна); п - к1льк1сть елементарних дiлянок, якою розбито дослщжувану площу, по горизонталi (звичайна змiнна); т -
п т
вщповвдно, шльшсть елементарних дшянок по вертикалi (звичайна змiнна).
Розроблена схема потоков даних, як1 використовуються iнформацiйною технологieю моделювання просторового розвитку об'eктiв туристично! шфраструктури для оцiнювання рекреацшно! привабливостi територи, наведена на рис. 2 [12].
Рис. 2. Схема потоюв даних задачi розрахунку рекреаций привабливостi
Рекреащйний потенцiал територи визначаеться максимальним рiвнем туристичних послуг, як1 можна запропонувати на цiй територи. На рис. 3 показано схему потоков даних, що використовуеться розробленою iнформацiйною технолопею моделювання просторового розвитку об'ектiв туристично! шфраструктури для ощнювання рекреацiйного потенщалу територи.
Таким чином розроблена шформацшна технологiя моделювання просторового розвитку туристичних комплекав, яка iнтегруе розробленi методи ощнювання рекреацшно! привабливостi та рекреацшного потенцiалу територи, прогнозування розвитку шфраструктури об'екпв туристично! галузi.
Рис. 3. Схема потокв даних задач1 визначення рекреацшного потенщалу
територи
Висновки. 1нформацшш технологи моделювання туристичних комплекав дають можливють проводити анал1з процеав започаткування та ведення туристичного б1знесу, використання природних та рекреацшних ресурав дослщжувано! територи, забезпечують можливють формування варшнпв науково-обгрунтованих стратегш розвитку туристично! шфраструктури на регюнальному р1вт, розширюють науково-методичну базу дослвдження туристичного ринку. Впровадження розроблених 1Т сприятиме розв'язанню задач розрахунку привабливосп територи для розвитку об'екпв шфраструктури, прогнозування динам1ки розвитку просторово! форми шфраструктури туристичних мютечок, передбачення майбутшх сценарпв розвитку репону, яш потр1бш для потенцшних швестор1в, оргашв державного управлшня з метою вироблення рекомендацш щодо розвитку туристично! галуз1 репону в цшому.
Список лиератури: 1. ГОСТ 34.003-90 Информационные технологии. Комплекс стандартов на автоматизированные системы. Автоматизированные системы. Термины и определения / Государственный стандарт СССР, 1991. - 127 с. 2. Шаховська Н.Б. Оргашзащя побудови простс^в даних туристично! сфери / Н.Б. Шаховська, Д.1. Угрин // Искусственный интеллект. - 2009. - № 2. - С. 82-90. 3. ВиклюкЯ.1. Огляд сучасного стану шформацшного забезпечення функщонування туристично! галу^ / Я.1. Виклюк, Б.М. Гаць // Вюник Нащонального ущверситету "Львiвська полггехщка". 1нформацшш системи та мережг - 2011. - N° 715 - С. 59-68. 4. Yong Liu. An integrated GIS-based analysis system for land-use management of lake areas in urban fringe / Liu Yong, Lv Xiaojian, Qin Xiaosheng, Guo Huaicheng, Yu Yajuan, Wang Jinfeng, Mao Guozhu // Landscape and urban planning. - 2007. -№ 82. - P. 233-246. 5. Soheil Boroushaki. Using the fuzzy majority approach for GIS-based multicriteria group decision making / Boroushaki Soheil, Malczewski Jacek // Computers and Geosciences. - 2010. - № 36. - Р. 302-312. 6. Gustavsson Marcus Structure and contents of a new geomorphological GIS database linked to a geomorphological map. With an example from Liden, central Sweden / Marcus Gustavsson, C. Arie Seijmonsbergen, Else Kolstrup // Geomorphology. - 2008. - № 95 - P. 335-349. 7. Santini Monia A multi-component GIS framework for desertification risk assessment by an integrated index / Monia Santini, Gabriele Caccamo, Alberto Laurenti, Sergio Noce, Riccardo Valentini // Applied Geography. - 2010. -№ 30. - P. 394-415. 8. Al-Sabhan W. A real-time hydrological model for flood prediction using GIS and the WWW / W. Al-Sabhan, M. Mulligan, G.A. Blackburn // Computers, Environment and Urban Systems. - 2003. - № 27. - P. 9-32. 9. Dixon B. Applicability of neuro-fuzzy techniques in predicting ground-water vulnerability: a GIS-based sensitivity analysis / B. Dixon // Journal of Hydrology. - 2005. - № 309. - P. 17-38. 10. Malczewski J. Ordered weighted averaging with fuzzy quantifiers: Gis-based multicriteria evaluation for land-use suitability analysis / J. Malczewski // International Jornal of Applied Earth Observation and Geoinformation. - 2006. -№ 8. - P. 270-277. 11. Виклюк Я.1. Використання моделi кштинно! урбащзацп для прогнозування форми туристичних поселень / Я.1. Виклюк, Б.М. Гаць // Вiдбiр i обробка щформацп. - 2011. - № 35 (111). - С. 122-127. 12. Артеменко О.1. Математичне моделювання рекреацшно! привабливост територи з використанням ieрархiчно! системи неч™о! лопки / О.1. Артеменко // Науковий вюник Нащонального люотехщчного ушверситету Укра!ни: Збiрник науково-техшчних праць.- Львiв, 2011. - Вип. 21.05. -С. 345-351.
Bibliography (transliterated): 1. GOST 34.003-90 Informacionnye tehnologii. Kompleks standartov na avtomatizirovannye sistemy. Avtomatizirovannye sistemy. Terminy i opredelenija / Gosudarstvennyj standart SSSR, 1991. - 127 s. 2. Shahovs'ka N.B. Organizacija pobudovi prostoriv danih turistichno! sferi / N.B. Shahovs'ka, D.I. Ugrin // Iskusstvennyj intellekt. - 2009. -№ 2. - S. 82-90. 3. Vikljuk Ja.I. Ogljad suchasnogo stanu informacijnogo zabezpechennja funkcionuvannja turistichno! galuzi / Ja.I. Vikljuk, B.M. Gac' // Visnik Nacional'nogo universitetu "L'vivs'ka politehnika". Informacijni sistemi ta merezhi. - 2011. - № 715 - S. 59-68. 4. Yong Liu. An integrated GIS-based analysis system for land-use management of lake areas in urban fringe / Liu Yong, Lv Xiaojian, Qin Xiaosheng, Guo Huaicheng, Yu Yajuan, Wang Jinfeng, Mao Guozhu // Landscape and urban planning. - 2007. - № 82. - P. 233-246. 5. Soheil Boroushaki. Using the fuzzy majority approach for GIS-based multicriteria group decision making / Boroushaki Soheil, Malczewski Jacek // Computers and Geosciences. - 2010. - № 36. - Р. 302-312. 6. Gustavsson Marcus Structure and contents of a new geomorphological GIS database linked to a geomorphological map. With an example from Liden, central Sweden / Marcus Gustavsson, C. Arie Seijmonsbergen, Else Kolstrup // Geomorphology. - 2008. - № 95 - P. 335-349. 7. Santini Monia A multi-component GIS framework for desertification risk assessment by an integrated index / Monia Santini, Gabriele Caccamo, Alberto Laurenti, Sergio Noce, Riccardo Valentin. // Applied Geography. - 2010. - № 30. - P. 394-415. 8. Al-Sabhan W. A real-time hydrological
model for flood prediction using GIS and the WWW / W. Al-Sabhan, M. Mulligan, G.A. Blackburn // Computers, Environment and Urban Systems. - 2003. - № 27. - P. 9-32. 9. Dixon B. Applicability of neuro-fuzzy techniques in predicting ground-water vulnerability: a GIS-based sensitivity analysis / B. Dixon // Journal of Hydrology. - 2005. - N° 309. - P. 17-38. 10. Malczewski J. Ordered weighted averaging with fuzzy quantifiers: Gis-based multicriteria evaluation for land-use suitability analysis / J. Malczewski // International Jornal of Applied Earth Observation and Geoinformation. - 2006. - № 8. - P. 270-277. 11. Vikljuk Ja.I. Vikoristannja modeli klitinnoi urbanizacii dlja prognozuvannja formi turistichnih poselen' / Ja.I. Vikljuk, B.M. Gac' // Vidbir i obrobka informacii. - 2011. - № 35 (111). - Р. 122-127. 12. Artemenko O.I. Matematichne modeljuvannja rekreacijnoi privablivosti teritorii z vikoristannjam ierarhichnol sistemi nechitkoi logiki / O.I. Artemenko // Naukovij visnik Nacional'nogo lisotehnichnogo universitetu Ukraini: Zbirnik naukovo-tehnichnih prac'.- L'viv, 2011. - Vip. 21.05. - Р. 345-351.
НадШшла (received) 28.09.2014
Сmаmnю представив д-р техн. наук, доц., в.о. зав. кафедри комп 'ютерних наук Буковинського державного Фгнансово-юридичного унгверситету Стеценко I.B.
Shevchuk Sergej, Cand.Sci.Tech Chernovic'kij filial NTU "Kharkiv Polytechnic Institute" Tel.: (050) 274-11-21, e-mail: sheva14081975@rambler.ru ORCID ID: 0000-0002-7506-0732
Artemenko Ol'ga, Cand.Sci.Tech
Privatnij vishhij navchal'nij zaklad "Bukovins'kij universitet" Str. Darvina, 2а, Chernivci, Ukraine, 58000
Tel.: (098) 554-88-09, e-mail: o_hapon@yahoo.com, olga.hapon@gmail.com ORCID ID: 0000-0002-4057-1217
Gac' Bogdan, Cand.Sci.Tech
Privatnij vishhij navchal'nij zaklad "Bukovins'kij universitet" Str. Darvina, 2а, Chernivci, Ukraine, 58000 Tel.: (050) 618-59-63, e-mail: gatsbn@gmail.com ORCID ID: 0000-0002-8104-4827
      
      
=====



﻿УДК 681.3.016
ТЕХНОЛОГ1Я ГЕНЕРАЦП ЕЛЕКТРОННИХ ДОКУМЕНТ1В ДЛЯ СИСТЕМ ЕЛЕКТРОННОГО ДОКУМЕНТООБ1ГУ
С.Ф. Теленик, професор, д.т.н., В.С. Хмелюк, асшрант, Ю.О. Двойное, MaricTp, НТУУ «КПТ»
Анотаця. Аналгзуеться проблема программой тдтримки мехатзму викори-стання шаблотв документ1в для систем електронного документооб1гу. За-пропоновано об ’ектну i лог1чну модел1 представленого механизму, наведено приклад реалiзацii.
Ключовi слова: електронний документообiг, шаблон, документ, елемент.
Вступ
1нформацшш технологи й автоматизащя в керуванш, проектуванш та шших галузях дiяльностi людини перетворилися у важли-вий чинник розвитку пiдприeмств i оргашза-цiй [1]. На сьогодшшнш день в багатьох ор-гашзащях та пiдприeмствах впровадженi системи електронного документооб^у. Кшь-кiсть доступних систем документооб^у зрос-тае, а !х якiсть i функцiональнi можливостi постшно пiдвищуються. Проте процес ство-рення електронних документiв залишаеться трудомiстким i потребуе значного часу. В той же час аналiз процесу створення нових документа пiдтверджуе, що переважна кшь-кiсть документiв створюються на основi вже iснуючих документiв або мютять типовi роз-дiли, що можуть бути представленi як шаб-лони електронних документiв. Крiм того, ав-томатичне створення документа за шаблоном дозволить не тшьки скоротити час, необхвд-ний для створення документа, а й зменшити кшьюсть помилок, пов’язаних зi створенням документа вручну. У статтi розглянуто тех-нологiю реалiзацil механiзму використання шаблошв документа для створення електронних документа.
Аналiз iснуючих технологiй використання шаблошв
Будемо виходити iз найбшьш поширеного визначення шаблону документа, заздалепдь пiдготовленого макета документа, готово! форми, що мютить у собi стандартний текст i
вiльний простор для заповнення стандартно! iнформацii. Шаблони економлять час на фо-рмування документа й дозволяють представ-ляти шформащю у стандартизованiй формi.
Аналiз поширених систем документообiгу, насамперед, Documentum, IBM Lotus Notes/Domino, LanDocs, Microsoft SharePoint Portal Server, Staffware, Megapolis, Доку-ментообiг, Docs Fusion дозволив зробити висновок, що механiзми пiдтримки роботи i3 шаблонами документiв не е !х найбiльшими перевагами. У кращому випадку шаблони документiв використовуються для створення звтв i простих документа. Оскшьки генера-цiя документiв з використанням складних шаблонiв взагалi не реалiзована, на створення документа витрачаеться багато часу й зусиль. Тому виникае необхщшсть у бшьш ушверсальних механiзмах роботи з шаблонами документа, здатних суттево шдвищити ефективнiсть системи електронного докуме-нтооб^у.
Мета та постановка задачi
Для впровадження механiзму створення електронних документа (генераци) за допомо-гою шаблонiв документiв необхiдно розро-бити сучасш й працездатнi логiчну та об’ектну моделi його роботи. Зазначеш мо-делi повиннi забезпечувати використання простих i складних шаблонiв для генераци документа, можливють легко створювати i редагувати шаблони документiв, шдтриму-вати автоматичне заповнення документiв,
використання Формул i функцш заповнення. Розроблеш моделi повиннi 6ути поклaденi в основу реaлiзaцiï мехaнiзмy створення електронних документа у ot^^í електронного документообиу за допомогою технологiï .NET [2, 3].
Об’ектна модель побудови шаблошв
Для програмно1' реaлiзaцiï мехашзму шабло-нiв докyментiв розроблено узагальнену об’ектну модель, що наведена на рис. 1. Вона не прив’язана до конкретного середовища розробки або мови програмування. Вона по-будована шляхом удосконалення алгебра1'ч-них моделей, запропонованих у роботi [4]. На основi ц1е1 моделi створено вщповщш тaблицi в бaзi даних (БД) шд керiвництвом системи керування базами даних (СУБД) Oracle i програмш класи. Шаблони документа збериаються на серверi СУБД, внaслiдок чого з юнуючим набором шaблонiв можуть працювати територiaльно вiдокремленi групи людей [5].
Лопчна модель побудови шаблошв документов
Розглянемо процес створення шаблону документа бшьш детально. Щц час створення шаблону документа вибираеться тип шаблону документа, вводиться його назва i короткий опис. Пюля цього створюеться об’ект класу «Шаблон документа» i шдставляеться поточна дата створення шаблону, а також
генеруеться його ушкальний щентифшатор. Пщ час заповнення шаблону вся динaмiчнa шформащя описуеться за допомогою елеме-нтiв. Для створення нового елементу шаблона необхщно вибрати тип елементу i метод його заповнення; при цьому створиться об’ект класу «Опис елемента» з щентифша-тором шаблону та власним щентифшатором. Елемент можна заповнити або за допомогою стандартно!' функци заповнення (поточна дата, вс оргашзацп тощо) або за допомогою формули. Для кожного типу елементу юнуе доступний список функцш, що заповнюють елемент. Якщо треба, можна задати формулу заповнення елемента, яка буде опрацьована класом «Менеджер формул». Пюля заюнчен-ня процесу заповнення шаблону документа вш збериаеться за допомогою БД. При цьому статична частина шаблону документа aрхiвy-еться за допомогою класу «Статичний вмiст шаблону документа» й разом з щентифшато-ром шаблону збериаеться в БД.
Автоматичне заповнення елементу за допомогою формули обробляеться класом «Менеджер формул» тд час оброблення рядка формули. Цей клас aнaлiзye формулу елементу на наявнють лопчних або математич-них правил й розрiзняe елементи формули й операци над ними. Як модель застосовуеться контекстно-вшьна граматика. В основу реал> зaцiï мехашзму покладено вiдповiдний метод розбору.
Рис. 1. Об’ектна модель мехашзму роботи з шаблонами документа
Кожний елемент формули замшюегься вщ-повщним значенням. Всi оперaцiï формули отримують прюритети виконання i почерго-во виконуються. Пюля завершення обчис-лень отриманими значеннями заповнюються елементи. Джерела даних для заповнення елемента становлять реaлiзовaнi фyнкцiï програмних бiблiотек. Таким чином, можна використовувати будь-яку програмну функ-цiю. У процеш створення електронного документа вибираються зaгaльнi вiдомостi про документ, його тип, назва й опис, а також шаблон, на бaзi якого буде створений документ. Вибраний шаблон документа заванта-жуеться з БД в електронний документ, при цьому вш елементи, що мають активний метод заповнення, заповнюються вщповщними даними. Отриманий електронний документ може бути збережений в БД, видалений iз БД, зареестрований або тдписаний електро-нним цифровим тдписом. Вш елементи документа опрацьовуються за допомогою класу «Елемент документа». В документ можуть бути створеш новi елементи, видалеш непо-трiбнi елементи або змiненi методи ix заповнення. Пiд час перегляду електронного документа вибираеться вiдповiднa реестра-цiйно-контрольнa картка документа. З картки зчитуеться щентифшатор шаблону документа i вщповщний шаблон завантажуеться в документ. Спочатку розпаковуеться статична частина шаблону з упакованого aрxiвy, поим завантажуються вш елементи шаблону з його щентифшатором. Також завантажуються вш вiдповiднi елементи документа, згiдно з ре-eстрaцiйною карткою, й почергово заповнюються вш динaмiчнi елементи документа.
Логжа роботи 3Í cклaдними шаблонами докумeнтiв
Складним шаблоном документа будемо вва-жати такий шаблон, до складу якого входять n шших шaблонiв докyментiв. Цей тдхщ значно полегшуе пiдготовкy складних документа, що генеруються на основi шших документа, дозволяючи поетапне створення документа. Для створення складного шаблону необхщно при редагуванш будь-якого шаблону у вщповщному мющ вставити елементи, що мютять посилання на iншi шаблони. В цьому елемент вказуеться вщповщний шаблон, який буде вставлений замють елемента. Якщо в шаблош наявний елемент
складного шаблону, то поточний шаблон автоматично перетворюсться у складний шляхом використання лопчного поля програмно! моделi. Надал^ при внесеннi змiн в будь-який пiдпорядкований шаблон будуть змшю-ватися всi складнi шаблони, що його вклю-чають. Використовуючи складш шаблони, можна генерувати складнi документи. Скла-дним документом будемо вважати такий документ, який складасться з декшькох iнших документiв. При цьому складний документ не буде генеруватися, якщо не будуть досту-пш iншi необхщш для цього документи. I, навпаки, документ буде згенерований, але з шформащею про необхiднiсть доформування визначених його частин, коли будуть досту-пними необхщш документи.
Висновки
Використання складних шаблошв електронних документа прискорюе процес створення електронних документа й опташзуе процес документооб^у в цiлому. Проведено аналiз iснуючих систем документообiгу на предмет тдтримки механiзмiв роботи i3 шаблонами документiв. Розробленi об’ектна й лопчна моделi, що описують мехашзм використання складних шаблонiв документiв.
Лтоература
1.	Павлов А.А., Теленик С.Ф. Информацион-
ные технологии и алгоритмизация в управлении. - К.: Техшка, 2002. - 344 с.
2.	Коуд П., Норт Д., Мэйфилд М. Объектные
модели. Стратегии, шаблоны и приложения. - Лори, 2008. - 430 с.
3.	Лузан А.В., Лисенко Ю.Г., Теленик С.Ф.,
Цокол С.Л. АБДАН: Информационная система и технология проектирования АСОД. - М.: Финансы и статистика, 1990. - 160 с.
4.	Грехем И. Объектно-ориентированные ме-
тоды. Принципы и практика. - 3-е изд. -Вильямс, 2004. - 880 с.
5.	Троелсен Е. C# и платформа .NET. Биб-
лиотека программиста. - Питер, 2004. -800 с.
Рецензент: О.П. Алекшев, професор, д.т.н., ХНАДУ.
Стаття надшшла до редакцп 10 лютого 2009 р.

=====

        


﻿УДК 621.372.061
БАГАТОВАР1АНТНИЙ АНАЛ1З ТА ОПТИМ1ЗАЦ1Я Л1Н1ЙНИХ
ПАРАМЕТРИЧНИХ К1Л У ПРОГРАМНОМУ СЕРЕДОВИЩ1
MAOPCS1
Шаповалов Ю .1., д.т.н., доцент; Мандзш Б. А., д.т.н., професор;
БачикД. Р., к.т.н.
Нацгоналъний унгверситет «Лъвгвсъка полтехнжа», Львгв, Украгна,
dariya. smal @gmail.com
MULTIVARIATE ANALYSIS AND OPTIMIZATION OF LINEAR PERIODICALLY TIME-VARIABLE CIRCUITS AT THE ENVIROMENT OF MAOPCS
Yu. Shapovalov, Sc.D., associate professor; B. Mandziy, Sc.D., professor;
D. Bachyk, Ph.D.
Lviv Polytechnic National University, Lviv, Ukraine, dariya.smal@gmail.com
Вступ
Останшм часом спостер^аеться тдвищення штересу до 3aco6iB аналь зу параметричних Kin [1 - 4], що можемо пояснити як поширенням таких пристро!'в у науш i техшщ (космiчний зв'язок, супутникове телебачення, штучний штелект), так i появою потужних прикладних програмних проду-ктiв, таких як MATLAB, Mathematica. Методи, якi е основою, зокрема, частотного анаизу лшшних параметричних кiл можемо роздiлити на чис-ловi [2, 3] та символьш [1, 4].
Як показано у [1], частотний символьний метод (ЧС-метод) е най-бшьш ефективним засобом анаизу усталених режимiв лшшних параметричних кш у частотнш областi. Метод оснований на розв'язуванш рiвнян-ня Л.А.Заде та апроксимацп спряжено!' передавально!' функцii W(s,t) ль нiйного параметричного кола тригонометричним полiномом Фур'е.
У пропонованш роботi представлена програмна реаизашя системи функцiй MAOPCs для багатоварiантного аналiзу та оптимiзацii лiнiйних параметричних кш на основi ЧС-методу та приклади ii застосування. Осо-бливють проведення багатоварiантного аналiзу та оптимiзацii за допомо-гою системи MAOPCs полягае у тому, що попередньо проводиться оцшка асимптотичноi стiйкостi дослщжуваного лiнiйного параметричного кола в заданих межах змiни параметрiв xh...,xn та визначення областей допустимо! !х змши, у яких коло е стшким. Виключно у цих областях вщбуваеться багатоварiантний аналiз та оптимiзацiя.
1 http://radap.kpi.ua/radiotechnique/article/view/940
Архггектура та функцп системи MAOPCs
Система представляе собою 17 функцiй, якi реаизоваш в середовищi MATLAB. Кожна з 17 функцш мае аргументи та глобальш змшш i виконуе над ними визначеш перетворення. Глобальнi змшш формують програму вхiдних даних на до^дження i повиннi бути визначеш (задаш) на момент виклику функцп. Результати, отриманi в процесi виконання одше1 функцп (в окремих випадках декiлькох функцiй), можуть бути глобальними змш-ними (вхiдними даними) для шших функцiй. Послiдовнiсть розташування функцш довшьна. Таким чином, на основi розробленоi системи функцiй та шших внутршшх функцiй пакету MATLAB, користувач може формувати необхщш алгоритми i програми комп'ютерних обчислювальних експери-менлв для багатоварiантного аналiзу та оптимiзацii лiнiйного параметрич-ного кола, що дослiджуеться. Система MAOPCs вiдкрита для поповнення ii новими функцiями. Для застосування системи функцш на персональному комп'ютерi необхщно встановити програму MATLAB 7.6.0(R2008a), зок-рема ii компоненти Symbolic Toolbox, Extended Symbolic Math, Optimization Toolbox, Genetic Algorithm and Direct Search Toolbox.
Функцп системи MAOPCs наступш:
-	TrFunc — формування передавальноi функцп у символьному видi ;
-	Stability — оцшка асимптотичноi стшкосл кола;
-	FunctionOfZoneStability — апроксимашя межi област стiйкостi полiномом n-го порядку;
-	FSM та MFSM — визначення передавальних функцш iз частотних символьних моделей лшшного параметричного кола;
-	OutVar — формування функцш вихщних змшних;
-	SensFO та SensSO — розрахунок функцш чутливост першого та другого порядку, вщповщно;
-	RelativeDeviationFirstOrder, RelativeDeviationSecondTerm та Relative DeviationOfFunction — розрахунок вщносного вщхилення функцii ;
-	FormOfFunOfGoal, FormOfFunCharacteristic та FormOfObjectiveFun — формування функцп цш;
-	Table — формування таблиц значень функцп;
-	Graph_2D та Graph_3D — вiзуалiзацiя функцп.
Для до^дження лшшних параметричних кш з використанням системи MAOPCs у середовишд MATLAB необхiдно дотримуватись системних вимог, як витiкають з вище описаноi архiтектури системи MAOPCs.
Системш вимоги
Для дослiдження лшшних параметричних кш в середовишi системи MAOPCs необхщно:
1) створити m-файл з текстом програми, що описуе дослщження кола i глобальнi змшш, та зберегти його у папц в пам'ятi комп'ютера (iмена m-
файлу та вщповщно!' папки повинш складатися лише з латинських букв та цифр);
2)	записати функцп системи MAOPCs та MATLAB у послщовносп, яка вщповщае алгоритму проведення дослщження, у створеному m-файлi;
3)	виконати m-файл в середовищi MATLAB за допомогою опцп «Run " m-файл"».
Результати до^дження зберiгаються у mat-файлi, який знаходиться у тiй же папцi в пам'ят комп'ютера, що i m-файл. Результати дослщження та промiжнi розрахунки, як по замовчуванню зберiгались протягом проведення дослщження, можемо переглянути у вшш «Workspace» середовища MATLAB. Зрозумшо, що набiр таких папок в пам'ят комп'ютера створюе бiблiотеку алгоритмiв та обчислювальних експериментiв лшшних параме-тричних кiл, що дослщжувались.
Процедура аналiзу допускiв
Аналiз допусюв лiнiйних параметричних кiл виконуеться методом моменлв, за яким вiдносне вщхилення вихiдноi величини W (s, t, x^..., xn) параметричного кола мае вигляд [5]:
n	1 n n
SW(s, t, X1,..., Xn) = ZSW(s,t ■X1.....x- )s.xi +1 £ £.<?fXS:t,X1.....x" )SxiSxJ, (1)
i=1 г	2 i=1J=1 " J
де SXj, Sxj — вщносш вiдхилення параметрiв елементiв xt та Xj вiд номiнальних значень, вщповщно; n — кiлькiсть параметрiв елеменлв кола; SW(s,t:X1v":Xn) та SW^X1,...:Xn) — функцп чутливост першого i другого
порядюв, вiдповiдно. Перед початком проведення анаизу допускiв за ЧС-методом формуеться знаменник A(s,x1,...,xn) нормально!' передавально!' функцii G(s,g,x1,...,xn) при символьних значеннях s та параметрiв xl, ..., xn усiх елементiв кола. За дiйсними частинами коренiв знаменника A(s, x1,..., xn) оцшюеться стiйкiсть кола у, зазвичай, заданих межах змши кожного з параметрiв з обраним кроком x1 = x1min : x1step : x1max, xn = xn min : xnstep : xn max, в результатi чого формуеться так звана «таблиця
стшкостЬ). Визначенi з таблицi стiйкостi новi межi значень кожного з па-раметрiв, при яких задане коло е стшким, переводяться у вщносш змiни Sxl,..., 8xn параметрiв xl, ..., xn, вщповщно. Далi за ЧС-методом формуеться вихщна величина W(s,t,x1,...,xn) заданого кола при символьних значеннях тих же параметрiв xl, ..., xn. За функцiею W(s,t,x1,...,xn) визна-
чаються функцii чутливост першого SW(s,t■Xl■...■Xn), ..., SW(s,t■Xl■...■Xn) та дру-
x1	xn
гого S^*-.*),S^!,...^), ..., S^*-.*) порядкiв. За виразом (1),
отриманими вщносними змшами SxY,..., 8xn та функщями чутливостi об-числюеться вщносне вiдхилення вихiдноi величини W (s, t) кола.
Приклад застосування системи функцш MAOPCs до аналiзу допускiв двоконтурного параметричного пiдсилювача
Проведемо анашз допускiв двоконтурного параметричного шдсилю-вача, еквiвалентна схема якого наведена на рис. 1. Визначимо вщносне вь дхилення модуля передавальноi функцп W1(s, t) = Ux(s, t)/1 (s) за
змши параметр! в
h k
Ух
C(t)
- Ic
i(t>
чД г L, Y,	U	□ • Я + ] U<(1) L2.	1 i Y-.! С:
U.(t)
Рис.1. Двоконтурний параметричний пiдсилювач i(t) = Im • cos(ac • t + ф); c(t) = c0 • (1 + m • cos(Q • t));
s = jac ;g>c = 2 -n • 108 рад / с
Y2 = 0.091:0.108мСм, Y3 = 0.471: 0.528См,
C2 = 67.980:68.12 пФ, L2 = 9.311671:9.313545 нГн
Lbjft)
елементiв m
C0 CC Со Y Y
2
2,
Y
1, Y2 , Y3 при yMOBi СТШКОСИ шдсилювача. Me>id змши кожного з na-раметрiв задамо у межах: m = 0.09:0.11, Y = 0.091:0.108мСм, C1 = 67.993:68.012 пФ
c0 = 0.9:1.1пФ, L = 36.70422: 36.71165 нГн,
Алгоритм анаизу.
Крок 1. За функщею TrFunc визначаемо передавальну функцiю Wc (s, t) = Uc (s, t)/1 (s), яка пов'язуе вхiдний струм I (s) i напругу на пара-метричнiй емност Uc (s, t) у частотнш областi, та визначаемо кшьюсть га-рмонiчних складових у апроксимацп Wc (s, t), що забезпечуе задовiльну то-чшсть (наприклад, 4 знаки пiсля коми). Вщповщний фрагмент програми у системi MAOPCs наведено на рис. 2.
Крок 2. За функщею Stability сформуемо знаменник A(s) нормально!'
передавальноi функцii G(s, ¿f) при символьних значеннях m, Ц, L2, c0, C1, С2, Yl, Y2, Y3, s. Вiдповiдний фрагмент програми наведено на рис. 3.
Крок 3. За функщею Stability та сформованим знаменником A(s) проводимо ощнку стшкост шдсилювача для ушх можливих варiантiв значень параметрiв елементiв з заданих меж i сформуемо таблицю стiйкостi. 1з таб-лицi стiйкостi визначаемо областi вщносних змiн параметрiв елементiв m, Ц, L2, c0, C1, С2, Yl, Y2, Y3 у яких пiдсилювач е стшким. Вiдповiдний
фрагмент наведено на рис. 3.
Крок 4. За функщею FSM побудуемо частотну символьну модель шдсилювача з рис. 1 та визначаемо iз побудованоi моделi передавальну функ-
цш t) = и^,t)/I(я) при символьних значеннях параметрiв т, Ь1, Ь2, с0, С1, С2, , 72, 73, д. Вiдповiдний фрагмент наведено на рис. 4.
Крок 5. За передавальною функщею t), що визначена на крощ 4, i функцiями SensFO та SensSO визначаемо функцii чутливост модуля функ-цil t). Вiдповiдний фрагмент наведено на рис. 5.
Крок 6. За функщями RelativeDeviation_FirstOrder, RelativeDeviation _SecondTerm, RelativeDeviationOfFunction та функщями чутливост^ визна-ченими на крощ 4, обчислюемо вщносне вiдхилення 8)| модуля функ-
цii t) при вiдносних змiнах параметрiв елементiв, якi визначенi на крощ 2. Вщповщний фрагмент наведено на рис. 6.
кшегмт-и
м«с ГМ (»Dt Herir-10 J
i roí №«в£Яваг*ШИм01швЛйЕа
■■V* |Out|iutr i ub, 1 ItaCfbes , 1 Tcfutc <,t. i*2»pi'tee. • t'í load itot*
'■bl«i'clM«Jr' ,TTU,№eCtnifi , t, 'tMl part ' ____
O. в 0 l»e - «. U. dO« e - fe, 0. DO le-61
load Amt* it UleOtltaiwl
F-ll»*	11*11,211
fot rr-t:K.-
fcei«. ive_et tet <iv| • <ree>JeflrV®i»»8i 1. Huaoffcata- э l, ,
11, II <•, tvi -Tib>«iin'tliMii «.Nuv'iflUrnl I i, II <*#tv|) /Tab¿«ofYaluaai «.NuaOtfHactal 11,11 <Z.tv| :
Mvv(0uT9*icFiiePatb.' iv*_error'«'-»weiMl' 11
tvnv41;
«adJ
fAXirtf Г» Lac iv«_*r icr«Mi ;R»lariv*_*rrnr| f l! B«i'yr.Jtuv»_frtDt'O.D; МюОТНагп-МигХИАП*»^
«la«
kittk
•a4;
■ la«
РшЮС h\e t-fJ 7 KM ►»♦ 11
aad;
Рис. 2. Фрагмент програми аналiзу допускiв пiдсилювача, що вiдповiдаe кроку 1
М!> -1« -14? fill -
'Irl unci |А. ' - , ' ••* ) ioai «lata
rsE(X, <_FS<6,llxm01Eernil. ■: , ')
lOftä dAX-n
Рис. 4. Фрагмент програми аналiзу допускiв пiдсилювача, що вщповщае кроку 4
Рис. 3. Фрагмент програми анал1зу допусюв пщсилювача, що вщповщае крокам 2 та 3
154	-	TF_FSM{l,NumOfHarm)-abs (TF_FSH{ l.NumOfHarm}) ;
155	-	save(OutputFilePath,1TF1-append1);
156	-	load data
157	-	SensFO (1 FS modelsTF_FSM{ l.NumOf Harm).
158	[cQ le-12],1,' s','t'| 15S -	load daca
160	-	SensSO (1 FS modelsTF_FSM< l.NumOf Harm},.. .
161	[cO le-12 cO le-12],2,1s','t')
162	-	load daca
Рис. 5. Фрагмент програми анал1зу допусюв пщсилювача, що вщповщае кроку 5
»91 -	P4l»tiv-D«viM tonrirrt Order ITS wry*! Ii' . [ЗГ01 J. II (Паю* lt«rm. 11 ;SfOt 1.3 I IllwOtlUrm, 11 iSfOU.JP INtoOf Kam. i) ;ХГСИ 1,1) l Nu
1691 -	P.elfttiveDeviationSecondOrder ; IS noJcli',( SSOI l, lHXimOtBar», II jSÍOI l, 311 HuirOÜUrrr. lljSSOi ». 11 i HürrtflHair», II i SSOi l, «Iltf
IBIS -	p« lat mDtvlat janQf f unrt tDltl' fs mrcfels' . t Р.ОТСЦ 1.111 Ы Unat Пяти, 11 ;РГ.Г(Ц 1. 21 IlfieOflhnt, II; PDFOI J.II lt(«OflUm, II: Я0ГП1 1,4
1101 -	Grallk_2D(Felac lveDevlat lonf i.Nurtfi Hanf]. c.O. T.T/lOO, 'full fuacticn')
Рис. 6. Фрагмент програми аналiзу допускiв пщсилювача, що вщповщае кроку 6
Результаты аналгзу. Результати ощнки стшкост свщчать про стш-юсть тдсилювача в межах заданих вщхилень параметр1в його елеменлв. Результатом використання системи MAOPCs до анашзу допусюв тдси-лювача з рис.1 е визначена за функщями RelativeDeviation FirstOrder,
¿л
о| л
и
00-
RelativeDeviationSecondTerm, RelativeDeviationOfFunction системи MAOPCs залежшсть вщносного вiдхилення 8 \Wl(t)| модуля передавально!
функцii W1(t) вiд часу t, яка сформована у межах стшкоси пiдсилювача, якi попередньо визначеш за функщею Stability, та графiчно вiдображена за допомогою функцп Graph_2D i наведена на рис. 7.
З рис.7 випливае: а) вщносне вiдхилення 8|W1(t) модуля передавально! функцii W1(t) пiдсилювача е залежною вщ часу функцiею, тому що сама
передавальна функцiя W1(t) е
залежною вщ часу; б) вщносне вiдхилення	передавально!
функцii W1(t) змшюеться у межах вiд -52.44% до 62.42%. Процедура on™Mi3a^'i Оптимiзацiя лiнiйних пара-метричних кiл проводиться при змт одного чи двох парамет-рiв елементiв кола за загальним адитивним критерiем оптимальности який представляе собою суму квадралв вiдхилень вихiдних характеристик вщ те-хнiчних вимог. У нашому випадку функцiя цiлi F(х1,х2) (адитивний кри-терш оптимальностi) мае вигляд
Р Я ,	ч 2
1	-	г—		■	к I :св у ач
Г........				ГХ /
2
1
1				1 ..................1.........
А „
•	" / •тГ 1
05
25
t,c
»10'
Рис.7. Часова залежшсть 8\Wx(t)| модуля параметрично! передавально! функцп Wj (t)
F (х1, х2) = ЕЕ(MF (хЪ х2Щ> tj ) - М0(Щ, tj ) i=1 j=1
(2)
де М0(о, ) та Мр (х1, х2,щ, tj) — дiйснi функцii мети та характеристики, вщповщно, хх, х2 — параметри, за якими проводиться оптимiзацiя. Функщя мети М0(щ, tj) задаеться дослiдником набором значень для обра-них значень змшних 0)^ та tj . Функщя характеристики Мр(х1,х2,о,tj) визначаеться, наприклад, вихiдною величиною Ж(хх,х2,о\,tj) кола, яка, своею чергою, визначаеться у виглядi апроксимацii
Mf(х1, х2, Щ,t j ) = W±Q(х1, х2, Щ ) + 2
i =1
W-i(х1,x2,wi) ■ exp(-j ■ i ■ Q ■tj) + +W+i(х1,) ■ exp(+j ■i ■Q ■ tj)
(3)
що сформована за ЧС-методом при символьних параметрах х1; х2 у тих же
значеннях щ та t,.
1 j
Перед початком проведення оптимiзацii за ЧС-методом формуеться знаменник A(s,x1,x2) нормально! передавально!' функцii G(s,£,x1,x2) при символьних значеннях параметрiв xl та x2 . Для кожного значення xl з ряду значень заданого дiапазону визначаеться граничне значення х2, при якому стшюсть змiнюеться на нестшюсть, i формуються залежностi виду х2гр = f(x1). У результат таких дiй будуеться так звана «карта стшкосл» в
координатах параметрiв xj та x2. Визначенi залежностi виду x2 = f(x1)
апроксимуються, наприклад, степеневими полiномами та визначаються обласл стiйкостi у виглядi нерiвностей виду x2sp < f(x1). Таким чином, оп-
тимiзацiя вщбуваеться лише у областях стiйкостi кола. Функщя характеристики MF (х, х2 tj) кола з символьними параметрами x1; x2 визначаеться за ЧС-методом для заданих значень змшних щщ та tj у виглядi (3). Ная-
внiсть функцii мети та функцп' характеристики дозволяе для заданих значень змшних щщ та t ■ сформуемо функцiю цiлi F(х1; х2) у виглядi (2). Mi-
нiмальне значення функцп цш, визначене одним з методiв оптимiзацii за
виконання умов стшкосл виду x2 < f(x1), визначае шуканi значення пара* *
метрiв x1 та x2 кола.
Приклад застосування системи функцш MAOPCs до onmMi3a^i дво-контурного параметричного п1дсилювача
* * _ . . Визначимо оптимальнi величини m та c0 , що забезпечують мiнiмум
функцii цiлi F (c0, m) = Fmin, яка сформована для кожно! частотно! точки щщ
ООО
з заданого дiапазону 1.95■ л •10 :0.0005■ 10 :2.05■ л •10 рад/с та для кожно! часово! точки t ■ з заданого дiапазону 0: 0.05 ■ 10-9 :3.35 ■ 10-98 с для па-
раметрично! передавально! функцп Z1(s, t) = U1(s, t )/ I (s) двоконтурного параметричного пiдсилювача з рис. 1 при умовi його стшкосл. Алгоритм ошгашзацп.
Крок 1.За функщею Stability сформуемо знаменник A(s) нормально! передавально! функцii G(s, £) при символьних значеннях m та c0. Вщповь дний фрагмент програми у системi MAOPCs наведено на рис. 8.
Крок 2.За функщею Stability для кожного значення m з ряду значень заданого дiапазону визначаемо граничне значення c0 при якому стшюсть змшюеться на нестiйкiсть, i сформуемо залежностi виду m = f(c0). У результат таких дш побудуемо так звану «карту стшкосл» в координатах параметрiв m та c0. Вщповщний фрагмент програми наведено на рис. 8.
Крок 3.За функщею FшctionOfZoжStabШty залежнють, визначену у крощ 2, апроксимуемо степеневими полшомами та визначаемо областi стшкоси у виглядi нерiвностей виду т < /(с0). Вiдповiдний фрагмент
наведено на рис. 8.
Крок 4.За функцiею FormOfFunOfGoal для заданих значень змiнних щ та ^ задаемо функцiю мети	. Вщповщний фрагмент наведено на
рис. 9.
Крок 5.За функщею FormOfFunCharacteristic для заданих значень змшних щ та tj визначаемо функцiю характеристики ЫР(т,с0,щ,^) тд-
силювача з символьними параметрами т та с0 у виглядi модуля функци Ц\(т, с0,щ, tj ). Вщповщний фрагмент наведено на рис. 10.
Крок 6. За функщею FormOfObjectiveFun сформуемо функцш цш ¥(т,с0) у виглядi (2) для заданих значень змшних щ та ^ . Вiдповiдний
фрагмент наведено на рис. 11.
Крок 7. Визначаемо за функщею оптимiзацii «patternsearch» [6] за ви-
конання умов стшкосл виду т < /(с0) мшмальне значення функци цiлi,
* *
яке визначае шукаш значення параметрш т та с0 двоконтурного пара-метричного пiдсилювача. Вiдповiдний фрагмент наведено на рис. 11.
Рис. 8. Фрагмент програми оптим1зацп тдсилювача, що вщповщае крокам 1,2 та 3
224	- FSM(l,W_FS<£,NumOfHarm} , ' 3 ' , ' t' )
225	- load data
226	- FormFunctionOfGoal('FS models',...
227	TF_FSM(l,NumOfHarm},1 complex modul')
228	- load data
Рис. 9. Фрагмент програми оптим1заци тдсилювача, що вщповщае кроку 4
238 - FormOfFunctionCharacteristic (1 FS models' , . . . 235	TF_FSM{ l,MuroOfHacm), ' complex modul' )
Рис. 10. Фрагмент програми оптим1зацп тдсилювача, що вщповщае кроку 5
241	- ForraOfGfcjecciveJunt' FS rode Is 1, FunccionOiGoai{2rHumDfHariri 12,1'', FuncrionCbacacterlatlei2,Hum5fHac3i> {2, li , . ..
242	[cO;m],OtT,O.D2e-OOS,1.5»pi»le7,2.5»pi»le7,0.I»pi"le7)
243	— load data
244
psearclitool
Рис. 11. Фрагмент програми оптим1зацп тдсилювача, що вщповщае крокам 6 та7
Результаты оптимгзацИ. За функщею оптимiзацii «patternsearch» [6] при виконаннi визначено! умови стшкосп, що визначаеться з област стш-костi (рис.12) на крощ 3, та при довшьно обраних початкових значеннях с0 = 1.2пФ, m = 0.15 варшованих параметрiв за 524 ггерацш визначено мь
нiмум Fmjn при с* = 1пФ та m* = 0.1 , позначений на рис. 13 символом В.
05
F(c0,m)
т 03
0 1
02
0.4
08	09	1	1 1	1.2
С0Ф ,10U Рис.12. «Карта стшкосп» в координатах
napaMeTpiB m та c0
11
«ю
12
Висновки
Наведений матер1ал та практика використання переконують, що система функцш MAOPCs дае можливють:
-	виконувати широке коло проектних завдань та дослщжувати лшшш параметричш кола, задаючи у програм1 вхщних даних алгоритми !х досль дження;
-	повною м1рою використовувати потужний символьний апарат та ш-ш1 стандартш функци пакету MATLAB, не вникаючи в глибину математи-чного апарату реал1зованих метод1в.
Зазвичай, символьш функци чутливост достатньо гром1здю та !х об-числення вимагае чималих затрат комп'ютерного часу. Проте один раз об-числена символьна функщя чутливост дозволяе швидко обчислювати вщ-носш вщхилення передавальних функцш при великш юлькосл змш допус-юв параметр1в елеменлв.
Виконання процедур анал1зу допусюв та оптим1зацп лшшних параме-тричних кш за умови ощнки асимптотично! стшкосп забезпечуе адекват-шсть результапв та тдвишуе ефектившсть подальших етатв проектуван-ня.
Перел1к посилань
1.	Шаповалов Ю.1. Символьний аналiз лiнiйних електричних кiл у частотнш обла-стi. Постiйнi та змшш параметри. - Львiв: Видавництво НУ «Л^вська пол^ехшка», 2014. - 324 c.
2.	Бирюк Н.Д. Основы теории параметрических радиоцепей: монография / Н.Д. Бирюк, В.В. Юргелас. - Воронеж: Издательско-полиграфический центр Воронежского государственного университета, 2012. - 346 с.
3.	Рыбин А.И. Анализ параметрических цепей модифицированным методом при-пасовывания с использованием дискретного преобразования Фурье / А.И. Рыбин, М.С. Кумсия // Вестник НТУУ «КПИ». Серия Радиотехника. Радиоаппаратостроение. - 2009. - № 38. - с. 23-29.
4.	Vanassche P. Symbolic Modeling of Periodically Time-Varying Systems Using Harmonic Transfer Matrices / P. Vanassche, G. Gielen, W. Sansen // IEEE Transactions on
Computer-Aided Design of Integrated Circuits and Systems. - 2002. - Vol.21, No.29. - P. 1011-1024.
5.	Алексеев О.В. Автоматизация проектирования радиоэлектронных средств: учеб. пособие для вузов / О.В. Алексеев, A.A. Головко, И.Ю. Пивоваров и др. ; под ред. О.В. Алексеева. - М. : Высш. шк., 2000. - 479 с.
6.	Триус Ю.В. Оптимiзацiя багатоекстремальних функцш за допомогою пбридних методiв у середовищi MATLAB R2007A / Ю.В. Триус, В.Ю. Триус // Вюник Черкасько-го ушверситету. - 2010. - Вип. 172. - С. 104-122.
References
1.	Shapovalov Iu.I. (2014) Symvolnyi analiz liniinykh elektrychnykh kil u chastotnii ob-lasti. Postiini ta zminni parametry [Symbolic analysis of linear electrical circuits in the frequency domain. Fixed and variable parameters]. Lviv, Lvivska politekhnika Publ, 324 p.
2.	Biryuk N.D., Yurgelas V.V. (2012) Osnovy teorii parametricheskikh radiotsepei [Fundamentals of theory parametric radio chains]. Voronezh, Voronezhskiy gosudarstvenniy universitet Publ., 346 p.
3.	Rybin, A. I., Kumsiya, M. S. (2009) Analysis parametric circuits modified method stores using discrete Fourier transform. Visn. NTUU KPI, Ser. Radioteh. radioaparatobuduv., no. 38, pp. 23-29. (in Russian)
4.	Vanassche P., Gielen G. and Sansen W. (2002) Symbolic Modeling of Periodically Time-Varying Systems Using Harmonic Transfer Matrices. IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems. Vol.21, No.29, pp. 1011-1024.
5.	Alekseev O.V. eds, Golovko A.A., Pivovarov I.Yu. (2000) Avtomatizatsiya proek-tirovaniya radioelektronnykh sredstv [Computer-aided design of radio-electronic tools]. Mos-kow, Vysshaya shkola Publ., 479 p.
6.	Trius Yu.V., Trius V. Yu. (2010) Optimisation of multiextremal functions with the implementation of hybrid methods using Matlab R2007a. Visnyk Cherkaskoho universytetu, Iss. 172, pp 104-122.
Шаповалов Ю. I., Мандзт Б. А., Бачик Д. Р. Багатовар1антний анал1з та опти-м1зац1я лтшних параметричних кт у програмному середовищ1 MAOPCs. В дант робот1 розглядаеться архтектура системи функцш MAOPCs для багатовар1антного анал1зу та оптим1заци лтшних параметричних к1л на основ1 частотного символьного методу. Також представлено приклади застосування системи функцш MAOPCs до анал1зу допусшв та оптим1заци двоконтурного параметричного тдсилювача. Особ-ливгсть проведення анал1зу допуск1в та оптим1заци за допомогою системи MAOPCs полягае у тому, що попередньо проводиться ощнка асимптотичног стткост1 до-сл1джуваного лшйного параметричного кола в заданих межах зм1ни параметр1в еле-мент1в кола та визначення областей допустимог гх зм1ни, у яких коло е сттким i у цих областях вiдбуваеться аналiз допуск1в та оптимiзацiя.
Ключов1 слова: лшйш параметричш кола, ЧС- метод, багатоварiантний аналiз.
Шаповалов Ю. И., Мандзий Б. А., Бачик Д.Р. Многовариантный анализ и оптимизация линейных параметрических цепей в программной среде MAOPCs. В данной работе рассматривается архитектура системы функций MAOPCs для многовариантного анализа и оптимизации линейных параметрических цепей на основе частотного символьного метода. Также представлены примеры применения системы функций MAOPCs к анализу допусков и оптимизации двухконтурного параметрического усилителя. Особенность проведения анализа допусков и оптимизации с помощью си-
стемы MAOPCs заключается в том, что предварительно проводится оценка асимптотической устойчивости исследуемой линейной параметрической цепи в заданных пределах изменения параметров элементов цепи и определения областей допустимого их изменения, в которых цепь является устойчивой. Только в этих областях происходит анализ допусков и оптимизация.
Ключевые слова: линейные параметрические цепи, ЧС - метод, многовариантный анализ.
Y. Shapovalov, B. Mandziy, D. Bachyk. Multivariate analysis and optimization of linear periodically time-variable circuits at the enviroment of MAOPCs.
Introduction. The architecture of MAOPCs functions system and examples of its application for solving the tasks of multivariate analysis of linear periodically time-variable (LPTV) circuits based on the frequency symbolic method are considered in this paper. The method is based on approximation of transfer functions of LPTV circuits in the form of trigonometric polynomials of the Fourier. The MAOPCs functions system is implemented in the environment of MATLAB.
Architecture and functions of the system MAOPCs. The system consists of 17 functions that are implemented in the environment of MATLAB. Each function has arguments and global variables and carries out over them identified transformation. Functions and global variables form the input data program for research LPTV circuit and should be defined (set) at the time of calling the function.
Conclusions. The MAOPCs functions system enables to investigate LPTV circuits, setting in program input data the algorithms for their research and to use a strong symbolic apparatus and other standard functions of the package MATLAB in full, without understanding the deep of mathematical apparatus of implemented methods;
Keywords: LPTV circuits, frequency symbolic method, multivariate analysis.
      
      
    
  



=====

        


﻿УДК 621.39
ФАЗ1-КОНТРОЛЕР ДЛЯ МЕРЕЖ WIMAX1
Семенова О. О., к.т.н., доцент; Боярський К. О.; Постернак О. М.
Втнщъкий нащоналъний техшчнийушверситет, Втнщя,Украта,
semenov79@ukr.net
FUZZY-CONTROLLER FOR WIMAX NETWORKS
O.Semenova, PhD, Associate Professor; K.Boyarskiy; O.Posternak
Vinnytsia National Technical University, Vinnytsia, Ukraine
Вступ
Одним з основних напрямюв розвитку сучасних телекомушкацшних технологш е бездротовi мережi передачi шформаци. Серед них все бшьшо-го поширення одержують таю технологи як персональш мережi IEEE 802.15 (Bluetooth)., локальш мережi IEEE 802.11 (Wi-Fi) та стандарт ушвер-сальних мiських мереж IEEE 802.16 (WiMAX), у яких бездротовий широко-смуговий доступ використовуеться дуже широким спектром додатюв — вщ традицiйноi передачi мови до сучасних мультимедшних додаткiв. WiMAX — це технолопя операторського класу з високою якiстю сервiсу [1]. Через штенсивний розвиток бездротових мереж постають проблеми тд-вищення i^ продуктивност та з'являеться необхiднiсть розробки алгорит-мiв, якi дозволять забезпечити своечасну та надшну передачу iнформацii, тдвищити коефiцiент використання смуги пропускання, скоротити час ре-агування базовоi станци на запити абонентських станцiй, а також забезпечити яюсть обслуговування для рiзних видiв трафiка.
Одними iз найважливiших в галузi забезпечення якост обслуговування е проблеми планування та керування доступом. В процес забезпечення якост обслуговування необхщне планування кадру для того, щоб визначи-ти, який пакет буде обслуговуватися першим у конкретнш черзi [2]. Також для подальшого полшшення якостi i ефективностi передачi даних у мережах WiMAX необхщно розробити метод керування доступом, який дозволить запоб^ати переповненню i блокуванню потокiв.
Таким чином, проблема розробки ефективних методiв керування доступом, що дозволить одержати бшьш високу пропускну здатнiсть при не-збалансованому трафiку та знизити затримку пакепв, е актуальною.
Огляд кнуючих алгоритмiв керування доступом з'еднань
Проблема керування доступом з'еднань активно дослщжувалася як для проводових, так i для бездротових систем. Для аналiзу рiзних алгоритмiв керування доступом з'еднань були запропоноваш аналiтичнi моделi, засно-
1 http://radap.kpi.ua/radiotechnique/article/view/987
ваш на ланцюгах Маркова [3]. Однак бшьша частина цих моделей працюе тшьки на рiвнi викликiв для традицшних голосових мереж. А от у бездро-тових мережах з комутащею пакетiв необхiдно розглядати функщонування на рiвнi пакетiв.
Основна мета мехашзму керування доступом - обмеження юлькост iснуючих потокiв з'еднань так, щоб можна було забезпечити продуктив-нiсть якостi обслуговування для вшх вхiдних викликiв.
Зараз використовуються два основш алгоритми керування доступом для абонентських станцш, якi забезпечують необхщш характеристики яко-стi обслуговування з'еднань.
При застосуванш алгоритму, заснованому на граничному значенш, у випадку, коли з'являеться нове з'еднання, модуль керування доступом пе-ревiряе, чи буде загальна кiлькiсть з'еднань меншою або рiвною граничному значенню.
Алгоритм, заснований на аналiзi черг, працюе на основi ймовiрностi прийому з'еднання, що визначаеться статусом черги.
Алгоритм, заснований на неч^юй лопщ е найбiльш доцiльним у ситуаций коли вiдсутне не лише детермшоване представлення задачi, але й сто-хастичнi ймовiрнiснi методи.
У робот [4] показано, що для проектування протоколу керування ресурсами перспективним е використання так званих «м'яких» обчислюваль-них методик, наприклад, заснованих на нечггюй лопщ або генетичних алгоритмах. Це дозволяе задовольнити вимоги користувачiв до якост обслу-говування та максимально використовувати ресурси системи.
Постановка задачi
Таким чином, метою роботи е розроблення нового методу керування, що забезпечуе тдвищення якост обслуговування в мережах Ж1МАХ.
Для досягнення мети необхщно розв'язати таю задача
-	визначити лшгвютичш змшш фазi-контролера та !х терми, врахову-ючi iнформацiю з вщомих робiт;
-	визначити функцii належносп, причому необхiдно вказати конкретнi числовi параметри;
-	розробити базу правил для подальшоi реалiзацii пристрою;
-	промоделювати роботу фазi-контролера, що дозволить ощнити його працездатнiсть.
Розроблення фазьконтролера
Розроблений фазi-контролер доступу абонента до мереж ЖгМАХ подано на рис. 1. Вш мае таю вшдш змшш: час очшування, довжина черги, розмiр пакета. Вихiдною змiнною фазьконтролера е величина прюри-
Фазi-контролер	Р
01- .
-> РЭ ->
Рис. 1. Фазьконтролер доступу тету абонента
Фазьконтролер е контролером Мамданi, здшснюе шференцш типу «мш-макс», а дефазiфiкацiю за методом центроща.
Використання подiбного фазьконтролера доступу дозволить уникнути перевантаження мережi та покращити ефективнiсть И функцюнування.
Визначення функцiй належностi
Для опису часу очшування використовуються терми «низький», «середнш» та «високий». Функцп належностi для Т (ИТ) наведеш на рис.2. Таким чином, множина значень для часу очшування е такою: Т(ИТ) = {Низький (С^), Середнш (М), Високий (Н)}.
Для опису довжини черги викори-стовуються терми «коротка», «серед-ня» та «довга». Функцii належностi для Т(ОС) наведеш на рис. З.Таким чином, множина значень для довжини
„ А ...	. „„ черги е такою:
Рис. 2. Функцп надежности для у!
Т (ОС) = {Коротка ^И), Середня(М), Довга (Ьп)}
Для опису розмiру пакету використовують-ся терми «малий», «сере-днш» та «великий». Функцп належносл для Т{РБ) наведеш на рис. 4. Рис. 3. функцп належносп для С>Ь	Таким чином, множина
значень для розмiру пакету е такою:
Т(Р8) = {Малий ^ш), Середнш (ММ), Великий (Lg)}
Для опису величини прюритету абонента ви-користовуються терми «дуже низький», «низький», «середнш», «висо-кий» та «дуже висо-кий». Функцп належнос-т для Т(Р) наведеш на рис. 5. Таким чином, множина значень для величини прюритету абонента е такою:
Т (Р) = {дуже низький (УС), низький (С), середнш (М), високий (Н), дуже високий (УН)}
Рис. 4. Функцп належносп для Р8
1.	якщо WT = Lw i QL = Sh i PS = Sm, тоЫ Р = УL;
2.	якщоЖТ = Lw i QL = ShlPS = М, тодг Р =
3.	якщо WT = Lw i QL = Sh i PS = Lg, mодi Р = L;
4.	якщо WT = Lw i QL = МI PS = Sm, тодг Р = УL;
5.	якщо ЖТ = Lw i QL = М i PS = М, mодi Р = L;
6.	якщо ЖТ = Lw i QL = М i PS = Lg, mодi Р = М;
7.	якщо ЖТ = Lw i QL = Ln i PS = Sm, тодi Р = VL;
8.	якщо ЖТ = Lw i QL = Ln i PS = М, mодi Р = КЪ;
9.	якщо ЖТ = Lw i QL = Ln i PS = Lg, mодi Р = L;
10.	якщо ЖТ = Mi QL = Sh i PS = Sm, тодг Р = L;
11.	якщо ЖТ = Mi QL = Sh i PS = М, тодг Р = L;
12.	якщо ЖТ = Mi QL = Sh i PS = Lg, тодi Р = L;
13.	якщо т = Mi QL = М i PS = Sm, тодi Р = L;
14.	якщо ЖТ = Mi QL = М i PS = М, тодi Р = М;
15.	якщо т = Mi QL = М i PS = Lg, тодi Р = Н;
16.	якщо ЖТ = М i QL = Ln i PS = Sm, тодi Р = L;
17.	якщо ЖТ = Mi QL = Ln i PS = М, тодi Р = L;
18.	якщо т = Mi QL = Ln i PS = Lg, тодi Р = М;
19.	якщо ЖТ = Н i QL = Sh г PS = Sm, тодг Р = М;
20.	якщо ЖТ = Н i QL = ShlPS = М, тодг Р = М;
21.	якщо ЖТ = Н i QL = Sh i PS = Lg, тодг Р = Н;
22.	якщо ЖТ = Н i QL = М г PS = Sm, тодг Р = М;
23.	якщо ЖТ = Н i QL = М г PS = М, тодг Р = Н;
24.	якщо ЖТ = Н i QL = М г PS = Lg, тодг Р = УН;
25.	якщо ЖТ = Н i QL = LniPS = Sm, тодi Р = М;
26.	якщо ЖТ = Н i QL = Ln i PS = М, тодi Р = М;
27.	якщо т = Н i QL = Ln i PS = Lg, тодi Р = Н.
В1сник Нацюнального техтчного утеерситету Украти «КП1»
База правил, яка описуе принципи фун-кщонування розробле-ного фазьконтролера, створюеться на основi експертних знань i складаеться з двадцяти семи правил:
Рис. 6. Схема фаз1-контролера
< тот жмгт'чш
Моделювання фазi-контролера доступу
Для моделювання роботи фазьконтролера використаемо програму МаНаЬ 6.5. Ця програма дозволяе iмiтувати роботу фазi-контролерiв та нейронних мереж. Схема фазьконтролера доступу у програмi Matlab 6.5 мае вигляд, поданий на рис. 6.
Тобто маемо три вхщш величини — час очiкування ЖТ, довжину черги QL та розмiр пакета РБ i одну вихщ-ну — прюритет абонента Р.
Задаемо функцп належностi для часу очшування ЖТ (рис. 7). Таким же чином задаемо функцп належнос-т i для довжини черги QL, розмiру пакета РБ i прiоритету абонента Р.
Вводимо базу правил роботи фазь контролера доступу, що складаеться iз двадцяти семи правил типу «якщо-то».
Для моделювання реально!' роботи фазьконтролера доступу задамо кон-кретш числовi значення для кожно! вхщно! величини. Нехай час очжу-вання ЖТ = 40, довжина черги QL = 70 , а розмiр пакета РБ = 0,3
Результат роботи фазьконтролера при заданих вхщних даних подано на рис. 8. Тобто, промоделювавши роботу фазьконтролера у середовищi Matlab 6.5, отримуемо значення прю-ритету абонента Р = 0,363.
Запропонований контролер вико-ристовуе метод шференцп макс-мш, оскiльки вш зручний для роботи у режимi реального часу. Для процесу дефазiфiкацп застосовуеться метод Мамданi, що забезпечуе простоту ро-зрахункiв. Процес дефазiфiкацil дае чггке значення прюритету конкретно-Рис. 8. Результати моделювання го абоненту, що дозволяе ошгашзува-ти процес керування викликами.
Рис. 7. Задания функцш належност1
Висновки
На даний час актуальною е задача розроблення ефективних алгоритмiв планування та керування доступом у мережах третього та четвертого по-колшня, що дозволить одержати бiльше високу пропускну здатнють при незбалансованому трафшу та знизити затримку пакетiв. У данш статтi проблема керування доступом в мережах WiMAX виршена шляхом засто-сування методiв нечiткоi лопки. Так, для покращення ефективностi контролю доступу до бездротових мереж WiMAX пропонуеться використовува-ти розроблений фазьконтролер, вiрнiсть функцiонування якого тдтвер-джуеться проведеним моделюванням. Отриманiй фазьконтролер вiдрiзня-еться вiд вiдомих своею простотою та наочшстю. Використання запропо-нованого контролера дозволить забезпечити високу яюсть обслуговування пiсля прийняття з'еднання, зменшити затримку пакетiв у мереж^ тдвищи-ти пропускну здатнiсть системи, а також спростити елементи структури системи.
Перелж посилань
1.	Сюваткин В. С. WiMAX - технология беспроводной связи: основы теории, стандарты, применение / В. С. Сюваткин, В. И. Есипенко, И. П. Ковалев, В. Г. Сухоребров ; под ред. В. В. Крылова. - СПб : БХВ-Петербург, 2005. - 368 с.
2.	Аунг Мьо Маунг. Исследование и разработка алгоритмов планирования и приоритетного управления доступом в сетях WiMax: автореф. дис. ... канд. техн. наук / Аунг Мьо Маунг. - М. : МИЭТ, 2010. - 25 с.
3.	Fang Y. Call admission control schemes and performance analysis in wireless mobile networks / Y. Fang, Y. Zhang // IEEE Transactions on Vehicular Technology. - 2002. - Vol. 51, №.2. - Р. 371-382.
4.	Крылов В. В. Нечеткая логика и искусственные нейронные сети / В. В. Крылов, М. И. Дли, Р. Ю. Голуков. - М. : Физматиз, 2001. - 224 с.
References
1.	Syuvatkin V. S., Esipenko V. I., Kovalev I. P., Sukhorebrov V. G., Krylov V. V. eds. (2005) WiMAX - tekhnologiya besprovodnoi svyazi: osnovy teorii, standarty, primenenie [WiMax - Wireless Technology: Fundamentals of Theory, Standards, Application]. SPb, BKhV-Peterburg Publ., 368 p.
2.	Aung M'o Maung (2010) Issledovanie i razrabotka algoritmov planirovaniya i prior-itetnogo upravleniya dostupom v setyakh WiMax. Diss. kand. tekhn. nauk [Research and development of algorithms for planning and priority access control in WiMax networks. Dr. of Techn. Sci. diss.]. Moskow, 25 p.
3.	Fang Y. and Zhang Y. (2002) Call admission control schemes and performance analysis in wireless mobile networks. IEEE Transactions on Vehicular Technology, Vol. 51, No 2, pp. 371-382.
4.	Krylov V. V., Dli M. I. and Golukov R. Yu. (2001) Nechetkaya logika i iskusstvennye neironnye seti [Fuzzy logic and artificial neural networks]. Moskow, Fizmatiz Publ., 224 p.
Семенова О. О., Боярський К. О., Постернак О. М. Фаз1-контролер для мереж WiMAX. У cmammi пропонуеться використовувати для керування доступом до мереж WiMAX фаз^контролер, що дасть змогу уникнути перевантаження у мережi. Вхiдни-ми лтгвштичними змтними контролера е час очтування, довжина черги та розмiр пакета, а його вихiдною лшгв^тичною змшною е величина прюритету абонента. Ро-зроблено структурну схему фаз^контролера. Визначено лтгвютичш змтш, терми та функцп належностi для вхiдних та вихiдних змтних. Розроблено базу правил. Прове-дене iмiтацiйне моделювання роботи фаз^контролера в nрограмi Matlab 6.5.
Ключое1 слова: нечтка логта, доступ, керування, моделювання.
Семёнова Е .А., Боярский К. А., Постернак А. Н. Фаззи-контроллер для сетей WiMAX. В статье предлагается использовать для управления доступом к сетям WiMAX фаззи-контроллер, что предоставит возможность избежать перегрузки в сети. Входными лингвистическими переменным контроллера являются время ожидания, длина очереди и размер пакета, а его выходной лингвистической переменной является величина приоритета абонента. Разработана структурная схема фаззи-контроллера. Определены лингвистические переменные, термы и функции принадлежности для входных и выходных переменных. Разработана база правил. Проведено имитационное моделирование работы фаззи-контроллера в программе Matlab 6.5.
Ключевые слова: нечеткая логика, доступ, управление, моделирование.
O. Semenova, K. Boyarskiy, O. Posternak. Fuzzy-controller for WiMAX networks.
WiMAX is a broadband wireless last mile technology providing high speeds for long distances and offering great flexibility. Scheduling in WiMAX became one of the most important tasks, because it is responsible for distributing available resources among users. A high level of quality of service and scheduling support is one of the most interesting features of the Wi-MAX standard. In modern telecommunication networks the access control techniques are widely used. That is because using such devices instead of traditional ones permits to increase accuracy and reliability of control. Fuzzy systems have replaced conventional techniques in many engineering applications, especially in control systems. In the article it is suggested to use a fuzzy controller for access control in WiMAX networks that allows avoiding congestion in networks. The main objective of this work is providing an implementation of the WiMAX standard using the dynamic fuzzy logic based priority scheduler. We propose to use a fuzzy controller having three input and one output linguistic variables. Input linguistic variables of the controller are waiting time, queue length and packet size, its output variable is user's priority. A block diagram of the fuzzy controller was developed. Linguistic variables, terms and membership functions for input and output values have been defined. The Waiting time linguistic variable has three terms: low, medium, high. The Queue length linguistic variable has three terms: short, medium, long. The Packet size linguistic variable has three terms: small, medium, large. The rules base consisting of twenty-seven rules has been developed. The fuzzy controller has been simulated using Matlab 6.5. Results of the simulation prove the accuracy and reliability of the fuzzy-controller's model.
Keywords: fuzzy logic, access, control, simulation.
      
      
    
=====

        


﻿УДК 004:512
В. М. 1ЛЬМАН, В. В. СКАЛОЗУБ (ДПТ)
1НТЕРВАЛЬН1 ОБ'еКТИ ТА ÏX ГРАМАТИЧН1 СТРУКТУРИ
У статп побудовано структури вiльних штервальних об'екпв i формально! iнтервальноï граматики. Гра-матична структура враховуе умову сумюносп iнтервалiв у ланцюжкових конструкциях породжено! мови.
В статье построены структуры свободных интервальных объектов и формальной интервальной грамматики. Грамматическая структура учитывает условие совместимости интервалов в цепочечных конструкциях порождаемого языка.
In the article the structures of free interval objects and formal interval grammar are constructed. The grammar structure takes into account the condition of interval compatibility in the chain constructions of language generated.
Вступ
Серед множини моделей представлення предметних областей граматичний шдхщ вид> ляеться своею простотою i ушверсальшстю. Нолями граматик е алфавгги, елементи яких -деяю формалiзми предметних областей, пред-ставлеш термiнальними i нетермiнальними символами [1]. Однак, елементами алфавтв мо-жуть бути об'екти бшьш складно! структури. Так, у транспортних, економiчних та iнших системах об' екти предметних областей можуть мати властивосп iнтервальноi природи (далi -штервальш об'екти - 1Об). 1з теорii штерваль-ного аналiзу [2] вщомо, що iнтервали е число-вими об'ектами, визначеними у вщповщнш си-стемi координат, якi задаються двома параметрами: межами штерватв, серединами штерва-лiв та вщхиленням вiд них або iнакше. Тому, носи граматик 1Об повиннi визначатися певни-ми конструктивними структурами у складi вщ-повiдних граматичних структур. Граматична структура задае модель предметно! обласп, яка призначена для проектування i аналiзу шфор-мацiйних потоюв, технологiчних ланцюжкiв, виробничих процесiв тощо. Формально граматична структура (ФГС) визначаеться [3] ношем, сигнатурою i конструктивною аксiоматикою. Складовi ФГС е неоднорщними за змiстом, правилами виконання та iншими показниками.
У робот запропоновано конструктивну ФГС на вшьних 1Об. Вiльнi iнтервали визнача-ються як упорядкованi або неупорядковаш на-бори елементiв пар деякого алфав^у, якi мо-жуть характеризуватися довжиною та iншими характеристиками. Елементи пар символiв, ко-трi визначають iнтервали, не пов'язанi з будь-якою системою координат. Носiй ФГС склада-еться iз конструктивних термшальних i нетер-мiнальних структур iнтервалiв, спецiальних
символiв та множин характеристик, причому нетермiнальнi iнтервали мають нульову характеристику довжини. Сигнатура мютить у собi операцii конкатенацii, постановки, безпосеред-нього виводу, а також iншi операцii та операто-ри. Аксюматика граматичноi структури дозво-ляе будувати вшьну мову на вшьних штервалах i, отже, коректно застосовувати правила постановок. Правила постановок можуть мати детермiнованi або недетермшоваш наванта-ження, обумовленi предметними областями. Деяю нетермiнальнi iнтервали е контекстним супроводом термшальних i також можуть нести певне змютовне навантаження.
Розглянута штервальна ФГС може бути за-стосована для проектування технологiчних процеав на залiзницi при формуваннi по!здв, завантаження приймально-вiдправлюючих ко-лiй станцш тощо. Так, наприклад, 1Об можна застосувати для побудови моделi формування залiзничних поiздiв, якщо кожний тип вагона у граматичнш структурi представити вшьним вiдповiдно навантаженим iнтервалом, причому продукци цiеi структури повиннi враховувати сумюнють вагонiв тощо.
Завдання для моделювання 1Об i ФГС
Метою до^джень е розробка граматичноi модел^ призначеноi для побудови формальноi мови абстрактноi предметноi областi на штер-вальних об' ектах як основи створення автома-тизованоi системи проектування технологiй виробництв iз iнтервальними властивостями. Для досягнення поставленоi мети необхiдно вирiшити декшька задач:
-	розробити структуру породження вшьних штерватв;
-	визначити операци над вiльними штерва-лами i задати правила !х виконання;
© 1льман В. М., Скалозуб В. В., 2009
-	побудувати конструктивну граматичну структуру на структурах вшьних iнтервалiв, яка б породжувала формальну мову. Лан-цюжки мови або можуть при виконанш операцiй конкатенацiй задовольняти умовi сумюност за деяким змiстом для сумiжних iнтервалiв, або вони не шдпорядковаш будь-яким умовам.
Отже, моделювання 1Об i процешв абстрак-тними ланцюжками потребуе штегрованого пiдходу, аналогiчного граматикам структурного проектування [5].
Структура вiльних iнтервалiв
Введемо поняття вiльного iнтервалу - 1Об, iнтервального алфавiту та його структури.
Алфав^и носив формальних граматик скла-даються з вiльних (нечислових) елеменпв у тому розумiннi, що 1х можливо вставляти (пере-ставляти) у конструкщю ланцюжка в будь-яке мюце, обумовлене правилами граматики. Тому будемо вважати, що:
-	будь-який алфав^ А ношя формально! граматики вшьний;
-	конструктивний алфавiт В, елементи котро-го побудоваш на алфавiтi А, - вшьний;
-	вироджеш об'екти алфав^у В ототожню-ються з елементами алфавггу А, отже, А с В.
Наведемо деяю неформальш приклади конструювання вiльних алфавтв.
Нехай задано вiльний термiнальний алфавгг А = {ai }г"=0 такий, що а0 = в - порожнш символ i пiдмножину дiйсних чисел , для яко! 0 е . 1з набору елеменпв ai . алфавiту А по-
будуемо конструкцiю si:
, = (агг , агк ).	(1)
Конструкцiя (1) е вшьною, И елементи не упорядковаш за мiсцем i можуть бути однако-вими. Якщо елементи конструкци упорядкова-нi, тодi конструкцiя (1) задаеться списком [6]
Ъ = [аг,' ак].
Визначення 1. Пару (а^, аг ) = si назвемо е1-
льним простим 1Об, побудованим на алфав> т А.
Пiд простим штервалом у лiтературi [7] ро-зумдать iнтервал без «тша».
Множина вшьних простих iнтервалiв {яг} утворюе вiльний алфавiт В,,, у якому е виро-
джеш 1Об, тобто , = (а. , аг ) = а^ , тому маемо
включення А с В,.
На алфавт В, також можна побудувати k-вимiрш, за числом об'екпв, конструкци 1Об.
Визначення 2. к-вим1рною выьною простою конструкщею 1Об назвемо набiр простих штер-
валiв ((аг1 , а^, — , (%, агк+1 )) = % .
Вiльнi k-вимiрнi iнтервaльнi конструкци е аналогом паралелотошв [2]. Рiзномaнiття ш-тервальних конструкцiй % утворюе конструктивний алфав^ В,к такий, що В, с Вк, якщо % = (Ц, а2 ),(в, в)—,(в, в)) = ,.
З конструкщями % зв'яжемо нaбiр скшче-них чисел {г. }к=1 с Я+ таких, що кожнiй штер-вaльнiй пaрi (аг., аг. 1) ^ г..
Визначення 3. Трiйку (аг , г.) назвемо
навантаженим (посттним) вшьним 1Об.
Визначення 4. Навантаженою к-вим1рною выьною ттервальною конструкцгею називаеть-ся вираз iз набору навантажених 1Об
((аг1 , аг2 , rl), (аг2 , аг3 , Г2 X'" ", (агк-1 , , Гк )) .
Вочевидь, сукупнiсть навантажених штер-вальних конструкцiй також утворюють конс-труктивш aлфaвiти. Якщо конструкци у визна-ченнях 1 - 4 упорядковаш, тодi вони задають списковi вшьш iнтервaльнi конструкци.
За допомогою елементарно! структури Сг дамо формальне визначення вшьних iнтервaлiв:
С, ={Иг, ^, Лг) ,	(2)
де = (А,и,У1,У2,... V,П); А - вшьний ал-фaвiт, визначений вище, и - обмежена шд-множина множини Я+ така, що 0 е и; У. -
характеристичш скiнченнi множини, взaгaлi, рiзноl природи, для яких ве У.;
П = {(,),,, -,,, } - множина необхщних спецi-альних символiв; Ег- = {/122, й132, ——— } - сигнатура вщображень та приписування i Лг - конструктивна aксiомaтикa породження aлфaвiтiв вiльних iнтервaлiв, котра може складатися з окремих або комбшацш наступних aксiомaтик:
^ Лг1 - аксюматика вiльних простих iн-тервaлiв i конструктивного aлфaвiту:
Уаг, а}. е А, Л (аг, а}) = (аг, а}); (аг, а,) = (а.., аг) =
5 - выъний простий 1Об:
s = (а,, а,) = а,, 5 = (в, а,) = а, ;
В5 = К ^ 50 = ^ т = П'
А с Б„
п!
2(п - 2)!
Уа,,а, е А, /2(аг,а,) = (аг,а,) = 5;
(а,, а,) * (а,, аг);
выъний простий ор1ентований ттер-
вал:
5 = (а,,а,) = а,, 5 = (в,а,) = а,;
Б = К ^ 50 = ^ т1 = П +
А с В„;
п!
(п - 2)!
Крiм того, aксiомaтики Л,3 i Лi4 повиннi бути доповненi aксiомaми:
Уа,, а . е А & г е С/ :
1 У
| 5
В5 - конструктивний алфавт выъних про-стих ттервал1в;
У л, 2 - аксюматика вiльних орiентовaних штерватв i конструктивного aлфaвiту:
В5 - конструктивний алфавт выъних про-стих ор1ентованих Штервал1в;
У Л,3 - аксюматика вшьних навантаже-них iнтервaлiв i конструктивного aлфaвiту:
(гр еи & % е Гч, w = [гр, %, у й,..., % ]; -характеристичний список;
У а,, а, е А & гр еи & ущ еУд,
К (а,, а,, w) = (а,,а,, w);
(а,,а,,w) = (а,,а,, w) = 5^);
5(w) - выъний навантажений ттервал;
{5к И}^ = В5 (w) - конструктивний алфавт выъних навантажених Штервал1в;
У Л,4 - аксюматика вшьних навантажених орiентовaних штерватв i конструктивного aлфaвiту:
|У а,, а, е А & гр еи & ущ еУд, [ Н2 (а,, а,, w) = (5, w) = 5
- выъний навантажений ор1ентова-ний /нтервал;
{5к И}*, = В5 (w) - конструктивний алфавт выъних навантажених 1нтервал1в.
w = (0, в, в,..., в) ^ а, (w) = а,;
А с Б, Б с Б (w) & Б с Б (w);
Зу, е w - ймовгршсний елемент,
к,
% = р, ^ X р,=1 ,=1
Структура (2) узагальнюе структури класи-чних алфавтв з елементарними символами i дозволяе розповсюдити !! на aлфaвiти з шшою структурою. Зокрема, якщо алфав^ носiя М числовий, тодi отримаемо звичайну структуру iнтервaлiв у певнш системi координат. Якщо ж алфавгг носiя нетермiнaльний, визначаючий деякий контекст або змют, тодi конструктивнi елементи у структурi (2) можна визначити як вшьш iнтервaли нульово! довжини зi змютов-ними детермiновaними характеристиками списку w.
Виходячи з рiзномaнiття aлфaвiтiв носiя структури (2), можливо створити рiзнi структури штерватв. Нехай на алфавгах Бк носiiв Мк визнaченi штервальш структури типу (2) С,(Бк) = (Мк,Iк,Лк) , тодi на словнику
т	т
Б = и Бк , ^ Бк = 0 маемо можливють побу-
к=1 к=1
дувати конструктивну штервальну структуру
т
Сг (Б) = (М, I, Л, для яко! М = и Мк ,
к=1
тт
1 = и 1к та Л = и Лк .
к=1 к=1
Введена штервальна структура С, (Б) за до-помогою доповнених оперaцiй дае можливють будувати штервальш конструкци титв, зада-них визначеннями 3, 4 та ш. Позначимо конструктивний алфавгг, породжений структурою С, (Б), як Б i вiдповiдно його елементи - .
Навантажеш елементи алфавпу Б роблять його несюнченим. Позбутися нескiнченостi конструктивного алфавпу можна також за допомо-гою вiдповiдноi оперaцii. Тому розглянемо де-якi оперaцii над вшьними iнтервaлaми.
5
Операцп над вшьними 1Об
Представимо аксюматично формaлiзм правил виконання операцш над вiльними штерва-лами. Нехай ® - лiнiйнa оперaцiя конкатенаци, тодi aксiомaтику Л(®) визначимо наступним чином:
Гу^ ^2 , е Вк , ® = ^2 = ^
® ?2 Ф 52 ® ,1, ,1 ® в = в ® ,1 = ,1 = I;
Г^ ® ® 5э = (,1 ® ) ® 5э = ® (?2 ® ?э) = ?1?2?э = 1;
Г^^-^ч,е Вк = Вк, ^1 =1 = ^ [ Вк = вь ^ I =1 = ^2;
Г, = , () & ,2 = ,2 () ^
® ,2 = 1 = 1 w2).
Операщя лшшно! конкатенаци двох штер-вaлiв ?1, ,2 може бути модифшована обертан-ням на деякий кут у штервалу ?2 вiдносно ш-тервалу , [8]. Отримаемо iншi модифшаци конкатенаци: лiво! ®1, право! ® та обох меж iнтервaлiв :
= 61А2) & ?2 = (Ь21,Ь22);
¿11,¿12,¿21,¿22 е В ^
®г?2 = I = (¿, ¿12) V (Ь, ¿22 ), Ь = ¿11 I ¿21;
1)
^ ^ е Вк ,| W1| =1 W2
>1™ р
^ = I = (¿1^ ¿ ) Л (¿2l, ¿ ), ¿ = ¿12 1 ¿22;
ця умова завжди досягаеться, якщо доповнити характеристичний список до потрiбно! довжи-ни порожнiми символами в ;
2)
3)
4)
^ ^ е Вк , W1 = [г1 р , % ,, . , ], W2 = [Г2р , ^^ ^^ . ,],
2§/-
, ^ я.
■-У- ■
и хУ1 хУ2 х ... хУ1 - упорядковано;
'и1,и2 с и & Уг1,У2 с У ^ <П :(и1 х1=1 У^1,и2 х1=1 У2) ^ _П0(и х и2) х!=1 пУ хУ2),
де компонента пг вiдобрaження п е оперaцi!, оператори, алгоритми або структури залежно вiд природи множин У, причому для деяких компонент вiдобрaження на множинах Уг iснуе одиниця 0; зокрема, для компоненти п0 = +, 00 -0.
Рiзновидом оперaцi! ®п е оперaцiя з погли-
нанням меж iнтервaлiв. Аксiомaтикою цiе! опе-рaцi! е:
= ¿12 ) = ,1( W1)& = (¿21. ¿22) = ?2( W2);
¿11, ¿12, ¿21, ¿22 W =П(Wl, W2).
В-
,2 = (¿11, ¿22) = ?эМ
®я = I = ((¿ll = ¿21ХА2 = ¿22 )), ^ Ф W2 .
Якщо операщя ® виконуеться над наванта-женими штервалами, тодi !! aксiомaтику необ-хiдно доповнити списковим вiдобрaженням п, тобто отримаемо складну операщю ®п, для яко!:
Г, = , (w1) & ,2 = ?2 (w2) ^ ®1 ?2 = 1 (w), W =п(Wl, W2).
Введення правила застосування операци п потребуе деяких обмежень на характеристичний список w.
Нехай | w | - довжина характеристичного списку деякого вшьного iнтервaлу ?, тодi припустимо, що:
Операщя конкатенаци з поглинанням меж iнтервaлiв допускае модифiкaцiю поглинання однойменних меж iнтервaлiв , (w1) i ,2 (w2),
тобто коли ¿12 = ¿21. Множину рiзновидiв конкатенаци позначимо символом О.
Визначення 5. Два вшьних iнтервaли , (w1) i ?2(w2) назвемо однотиповими, якщо !х харак-теристичш списки w1 та w2 можуть в^^зняти-ся тiльки першими елементами гч i г2 .
Визначення 6. Характеристичний список w0 = [г,в,в,.,в] множини Ж = и х'1=1 У назива-еться скалярним.
Операщя множення (о) скалярного списку
на вшьнш штервал ?(w), w = [гч,у2, . ,] визначаеться правилом:
Гw0 о ?(w) = ,(w) о w0 = ?
[Wl = [г * гх, в® Vl, в® У2, ... , в® V, ],
де символом * позначено операщю множення дшсних чисел.
За визначенням 5, до класу однотипових в> льних iнтервaлiв належить iнтервaл ^ ([1,у^,у2... ,у,8; ]), котрий е утворюючим
цього класу по операцп множення на скалярний характеристичний список.
Визначення 7. Алфав^ А з елементами
назвемо нормалъним конструктивним алфав> том вшьних навантажених iнтервaлiв.
ФГС на вшьних 1Об
За звичаем формaльнi граматики будуються як безумовш, тобто породжеш прaвильнi лан-цюжки видiляються з вшьно! мови за певними правилами без всяких умов. Але, виходячи з потреб багатьох предметних областей, вiдбiр ланцюжюв iз вiльноi мови необхщно виконува-ти за умови сумюносп характеристик сумiжних 1Об.
Умови для вщбору лaнцюжкiв вiльноi мови зручно задавати в грaмaтичнiй структура Деякi пiдходи до реaлiзaцii умов вщбору ланцюжюв за граматичними правилами наведеш в робот [9].
Нехай рашше визначений термiнaльний ал-фaвiт А та N = Н и Т - нетермшальний алфа-
вiт, який складаеться з основного Н = {а, }р=1 i
характеристичного Т = Т1 х Т2 х — х Тт алфав>
тiв, причому Т = {т,},=0, т,0 = в . Припустимо,
що на aлфaвiтaх А i N визнaченi конструкти-вш структури 1Об типу (2). Вважаемо, що нете-рмiнaльнi 1Об навантажеш, тодi !х представ-лення за структурою (2) задамо як: (а,,а,) = а, ^), де вага ^ е Т 1Об визначаеться характеристичним списком довжини т . Якщо характеристичний список ^ = [в,в,.,в], тодi
а (() = а,.
За представлення штервально! граматично! структури виберемо класичну ФГС [4]:
^ цей елемент вилучено). Сигнатуру та аксю-матику граматично! структури задамо як:
С, = {М; , 11 , Л,) .
(3)
Носш граматично! структури (3) визначимо на конструктивних структурах iнтервaлiв i не-термiнaльному aлфaвiтi, тобто маемо М1 = (А), С5 (Н), ^ . Вважаемо, що наван-тажений конструктивний алфавщ породжений структурою С5(А), - нормальний i навантаже-ний нетермiнaльний конструктивний aлфaвiт -мае нульову характеристику довжини (у списку
I; =Ои {^ , П ^ , ^ , Г , X },
Ле = (Лр, Лк, Л7, Лр, Лу, Л С, ЛН, Лр).
Оперaцii конкатенацп множини О i (о, п,*), визнaченi в попередньому пунктi, змют та правила застосування шших оперaцiй сигнатури будуть нaведенi в аксюматищ. Склaдовi аксю-матики Л1 задамо конструктивними aксiомa-ми.
>	Лр - аксюматика выъно!мови:
У51,52,?3 еБ5 иН3 &У.еО^
51 • 52 = 5152 = 1 ; Уа, ре N ^а®р = ар = 1;
спискове вщображення п застосовуеться тшь-ки на штервальному aлфaвiтi Б5:
' у , е Б АН А Б, и Н, & I = | ^
I • I = I;
Уа, ре N & I = а | р^ I ® I = 1;
{О = р(Б5)|р(Н5)|р(Бх иН5), {/} = Р (^); Р (•) - вглъна мова.
>	Лк - аксиоматика контекстного су-проводу:
У$ е & У5}.(О е , г * [в,в,.,в] ^ ^ ® ^ = ^ = а}. (г) = Т', 15 - ланцюжок гз контекстом;
[{Г5} = Р5 с Р(Б!1 иН!1), Р5 -выъна мова I з контекстним супроводом.
У Лу - аксюматика продукций тдстано-вок та в1дношення безпосереднъого виводу:
р, : Гк, , 1к е Р(Н ^РБ и Нх),
0 < <к1, 0 < 1к| <к2;
ур, :1] 1к &УЛ :1 &, * г ^
$ *= I;
{рг }Г=1 = Р - продукцтна схема;
2
(1 = . ) е (А,, и Н,) & 3 (рг : ^ 1к ) е Р
<
„„„ Рг „„„ ^ 111]12 ^ /1/k/2 ,
р. - допустима продукщя до ланцюжка I .
>	ЛР - аксиоматика програмних продукцт, в1дношення вибору 7 безпосереднього виво-
ду: „
Ург. е Р, 3д;. : (pi,К. ,Щ ) - програмна про-дукцгя;
qi Ф д., г Ф {д;. }П=1 = Q - множина позна-
чок продукцт;
К. с Q - множина вдач i Щ с Q - мно-жина невдач продукцт р.
'дг е Q, дг : (,К,,Щ)&
„ „ р. „
Г р. допустима до I, I ^ I.; ^
„ „ р, „
3 д. е К{, р. допустима до I, I ^ I.;
qi - допустима продукщя до ланцюжка I на множит вдач К.;
дг е Q, дг : (р.,К,,Щ)& Г р. недопустима до I;
„ „ р „
^ 3 д. е Ж., р. допустима до I; I ^ I.;
qi - допустима продукщя до ланцюжка I на множит невдач Ж..
>	ЛУ - аксюма оператора вибору продукцт для безпосереднього виводу:
Гу% е Q, дг: (рг,К,,Щ) & е Р(В, и Н);
[Л(1, д.) - оператор вибору продукцт;
1Г =>1 & 1Г е Г ^
Г	-
д.. /(1д )=д.
Л (I, д,) = д. е К. | 1 ^ 1п;
1Г & 1Г е ^ ^
Л (I, д)=д.
Л(1, д,) = д. е	^ 1п.
>	ЛС - аксиоматика сум^сност! кон-текстних характеристик ланцюжюв:
У/?,// е ^, /Л = .а,, (^),
< = К,Л, Тг2, Я, . ,"•, Ч, .к ]&
т; =т. ^ ,- сум^сш за индексом г;
|Уг, I/, - сум1сн1 за тдексом г ^ и/, ^ - суммт;
У1 = /^Д, /1,/~2 е ^(АА, иН,); Г за аксиоматиками ЛК, Л7 ^
", ррк „
^. ^^г,.[т;1,л ,т;2,.2 а;,.Я,]гхк,.к];
для фшсованих значень iндексiв гг та ]г пере-вiряеться збiг характеристик т. та т. за цими шдексами по схемi (aксiомaтики ЛР, ЛУ ):
дк:(а;Т;г ^ Т;га, ,{дк+1},{0}); дк+1:(а.т 1г .Т;г ,{дк+2},{0}); дк+2:(а; ^в,{дк+э},{0}); дк+э:(а. {дк+4},{0});
дк+2 :
>	ЛН - аксиоматика тструктивних правил:
и с Н, - множина початкових iнтервaль-них конструкцш;
¿0 е и & 3д, : (р; : /0 ^ Ь, ^)е Q ^ д; - aксi-
ома початку;
[Гк е ^(вВ,) | ^ & 3дг : (р, : ^ 1к,К,,Щ) е Q, Ж. =0 | ((; =0 & Щ = 0) => д;*;
д;* - заключна аксюма;
>	Л £ - аксюматика виводу правильних ланцюжтв 7 формальног мови:
(3((ql,q2,••• дт)сQ; д. = дк| д. фдк)&
/0 еи & /и е ^(А, ;
'Г „ дЛ „ д.2 д)ш „ ^
/0 ^/1	^ 1т	^
V	/
1т -правильний ланцюжок;
„ „ «1 „ «2 я'т „	„
% (1т) = (10 ^ 11 ^ • • - ^ 1т) - вив/д ланцюжка 1т ; {1т} = Ь(Са) - формалъна мова, породжена ттервалъною граматичною структурою.
Отже, побудована конструктивна ФГС на вшьних 1Об, за якою породжуеться певна сема-нтично узгоджена мова.
Висновки
У робот розглянуто вiльнi штервальш конс-трукцii, введено поняття вшьного штервально-го об'екту та розроблено формальну конструк-тивну структуру, яка породжуе цi конструкцii. Запропоновано операци на вiльних штерваль-них об'ектах i встановлено !х влaстивостi. На вшьних штервалах розроблено формальну гра-матичну структуру, яка може враховувати умо-ву сумюносп iнтервaльних об'ектiв у ланцюж-ковiй конструкцii.
Побудована штервальна граматична структура узагальнюе звичайш структури граматик [1, 3, 4] i при нaклaдaннi певних обмежень на правила постановок, !х навантаження та iн. дозволяе отримати граматичш класи Хомського й iнших тишв.
Зaпропоновaнi розробки iнтервaльних структур дають можливють моделювати технолоп-чш процеси на трaнспортi.
Б1БЛ1ОГРАФ1ЧНИЙ СПИСОК
1. Гладкий, А. В. Формальные грамматики и языки [Текст] / А. В. Гладкий. - М.: Наука, 1973. -368 с.
2.	Жолен, Л. Прикладной интервальный анализ [Текст] / Л. Жолен. - М.-Ижевск: Ин-т компьютерных исследований, 2007. - 468 с.
3.	1льман, В. М. Структурний пвдхщ до проблеми вщтворення граматик [Текст] / В. М. 1льман, В. I. Шинкаренко // Проблеми програмування. -2007. - № 1. - С. 5-16.
4.	Шинкаренко, В. И. Структурные модели алгоритмов в задачах прикладного программирования. I. Формальные алгоритмические структур-ры [Текст] / В. И. Шинкаренко, В. М. Ильман, В. В. Скалозуб // Кибернетика и системный анализ. - 2009. - № 3. - С. 3-14.
5.	Алгебро-алгоритмические модели и методы параллельного программирования [Текст] / Ф. И. Андон и др. - К.: Академпериодика, 2007. - 634 с.
6.	Босов, А. А. Функции множества и их применение [Текст] / А. А. Босов. - Днепродзержинск: Изд. дом «Андрш», 2007. - 182 с.
7.	Математическая энциклопедия [Текст]. -Т. 4. - М.: СЭ, 1984. - 1216 с.
8.	Роджерс, Д. Математические основы машинной графики [Текст] / Д. Роджерс, Дж. Адамс. - М.: Мир, 2001. - 604 с.
9.	Братчиков, И. Л. Синтаксис языков программирования [Текст] / И. Л. Братчиков. - М.: Наука, 1975. - 232 с.
Надшшла до редколегп 28.08.2009.
Прийнята до друку 09.09.2009.
      
      
=====

        


﻿УДК 004:377
Р. В. КРИВАКОВСЬКА (Дншропетровський державний аграрний ушверситет)
АВТОМАТИЗОВАН1 СИСТЕМИ КЕРУВАННЯ КОРОТКОСТРОКОВИМИ КУРСАМИ ТА IX М1СЦЕ В АСК КАФЕДРИ ВНЗ
У статп проанал1зовано передумови для створення шформацшних систем управлшня короткострокови-ми курсами тдвищення квал1ф1кац11, розглянуп основш задач1 системи, дана структура шформацшно! сис-теми i розглянуп деяк1 питання и реатзаци.
В статье проанализированы предпосылки для создания автоматизированных систем управления краткосрочными курсами повышения квалификации, рассмотрены основные задачи системы, дана её структура и рассмотрены некоторые вопросы по ее реализации.
Main prerequisites for creation of automated control systems for short-term courses of qualification upgrading are analyzed in this article. Also main tasks for the system are considered, the system structure are given. Some issues on its realization are considered as well.
Автоматизащя керування навчальним про-цесом е одним iз важливих напрямюв удоско-налення освгги. Це пов'язане iз усе бiльшим укрупненням навчальних центрiв, збiльшенням iнформацiйних потокiв, ^ отже, з ускладненням керування ними. Як зазначено в статп [1], сьо-годнi неможливо займатися наукою й освггою поза iнформацiйним процесом.
Проблемам побудови шформацшних систем керування навчальним процесом присвячено безлiч статей. Бiльшiсть iз них розглядають керування в школах i стацiонарах вузiв. Робiт, присвячених керуванню короткостроковими курсами перетдготовки й пiдвищення квалiфi-кацii, меш знайти не вдалося.
У випадку, коли iнформацiя з курсiв розрiз-нена й зберiгаеться в рiзних мiсцях, виникае проблема синхронiзацii, коли кожну змiну не-обхiдно дублювати в декiлькох рiзних мiсцях, що пiдвищуе ймовiрнiсть помилки. Крiм того, таке дублювання i пов'язана з ним надмiрнiсть можуть приводити до того, що важлива шфор-мащя може залишитися непомiченою на еташ планування й складання розкладу (що приведе до проблеми на еташ його виконання). Тому представляеться розумною розробка шформа-цiйноi системи керування курсами в межах ка-федри ВНЗ.
При створенш й заповненш банку шформа-цii мае велике значення повнота iнформацii. Це означае, що вся доступна шформащя повинна бути внесена в банк, щоб уникнути помилок при його використанш. Крiм того, важливо за-безпечити резервне кошювання й зберiгання iнформацii. Розглянемо основш завдання, що виникають у процес керування навчальним
процесом. У книзi [2] наведена схема взаемо-зв'язку завдань планування навчального наван-таження з iншими видами навантажень. Вона наведена на рис. 1.
Як можна побачити, завдання керування короткостроковими курсами, яю можуть про-водитися на кафедрi, стосуються задач плану-вання навчального навантаження кафедри. Роз-глянемо 1'х бiльш докладно. Керування короткостроковими курсами вiдрiзняеться вiд керу-вання звичайними видами навчальних наванта-жень (стацiонар, заочники) i мае такi особливо-стт
1.	Змiнюванiсть навантаження в част Оди-ницею часу, на яку плануеться навантаження по курсах, е тиждень. Навантаження для кожного тижня рiзнi. Тому на виходi ми маемо роз-клад, який мiняеться щотижня (вiдмiннiсть вiд стащонару).
2.	При роботi iз середньостроковими курсами (один-три мюящ) необхщно виконувати на-вчальнi плани по тижнях i нормативнi вимоги до кшькосп занять (вiдмiннiсть вiд заочниюв).
Завдання керування короткостроковими курсами можна роздiлити на завдання оперативного регулювання i задачi середньострокового планування-прогнозування.
Основним завданням першого типу, вщ виконання яко! залежить виконання вшх iнших, е монiторинг. Це особливо важливо у випадку велико!' кшькосп рiзних курсiв, проведених на кафедр^ тому що в умовах дефщиту ресурсiв зростае кiлькiсть помилок i вони стають бiльш критичними. Також важливють завдання мош-торингу зростае у зв'язку з тим, що курси зви-чайно щотижня мають рiзнi навчальш плани
© Криваковська Р. В., 2009
(на вщшну, наприклад, вiд стацiонару, навча-льний план якого не змшюеться протягом семестру або чверт^. При роботi з короткостроко-вими курсами необхщно проводити облiк вико-нання навчального плану, планiв викладачiв i
використання аудиторного фонду (звичайно це аудиторний фонд кафедри).
Необхщно проводити постшний мошторинг виконання навчальних планiв по викладачах i предметах у цшому. Це дозволить зменшити кiлькiсть механiчних та iнших помилок.
Планування навчальних навантажень ректоратом (навчальною частиною)		Планування виюористання аудиторного фонду внз
Планування
навчальних
навантажень				<-
деканатом
/			ч
Облк				АналЬ
виюонання				виконання
навчальних				навчальних
план1в				планв
Планування навчальних навантажень кафедрою
0бл1к виюонання плану в икла дачами
АналЬ виюонання планв в икла дачами
Планування ¡нших видв роб1т
X
Задач1 оперативного регулювання
Планування методично! роботи
Планування нау ков оТ роботи
Рис. 1. Схема взаемозв'язку завдань планування навчального навантаження з шшими завданнями керування
Наступним важливим завданням шформати-зацп е завдання опташзаци навчальних плашв i прогнозування. При роботi з курсами, складан-ня навчального плану слщ проводити вiдразу ж шсля початку занять новою групою. Тому слщ оцiнити передбачуване завантаження виклада-чiв з облiком 1х шкових навантажень (заочнi сеси, здача модульних контрольних робгт i т.д. [3]) i за необхiдностi вiдкоригувати навчальний план. При цьому необхщно взаемодiяти з ш-шими керуючими системами (заочний деканат, iнститут шслядипломно1 освгти i т.д.). Для в> дображення шформаци iз планiв можна вико-ристовувати рiзнi графiки, тому що iнформацiя в такому видi легше сприймаеться. Для планування також доцшьно використовувати шфор-мацiйну систему.
При робот в умовах невизначеност (а роботу в умовах мшливого навантаження можна дорiвняти до частково! невизначеностi) також важливi питання стiйкостi розкладiв i планiв. 1х необхiдно складати таким чином, щоб змiни в кiлькостi курсiв мшмально впливали на виконання навчальних плашв.
Для зручносп роботи iз системою повиннi бути передбаченi засоби вiзуалiзацil, такi як рiзнi види розкладiв (розклад викладачiв, ауди-торш, занять), таблицi й графiки виконання навчальних плашв.
Використання шформацшних систем дозволить також проводити аналiз виконання навчальних плашв, що дозволить знайти «вузью мюця» у систем^ виявити помилки, що найбшьше часто зустрiчаються.
Дуже важливим питанням е питання взаемо-ди системи iз зовнiшнiм середовищем. У цьому випадку пiд зовнiшнiм середовищем маються на увазi системи керування вузом i кафедрою. Тут виникае питання сумюносп на рiвнi формата даних. На жаль, менi не зустрiчалися статтi, де розглядалося б порiвняння рiзних стандарт-них i нестандартних форматiв розкладiв. Менi здаеться, що використання стандартних форма-ив даних, таких як данi, роздшеш комами, дозволить будувати системи, сумюш мiж собою.
Оскiльки завдання керування короткостро-ковими курсами виршуеться усерединi кафедри, доцiльно розглядати АСУ куршв як частину
АСУ кафедри. Основна взаeмодiя здшснюеться на рiвнi розкладу занять викладачiв i розкладу зайнятостi аудиторiй (для завдань складання розкладу й монiторингу), i на рiвнi навчальних планiв i навантажень (для завдань роботи з
навчальними планами). Тобто при побудовi АСУ кафедри необхiдно передбачити можли-вiсть И розширення для роботи з курсами.
На рис. 2 представлена базова структура шформацшно! системи.
Рис. 2. Базова структура шформацшно! пвдсистеми курс1в та ll зв'язок з шшими системами
Для оргашзацп банку даних доцiльно вико-ристовувати реляцшш бази даних. Вони забез-печують розв'язок усiх завдань, що виникають при роботi з шформацшною системою. Структура бази даних показана на рис. 3.
Осшльки оргашзащя шформацшно! системи вимагае багато коду, то стд роздiлити програ-му на модулi. Зразок структури модулiв показаний на рис. 4.
Архтектура шформацшно! системи в дано-му випадку залежить вщ того, де використову-ватиметься дана система. Якщо управлшня курсами здшснюватиме одна людина, що працюе за одним i тим же комп'ютером i не плануеться прямий доступ викладачiв i тих, що вчаться, до системи, то для роботи досить про-грами, що запускаеться на одному комп'ютерт А якщо передбачаеться, що управлшня здшснюватимуть декшька людей або плануеться, що розклад буде доступний iз рiзних комп'ютерiв, то програму необхiдно зробити мережевою. В цьому випадку розумно викори-стовувати ктент-серверну архiтектуру, на-приклад, Web-орiентовану. В цьому випадку користувачам не потрiбно встановлювати до-даткове програмне забезпечення, а вся обробка ведеться на сервера Недолiком тако! структури е необхщшсть використовувати додатковi засо-би для забезпечення безпеки роботи. Якщо ре-дагування даних у ^d^i проводять одночас-но декшька чоловш, необхiдно передбачити
механiзм блокувань i вирiшень конфлiктiв при запись Для побудови шформацшно! системи можуть використовуватися рiзнi мови програ-мування i СУБД. Але використання комерцш-них iндустрiальних серверiв баз даних (типа Oracle) вимагае великих каттальних вкладень. Тому доцiльно використовувати безкоштовш СУБД, якi можуть працювати в ктент-сервер-нiй архiтектурi, такi як MySQL. Виходячи з тих же мiркувань, як основна мова програмування була вибрана мова PHP.
Бшьшють iснуючих систем управлiння кафедрою е пропрiетарними програмними роз-робками комерцiйних фiрм, що продаються. Також iснуе безлiч власних розробок вузiв. Недолiками цих систем е !х закритiсть, що утруднюе 1х перенесення в iншi умови. У разi пропрiетарних програм цiна ршень часто виявляеться занадто високою. Тому я вважаю, що розробки подiбних систем можуть проходи-ти шд вiльними лiцензiями (GPL, BSD License i т.д.). Це дозволить розширити потенцшний круг споживачiв таких програм, забезпечити обговорення i вирiшення складних проблем силами спiвтовариства.
Моя розробка подiбноI структури системи зроблена частково. Ця програма випущена як Open Source (тд лiцензiею GPL) i може бути завантажена за адресою http://sourceforge.net/ projects/short-termcourc.
Рис. 3. Структура бази даних
Рис. 4. Структура модулiв програми
Висновок
Побудова шформацшно1 системи курс1в е необхщною д1ею для установ i3 великою заван-тажешстю рiзними видами куршв. Це можуть бути як вузи, так i рiзного роду навчальш цен-три. Це дозволить спростити роботу диспетчера i позбавитися вщ рiзних видiв помилок. При створенш iнформацiйноï системи всерединi ка-федри вузу, вона повинна бути частиною ш-формацiйноï системи кафедри.
Б1БЛЮГРАФ1ЧНИЙ СПИСОК
1. Подмазш, С. 1нформацшно-аналгтичне забезпе-чення управлшня освггшми системами [Текст] /
С. Подмазш // Освгта 1 управлшня. - 1997. -т. 1, № 1. - С. 137-139.
2.	Ол!ф!ров, О. В. 1нформацшна система кафедри ВНЗ (методолопчш основи створення: пошук, ршення) [Текст] / О. В. Ол!ф!ров, Н. М. Вой-тюшенко. - Донецьк, 2002. - 71 с.
3.	Криваковская, Р. В. Планирование занятий в условиях высокой загрузки [Текст] / Р. В. Криваковская // Материалы 8-й межд. междисциплинарной конф. «Современные проблемы гуманизации и гармонизации управления» (Харьков, 2008). - С. 188-189.
Надшшла до редколеги 27.08.2009.
Прийнята до друку 08.09.2009.
      
      
    
  



=====

        


﻿УДК 004.7(066)
Ю. М. 1ВЧЕНКО (ДПТ), В. Г. 1ВЧЕНКО, О. М. ГОНДАР (1ОЦ Приднiпровськоi залiзницi, Дншропетровськ)
СИСТЕМА МОН1ТОРИНГУ КОРПОРАТИВНО? ШФОРМАЦ1ЙНО1 МЕРЕЖ1
В статп надано оцшку небезпещ збо1в сервгав та служб KopnoparHBHoi' шформацшно-телекомушка-цшно! системи Придншровсько! зал1знищ, важливосп виконання постшного контролю функцюнування ос-новних компонента системи. Запропоновано класифжацш компонента за категор1ями залежно в1д функць онального призначення i програмне забезпечення для контролю компонента кожно' категорп.
Ключовi слова: корпоративна шформацшно-телекомушкацшна система, контроль функцioнувaння, про-грамний контроль
В статье оценена опасность сбоев сервисов и служб корпоративной информационно-телекоммуникационной системы Приднепровской ж.д., важности осуществления постоянного контроля функционирования основных компонентов системы. Предложены классификация компонентов системы по категориям в зависимости от функционального назначения и программное обеспечение для контроля компонентов каждой категории.
Ключевые слова: корпоративная информационно-телекоммуникационная система, контроль функционирования, программный контроль
The danger of failures of services and divisions of the corporate information-telecommunication system of Prydniprovs'ka Railway, the importance of realization of permanent control of functioning the basic components of a system are estimated in the article. The classification of system components by categories, depending on the functional setting and the software for controlling the components of every category are offered.
Keywords: corporate information-telecommunication system, control of functioning, software control
Корпоративна мережа Придншровсько! за-лiзницi вимагае постшно! уваги до себе. Збо! апаратного чи програмного забезпечення мо-жуть провести до тяжких наслщюв. Значне сповшьнення функцюнування мережевих сер-вюв та служб - найменш неприемне з них. Особливо складними е випадки, коли зовшм припиняеться функцюнування критично важ-ливих служб i додатюв, а також коли стають недоступними окремi сегменти мережi або те-риторiально вщдалет пiдприемства.
Вiд правильно!, коректно! роботи маршру-тизаторiв та шшого мережевого обладнання залежить доступшсть серверiв та !х сервiсiв. Вщ працездатностi серверiв (веб-серверiв, сер-верiв баз даних, серверiв електронного докуме-нтообiгу), в свою чергу, залежить робота важ-ливих додаткiв i сервiсiв, якi забезпечують функцюнування оперативних систем АСК ВП УЗ та АСК ПП УЗ. Вихщ з ладу будь-якого з пере-лiчених компонентiв може привести до серйоз-них порушень у робой шформацшних систем.
Але слiд вщм^ити, що вихiд з ладу обладнання або збш в робот програмного забезпечення не завжди е основними i найбiльш небез-печними причинами порушення функцюнуван-ня iнформацiйних систем.
Бiльшoю небезпекою е збо!, внклнкaнi зло-вмисними дiями всеpедннi або ззoвнi меpежi.
Зловмисники, використовуючи вpaзлнвoстi програмного забезпечення чи помилки в конф> гуpaцii, можуть виконати безлiч деструктивних дiй, починаючи з простого виведення з ладу сеpвеpiв, дaлi змiнн кoнфiгуpaцii мережевого обладнання, порушення роботи мереж1, змши спрямування тpaфiкa, зaкiнчуючн зараженням вipусaми та викраданням кoнфiденцiйннх даних.
Не варто залишати поза увагою також помилки обслуговуючого та керуючого персоналу пiдчaс обслуговування чи змши конф^урацп будь-яко1 частини шформацшних систем.
Вс пеpелiченi вapiaнтн вщмов та порушень в poбoтi шформацшних систем можуть викли-кати серйозш мaтеpiaльнi збитки: затримки ва-гошв, припинення pеaлiзaцii квнткiв, розголо-шення кoнфiденцiйнoi iнфopмaцii, втрата до-вip'я клiентiв тощо.
Оскiлькн виключити повнютю з6о1 апаратного чи програмного забезпечення неможливо, ршення проблеми полягае в постшному конт-poлi стану складових частин iнфopмaцiйнoi системи для отримання iнфopмaцii щодо проблем на раншх стaдiях.
© 1вченко Ю. М., 1вченко В. Г., Гондар О. М., 2011
Для досягнення ще! мети, як правило, вико-ристовусться рiзноманiтне програмне забезпе-чення, яке контролюе роботу серверiв, компо-нентiв мережi передачi даних, змiни конф^ура-цiй, а також збирае статистичну iнформацiю щодо !х функцiонування.
Вибiр засобiв монiторингу залежить вiд рiз-них факторiв. Так можливосп монiторингу ме-режевого обладнання, в значнiй мiрi, визнача-ються його виробником. Для серверiв вирша-льним е тип операцшно! системи та прикладне програмне забезпечення.
Зараз iснуе значна кшьюсть програмних продуктiв для здшснення контролю функщону-вання iнформацiйних систем та !х складових.
Класифiкуемо компоненти шформацшних систем за категорiями залежно вiд функщона-льного призначення та розглянемо програмш продукти, якi виконують !х контроль.
Можливо видiлити наступи категорп та програмне забезпечення для !х контролю [2]:
Кате-ropiï	Компоненти	n3
1	Доступшсть та змти конфiгурацiй мережевого обладнання, збе-реження резервних ко-пiй конфiгурацiй	Rancid, Nagios
2	Контроль безпеки, на-явностi вразливостей та помилок конфцуру-вання систем i сервiсiв	Nessus, Lotus Domino
3	Статистика стану i за-вантаження каналiв, облiк помилок, деталь-ний аналiз трафiку	Cacti, Fluke NetWatch, Fluke Netflow Tracker
4	Контроль функцюну-вання критичних служб i додатшв	Nagios
5	Iнвентаризацiя ПЗ сер-верiв та користувачiв, контроль встановлено-го ПЗ	Microsoft System Center Configuration Manager 2007
Програмне забезпечення Rancid проводить мошторинг конфiгурацii маршрутизаторiв, включаючи програмне i апаратне забезпечення (модул^ серiйнi номери i т. ш.), та використо-вуе Subversion для контролю ютори змiн.
Nagios - це додаток, що використовусться для виконання монiторинга систем i мереж. Вiн стежить за певними додатками i службами та генеруе сповiщання в залежносп вiд поведiнки служб, за якими ведеться спостереження.
Сумюне використання програмного забезпечення Rancid i Nagios дозволяе проводити постiйний контроль змш конфiгyрацiй мереже -вого обладнання, мати актуальний набiр резер-вних копiй файлiв конфiгyрацiй, отримувати оперативш повiдомлeння про нeдостyпнi вузли мeрeжi пeрeдачi даних. Це дозволяе контролю-вати спроби нeсанкцiонованих змiн конф^ура-цiй маршрyтизаторiв, оперативно виявляти i виправляти помилки адмiнiстраторiв мeрeжi пeрeдачi даних при виконаннi змiн конфтура-цiй мережевого обладнання. У випадку, якщо змiни конфiгyрацii приводять до вщмови в ро-ботi вyзлiв мeрeжi, програмне забезпечення Nagios, що здшснюе контроль за достyпнiстю вyзлiв, сповiстить про це вiдповiдальних сшв-робiтникiв.
Nessus - це програма для автоматичного пошуку вiдомих вразливостей в захисп шфор-мацiйних систем. Вона спроможна виявити ви-ди ураження, яю найбiльш часто трапляються, наприклад:
-	наявнiсть вразливих версш служб або дeмонiв;
-	помилки в конф^ураци (наприклад, вщ-сутнють нeобхiдностi авторизацii на SMTP-серверО;
-	наявнiсть паролiв за замовчанням, пус-тих або слабких паролiв.
Програма мае клiент-сeрвeрнy архiтeктyрy, що значно розширюе можливостi сканування.
IBM Lotus Domino Server - сервер додатюв системи Lotus Notes, базово надае ряд сeрвeсiв (нереляцшна СУБД, сервер каталопв, пошто-вий сервер, web-сервер) i може використовува-тися для побудови корпоративних систем елек-тронного документообту, колeктивноi роботи, шших додаткiв. Вiн мае в своему складi великий набiр модyлiв. Основними з яких е пошто-вий сервер, http-сервер, сервер баз даних.
На Придшпровсью залiзницi за допомогою Nessus i Lotus Domino розроблена система пе-рeвiрки парамeтрiв безпеки сeрвeрiв i мережевого обладнання. Система складаеться з трьох компонeнтiв:
1.	Nessus-сервер - програма для автоматичного пошуку вщомих дiрок в захисп шфор-мацiйних систем;
2.	Плановик завдань, який безпосередньо виконуе пeрeвiркy сeрвeрiв i мережевих служб, запускае клiент Nessus з заданими параметрами за розкладом;
3.	База даних «Безпека» (Lotus Domino) е сховищем сканера Nessus з вщстеженням появи та усунення критичних вразливостей на серве-
рах, яК скануються. База налагоджена таким чином, що при виявленi критичних вразливос-тей автоматично надсилае повщомлення з опи-сом i рекомендащями спiвробiтнику вiдповiда-льному за супроводження даного сервера.
Використання даного комплексу дозволяе проводити аналiз захищеностi систем та вузлiв мережi, прогнозувати появу порушень безпеки, контролювати процес усунення виявлених вра-зливостей.
Cacti - веб-додаток, який дозволяе будувати графши за допомогою RRDtool. Cacti збирае статистичш данi за певний iнтервал часу i вщо-бражае !х у графiчному видi. Переважно вико-ристовуються стандартнi шаблони для вщо-браження статистики щодо завантаженостi процесора, надання оперативно! пам'ятi, кшь-костi запущених процесiв, використання вхщ-ного/вихiдного трафша каналiв зв'язку.
Дане програмне забезпечення використову-еться для контролю завантаженосп та кiлькостi помилок каналiв зв'язку в мереж передачi да-них (видшених аналогових, супутникових ка-налiв, волоконно-оптичних лiнiй зв'язку).
Диспетчерська система NetWatch - це засiб управлшня з веб-iнтерфейсом, який надае мож-ливiсть контролю стану мережевих пристро!в у форматi, що вiдповiдае вимогам ушх рiвнiв техшчно! компетенци.
Ушкальний iнтерфейс Netwatch представляе новий функцюнальний рiвень управлiння мережею i виконуе огляд мережевих ресурсiв з використанням штернет-технологш. Високо-класна презентацшна складова продукту дозволяе бшьш широкiй аудитора спостерiгати i ощ-нювати стан мережi та параметри, з якими вона працюе. Замють надання технiчно-орiентованих графiкiв i дiаграм Netwatch представляе шфор-мацiю у зручному форматi, зображаючи мережу у виглядi зрозумшо! схеми, з нескладним доступом до додатково! шформацп. Система дозволяе легко iнтегрувати зв^и, набори даних та компоненти шших управляючих систем.
Набiр перелiчених програмних продуктiв використовуеться для побудови системи контролю якостi каналiв зв'язку, !х завантаженостi, доступностi вузлiв мереж передачi даних. На базi дано! системи створено web-портал, з роз-дшами, якi контролюють стан основних вузлiв мережi та каналiв зв'язку, компонент мереж щодо кожно! станцп. Для контролю рiвня помилок та стану резервних видшених аналогових каналiв зв'язку створеш роздши порталу для кожно! дирекцп залiзницi, якi виконують
цей контроль спшьно з програмним забезпе-ченням Cacti.
NetFlow Tracker - це програмне ршення для збору та аналiзу NetFlow-шформацп, яку надае обладнання Cisco. Програмне забезпечення встановлюеться на серверi i дозволяе акумулю-вати даш, а також надавати звiти про мереже-вий трафiк в реальному масштабi часу (до 14 дiб), та забудь-який перiод часу з рiзним рiвнем деталiзацil (вiд 1 хвилини).
Наприклад,
С3845-Dnepr-2 - Traffic - Sinelnikovo Coptic)
300 k 200 k 100 k
1S0O 18:00 20:00 22:00 00:00 02:00 04:00 06:00 08:00 10:00 12:00 14:00 □ Inbound Current: 22.82 k Average: 19.47 k Maximum: 165,01 k ■ Outbound Current: 117,15 k Average: 7Q.07 k Maximum: 386.46 k
кожну годину,
C3845-Dnepr-2	Traffic - Sinelnikovo Coptic)
~с 700 к и 600 к л 500 к щ 400 к а 300 к		-L
Я
А	á i л	К 4
j* 100 к	ll	Jh\ hAi
□ Inbou ■ Out bo	rid jnd	20 21 Current: 25.57k Current: 130,16	22 23 24 25 26 Average: 16.56 к Maximum: 220,27 к к Average: 61.30 к Maximum: 988.29 к
- кожну добу,
C3845-Dnepr-2 - Traffic - Sinelnikovo [optic)
Week 17	Week 18	Week 13	Week 20
Current: 33.27k Average: 19.78k Maximum: 362,07k Current: 175,73 k Average: 6G.97 k Maximum:
- кожен тиждень.
NetFlow Tracker використовусться в корпо-ративш мереж Придншровсько! залiзницi для збору детатзовано! статистики щодо трафша маршрутизаторiв Cisco в найбшьш важливих вузлах мережi передачi даних (Дншропет-ровськ, Кривий Pir Головний, Запорiжжя, CiM-ферополь, Джанкой) в безперервному режимi. При необхщносп е можливiсть проведення тимчасового контролю шших вузлiв мережi, !х бшьше 100, у разi зниження якост передачi даних в мережа
Використання програмного рiшення NetFlow Tracker разом з ПЗ NetWatch дозволило шдняти рiвень контролю шформаци, яка пе-редаеться в мережi передачi даних, на якiсно новий рiвень i значно скоротити час на визна-чення причин порушення нормально! !! роботи. Це дае можливють пiдвищити надiйнiсть функ-
цюнування мережi передaчi даних разом з резе-рвyвaння обладнання y вyзлax [1].
Незважаючи на порiвняно нетривалий тер-мiн експлyaтaцiï даного програмного забезпе-чення, його ефективнiсть вже шдтверджена y випадках виявлення причин збо1'в в роботi мереж та ïx yсyнення. Бiльш того, функцюнальш можливостi NetFlow Tracker дозволяють прово-дити налагодження оперативного контролю та журналу повiдомлень, якщо кшьюсть небажа-но1' або неслужбово1' шформаци перевищить рiвень, визначений aдмiнiстрaтивною политикою. Це дае можливiсть здшснювати контроль aктивностi та знаходити ïï джерело нaвiть в тих випадках, коли тсля ïï виникнення пройшов досить значний час.
Microsoft System Center Configuration Manager 2007 - програмний пакет для керування IT-ресурсами тдприемства (серверами та робо-чими стaнцiями пiд yпрaвлiнням операцшних систем Windows).
Основнi можливостi: iнвентaризaцiя програмного та апаратного забезпечення; розпо-всюдження програмного забезпечення; управ-лiння оновленнями оперaцiйниx систем та прикладного програмного забезпечення; оцшка врaзливостi ктенпв; монiторинг використання програмного забезпечення; вщдалене управлш-ня; розгортання обрaзiв операцшних систем;
управлшня мобiльними пристроями; управлш-ня гетерогенними системами.
Важливiсть даного програмного пакета важ-ко перебшьшити, тому що у поточний час кшь-кiсть робочих станцiй, що шдключеш до мережу обчислюсться тисячами, i вона неухильно зростае.
Використання розглянутих програм дозво-ляе не тiльки оперативно усувати збо! у функ-цiонуваннi iнформацiйних систем, а також i запобiгати !х виникненню.
Б1БЛ1ОГРАФ1ЧНИЙ СПИСОК
1.	1вченко, Ю. М. 1нтеграц1я мережевого обладнання АСК ВП УЗ та АСК ПП УЗ, щдключення його до еМПД [Текст] / Ю. М. 1вченко, В. Г. 1вченко, О. М. Гондар // Вюник Дшпро-петр. нац. ун-ту зал1зн. трансп. 1м. акад. В. Ла-заряна. - 2009. - Вип. 29. - Д.: Вид-во ДНУЗТ, 2009. - С. 143-146.
2.	Ивченко, Ю. Н. Система мониторинга информационной сети Приднепровской ж. д. [Текст] / Ю. Н. Ивченко, В. Г. Ивченко, О. Г. Гондар // Тези доп. М1жн. наук-практ. конф. «Сучасш ш-формацшш технологи на транспорт!, в промис-ловосп та освт» (13-14.05.2010 р., Дншропет-ровськ). - Д., 2010. - С. 12-13.
Надшшла до редколегп 05.11.2010.
Прийнята до друку 12.11.2010.
      
      
    
  



=====

        


﻿УДК 004.7(066)
Ю. М. 1ВЧЕНКО (ДПТ), В. Г. 1ВЧЕНКО, О. М. ГОНДАР (1ОЦ Приднiпровськоi залiзницi, Дншропетровськ)
СИСТЕМА МОН1ТОРИНГУ КОРПОРАТИВНО? ШФОРМАЦ1ЙНО1 МЕРЕЖ1
В статп надана оцшка небезпещ 36oíb серв1ав та служб корпоративно! шформацшно-телекомушка-цшно! системи Придншровсько! зал1знищ, важливосп виконання постшного контролю функцюнування ос-новних компоненпв системи. Запропоноваш класиф1кац1я компоненпв за категор1ями, залежно ввд функщ-онального призначення, i програмне забезпечення для контролю компоненпв кожно! категори. Ключовi слова: мониторинг корпоративно! iнформацiйно! мережi.
Корпоративна мережа Придншровсько! за-лiзницi вимагае постшно! уваги до себе. Збо! апаратного чи програмного забезпечення мо-жуть провести до тяжких наслiдкiв. Значне сповшьнення функцiонування мережевих сер-вюв та служб - найменш неприемне з них. Особливо складними е випадки, коли зовшм припиняеться функцюнування критично важ-ливих служб i додатюв, а також коли стають недоступними окремi сегменти мережi або те-риторiально вiддаленi пiдприемства.
Вщ правильно!, коректно! роботи маршру-тизаторiв та iншого мережевого обладнання залежить доступнiсть серверiв та !х сервюв. Вiд працездатностi серверiв (веб-серверiв, сер-верiв баз даних, серверiв електронного докуме-нтообiгу), в свою чергу, залежить робота важ-ливих додатюв i сервiсiв, якi забезпечують функцюнування оперативних систем АСК ВП УЗ та АСК ПП УЗ. Вихщ з ладу будь-якого з пере-лiчених компонентiв може привести до серйоз-них порушень у робой шформацшних систем.
Але слщ вiдмiтити, що вихiд з ладу обладнання або збш в робот програмного забезпечення не завжди е основними i найбшьш небез-печними причинами порушення функцюнування шформацшних систем.
Бшьшою небезпекою е збо!, викликаш зло-вмисними дiями всерединi або ззовнi мережа
Зловмисники, використовуючи вразливостi програмного забезпечення чи помилки в конфь гурацп, можуть виконати безлiч деструктивних дш, починаючи з простого виведення з ладу сер-верiв, далi змши конфiгурацii' мережевого обладнання, порушення роботи мереж, змши спряму-вання трафiка, заюнчуючи зараженням вiрусами та викраданням конфiденцiйних даних.
Не варто залишати поза увагою також помилки обслуговуючого та керуючого персоналу шдчас обслуговування чи змiни конф^ураци будь-яко! частини iнформацiйних систем.
Вс перелiченi варiанти вiдмов та порушень в робот iнформацiйних систем можуть викли-кати серйознi матерiальнi збитки: затримки ва-гонiв, припинення реалiзацii квиткiв, розголо-шення конфiденцiйноi шформацп, втрата до-вiр'я клiентiв тощо.
Оскiльки виключити повнiстю збо! апаратного чи програмного забезпечення неможливо, ршення проблеми полягае в постшному конт-ролi стану складових частин шформацшно! системи для отримання iнформацii щодо проблем на раншх стадiях.
Для досягнення цiеi мети, як правило, вико-ристовуеться рiзноманiтне програмне забезпечення, яке контролюе роботу серверiв, компо-нентiв мережi передачi даних, змiни конф^ура-цш, а також збирае статистичну шформащю щодо !х функцiонування.
Вибiр засобiв монiторингу залежить вiд рiз-них факторiв. Так можливостi монiторингу мережевого обладнання, в значнш мiрi, визнача-ються його виробником. Для серверiв вирша-льним е тип операцшно! системи та прикладне програмне забезпечення.
Зараз юнуе значна кiлькiсть програмних продукпв для здiйснення контролю функцюну-вання iнформацiйних систем та !х складових.
Класифшуемо компоненти iнформацiйних систем за категорiями залежно вiд функцюна-льного призначення та розглянемо програмш продукти, якi виконують !х контроль.
Можливо видшити наступнi категорii та програмне забезпечення для !х контролю [2]:
Категорй	Компоненти	ПЗ
1	Доступтсть та змши конфь гурацш мережевого обладнання, збереження резервних копш конфцурацш	Rancid, Nagios
2	Контроль безпеки, наявносп вразливостей та помилок ко-нфцурування систем i серв1с1в	Nessus, Lotus Domino
© 1вченко Ю. М., 1вченко В. Г., Гондар О. М., 2011
Кате-гори	Компонента	n3
3	Статистика стану i заванта-ження канал1в, обл1к помилок, детальний анал1з трафь ку	Cacti, Fluke NetWatch, Fluke Netflow Tracker
4	Контроль функцюнування критичних служб i додатшв	Nagios
5	1нвентаризац1я ПЗ сервер1в та користувач1в, контроль встановленого ПЗ	Microsoft System Center Configuration Manager 2007
Програмне забезпечення Rancid проводить мошторинг конф^ураци маршрутизаторiв, включаючи програмне i апаратне забезпечення (модул^ серiйнi номери i т. ш.), та використо-вуе Subversion для контролю ютори змш.
Nagios - це додаток, що використовуеться для виконання монiторинга систем i мереж. Вш стежить за певними додатками i службами та генеруе сповщання в залежностi вiд поведiнки служб, за якими ведеться спостереження.
Сумюне використання програмного забез-печення Rancid i Nagios дозволяе проводити постiйний контроль змш конф^урацш мереже -вого обладнання, мати актуальний набiр резер-вних копiй файлiв конфiгурацiй, отримувати оперативш повiдомлення про недоступнi вузли мережi передачi даних. Це дозволяе контролю-вати спроби несанкцiонованих змiн конф^ура-цiй маршрутизаторiв, оперативно виявляти i виправляти помилки адмiнiстраторiв мереж передачi даних при виконаннi змiн конфтура-цiй мережевого обладнання. У випадку, якщо змiни конфтураци приводять до вщмови в ро-ботi вузлiв мережi, програмне забезпечення Nagios, що здшснюе контроль за доступнiстю вузлiв, сповiстить про це вiдповiдальних сшв-робiтникiв.
Nessus - це програма для автоматичного пошуку вiдомих вразливостей в захисп шфор-мацiйних систем. Вона спроможна виявити ви-ди ураження, яю найбiльш часто трапляються, наприклад:
-	наявнiсть вразливих версiй служб або де-монiв;
-	помилки в конф^ураци (наприклад, вщсу-тшсть необхiдностi авторизацп на SMTP-серверО;
-	наявнiсть паролiв за замовчанням, пустих або слабких паролiв.
Програма мае ктент-серверну архiтектуру, що значно розширюе можливостi сканування.
IBM Lotus Domino Server - сервер додатюв системи Lotus Notes, базово надае ряд сервесiв (нереляцшна СУБД, сервер каталопв, пошто-
вий сервер, web-сервер) i може використовува-тися для побудови корпоративних систем елек-тронного документообту, колективно! роботи, iнших додаткiв. Вш мае в своему складi великий набiр модулiв. Основними з яких е пошто-вий сервер, http-сервер, сервер баз даних.
На Придшпровсью залiзницi за допомогою Nessus i Lotus Domino розроблена система пе-ревiрки параметрiв безпеки серверiв i мережевого обладнання. Система складаеться з трьох компонента:
1.	Nessus-сервер - програма для автоматичного пошуку вщомих дiрок в захисп шформа-цiйних систем;
2.	Плановик завдань, який безпосередньо виконуе перевiрку серверiв i мережевих служб, запускае клiент Nessus з заданими параметрами за розкладом;
3.	База даних «Безпека» (Lotus Domino) е сховищем сканера Nessus з вщстеженням появи та усунення критичних вразливостей на серверах, яю скануються. База налагоджена таким чином, що при виявлеш критичних вразливостей автоматично надсилае повiдомлення з опи-сом i рекомендацiями сшвроб^нику вiдповiда-льному за супроводження даного сервера.
Використання даного комплексу дозволяе проводити аналiз захищеностi систем та вузлiв мережi, прогнозувати появу порушень безпеки, контролювати процес усунення виявлених вра-зливостей.
Cacti - веб-додаток, який дозволяе будувати графши за допомогою RRDtool. Cacti збирае статистичш данi за певний iнтервал часу i вщо-бражае 1'х у графiчному видi. Переважно вико-ристовуються стандартнi шаблони для вщо-браження статистики щодо завантаженостi процесора, надання оперативно! пам'ятi, кшь-костi запущених процесiв, використання вхщ-ного/вихiдного трафша каналiв зв'язку.
Дане програмне забезпечення використову-еться для контролю завантаженосп та кiлькостi помилок каналiв зв'язку в мереж передачi даних (видшених аналогових, супутникових ка-налiв, волоконно-оптичних лiнiй зв'язку).
Диспетчерська система NetWatch - це зааб управлiння з веб-iнтерфейсом, який надае мож-ливiсть контролю стану мережевих пристро!в у форматi, що вщповщае вимогам усiх рiвнiв техшчно! компетенци.
Унiкальний iнтерфейс Netwatch представляе новий функцюнальний рiвень управлiння мережею i виконуе огляд мережевих ресуршв з використанням штернет-технологш. Високо-класна презентацшна складова продукту дозво-
ляе бшьш широкiй аудиторн спостерiгати i ощ-нювати стан мережi та параметри, з якими вона працюе. Замють надання технiчно-орieнтованих графiкiв i дiаграм Netwatch представляе шфор-мащю у зручному форматi, зображаючи мережу у виглядi зрозумшо! схеми, з нескладним доступом до додатково! шформацп. Система дозволяе легко штегрувати звiти, набори даних та компоненти шших управляючих систем.
Набiр перелiчених програмних продуктiв використовуеться для побудови системи контролю якостi каналiв зв'язку, !х завантаженостi, доступностi вузлiв мереж передачi даних. На базi дано! системи створено web-портал, з роз-дiлами, якi контролюють стан основних вузлiв мережi та каналiв зв'язку, компонентiв мереж щодо кожно! станцп. Для контролю рiвня по-милок та стану резервних видшених аналого-вих каналiв зв'язку створеш роздiли порталу для кожно! дирекцп залiзницi, якi виконують цей контроль спшьно з програмним забезпе-ченням Cacti.
NetFlow Tracker - це програмне рiшення для збору та аналiзу NetFlow-iнформацi!, яку надае обладнання Cisco. Програмне забезпечення встановлюеться на серверi i дозволяе акумулю-вати дат, а також надавати зв^и про мереже-вий трафiк в реальному масштабi часу (до 14 дiб), та забудь-який перiод часу з рiзним рiвнем деталiзацi! (вщ 1 хвилини).
Наприклад, кожну годину,
С3845-Dnepr-2 - Traffic - Sinelnikovo (optic)
и 300 k
ш 200 k
iL	J nJI/Я! LJ'l^
16: SO IS: 66 20: OS 22: 00 00: OS 02:00 04: 00 06:00 OS: □ Inbound Current: 22.82 k Average: 19.47 k Maximum: ■ Ou-t bound Current: 117,15 k Average: 70,07 k
a 10:00 12:00 14:00 165.01 k
Maximum: 386.46 k
кожну добу,
с3845-Dnepr-2 - Traffic - Sinelnikovo (optic)
700 k 600 k 500 k 400 k 300 k 200 k
IL
À LU*,
□Inbound Current: 2Б.Б7к Average: 16.56k Maximum: 220.27k ■ Outbound Current: 130,16 к Average; 61,30 к Maximum:
кожен тиждень
300 k 200 k 100 k
C3845-Dnepr-2 - Traffic - Sinelnikovo (optic)
lllnijjJ.iLiikklJliiil, jai il
Week 17	Week IS	Week 19	Week 20
□Inbound Current: 33.27k Average: 19.78k Maximum: 362.07k ■ Outbound Current: 175,73 k Average; 60,97 k Maximum:
NetFlow Tracker використовусться в корпо-ративш мереж Придншровсько! залiзницi для збору детатзовано! статистики щодо трафша маршрутизаторiв Cisco в найбшьш важливих вузлах мережi передачi даних (Дншропет-ровськ, Кривий Pir Головний, Запорiжжя, CiM-ферополь, Джанкой) в безперервному режимi. При необхщносп е можливiсть проведення тимчасового контролю шших вузлiв мережi, ïx бiльше 100, у разi зниження якосп передачi даних в мережа
Використання програмного рiшення NetFlow Tracker разом з ПЗ NetWatch дозволило шдняти рiвень контролю шформацн, яка пе-редаеться в мережi передачi даних, на яюсно новий рiвень i значно скоротити час на визна-чення причин порушення нормальноï ïï роботи. Це дае можливють пiдвищити надiйнiсть функ-цiонування мережi передачi даних разом з резе-рвування обладнання у вузлах [1].
Незважаючи на порiвняно нетривалий тер-мiн експлуатацiï даного програмного забезпечення, його ефективнють вже шдтверджена у випадках виявлення причин збо1'в в роботi мереж! та ix усунення. Бшьш того, функщональш можливосп NetFlow Tracker дозволяють прово-дити налагодження оперативного контролю та журналу повiдомлень, якщо кшькють небажа-но1' або неслужбово1' iнформацiï перевищить рiвень, визначений адмшютративною полгги-кою. Це дае можливють здшснювати контроль активностi та знаходити ïï джерело навт в тих випадках, коли тсля ïï виникнення пройшов досить значний час.
Microsoft System Center Configuration Manager 2007- програмний пакет для керування 1Т-ресурсами пiдприемства (серверами та робо-чими станщями тд управлiнням операцiйниx систем Windows).
Основш можливосп: iнвентаризацiя програмного та апаратного забезпечення; розпо-всюдження програмного забезпечення; управ-лшня оновленнями операцiйниx систем та прикладного програмного забезпечення; ощнка вразливост клiентiв; мошторинг використання програмного забезпечення; вщдалене управлш-ня; розгортання образiв операцiйниx систем; управлiння мобшьними пристроями; управлiн-ня гетерогенними системами.
Важливiсть даного програмного пакета важ-ко перебiльшити, тому що у поточний час кшькють робочих станцiй, що пiдключенi до мережу обчислюеться тисячами, i вона неухильно зростае.
Використання розглянутих програм дозво-ляе не тшьки оперативно усувати збо! у функ-цiонуваннi iнформацiйних систем, а також i запобiгати !х виникненню.
Б1БЛ1ОГРАФ1ЧНИЙ СПИСОК
1. 1вченко, Ю. М. Iнтеграцiя мережевого обладнання АСК ВП УЗ та АСК ПП УЗ, щдключення його до СМПД [Текст] / Ю. М. 1вченко, В. Г. 1в-ченко, О. М. Гондар // Вкник Днiпропетр. нац. ун-ту залiзн. трансп. iM. акад. В. Лазаряна. -Вип. 29. - Д. : Вид-во Дншропетр. нац. ун-ту
залiзн. трансп. iM. акад. В. Лазаряна, 2009. -С. 143-146.
2. Ивченко, Ю. Н. Система мониторинга информационной сети Приднепровской ж.д. [Текст] / Ю. Н. Ивченко, В. Г. Ивченко, О. Г. Гондар // Тези доп. Мiжн. наук-практ. конф. «Сучасш ш-формацiйнi технологи на транспорт^ в промис-ловосп та освт» (13-14.05.2010 р., Дншропетровськ). - Д., 2010. - С. 12-13.
Надшшла до редколегп 02.09.2011.
Прийнята до друку 05.09.2011.
Ю. Н. ИВЧЕНКО, В. Г. ИВЧЕНКО, О. Н. ГОНДАР
СИСТЕМА МОНИТОРИНГА КОРПОРАТИВНОЙ ИНФОРМАЦИОННОЙ СЕТИ
В статье оценена опасность сбоев сервисов и служб корпоративной информационно-телекоммуникационной системы Приднепровской ж. д., важности осуществления постоянного контроля функционирования основных компонентов системы. Предложены классификация компонентов системы по категориям, в зависимости от функционального назначения, и программное обеспечение для контроля компонентов каждой категории.
Ключевые слова: мониторинг корпоративной информационной сети.
YURIY IVCHENKO, VALENTINA IVCHENKO, OLEG GONDAR
SYSTEM OF MONITORING OF THE CORPORATE INFORMATIVE SYSTEM
The danger of failures of services and services of the corporate informatively-telecommunication system of Pridneprovskoy railway is appraised in the article., to importance of realization of permanent control of functioning of basic components of the system. Offered classification of components of the system on categories, depending on the functional setting, and software for control of components of every category. Keywords: monitoring of corporate informatively network.
      
      
    
  



=====

        


﻿УДК 656.212.5 : 681.3
В. М. ПАХОМОВА, Т. I. СКАБАЛЛАНОВИЧ, Д. А. ЛЯХОВ (ДПТ)
МОЖЛИВ1СТЬ ВИКОРИСТАННЯ ТЕХНОЛОГИ 100VG-anyLAN В 1НФОРМАЦ1ЙНИХ СИСТЕМАХ ЗАЛ1ЗНИЧНОГО ТРАНСПОРТУ
Представлений один iз можливих варiантiв об'еднання мереж рiзних технологiй з використанням конце-нтраторiв та комутаторiв 100Ув-апуЬЛМ на рiвнi лiнiйних пiдприeмств залiзничного транспорту Укра!ни. Розроблена вiдповiдна iмiтацiйна модель мереж1 з комутатором, в основу яко! покладенi дiаграма станiв порту комутатора за алгоритмом прозорого моста та дiаграми станiв концентратора та станци 100Ув-апуЬЛМ для визначення характеристик мереж в прюритетному та безпрюритетному режимах обробки да-них. Встановлено, що на час реакци мереж1 100Ув-апуЬЛМ найбiльший вплив виявляе пори- очiкування запитiв в черзi.
Ключовi слова: висхщний та спаднi порти, високий та низький прiоритет, алгоритм прозорого моста, фь льтрацiя та просування кадру
Вступ i постановка проблеми
Вщповщно плашв розвитку зал1зничного транспорту Укра!ни сучасна технолопя збору й обробки шформаци; експлуатащя автоматизо-ваних систем; впровадження новггшх засоб1в обчислювально! техшки, система передач1 да-них (СПД), система управлшня базами даних (СУБД); створення единих баз даних; викори-стання наскр1зних шформацшних технологш припускають створення вертикал1 керування вс1ма шформацшними ресурсами галуз1 й змши юнуючо! оргашзацшно! структури. З шшого боку, юнують шформацшш системи, в основ1 яких використання абсолютно р1зних мереже -вих технологш [1-2]. Виникаюча проблема !х взаемоди на пром1жному етат шформатизацп може бути виршена застосуванням технологи
100VG-anyLAN, кожен концентратор яко! може бути налаштований на тдтримку або кадрiв формату Ethernet, або кадрiв формату Token Ring. Для з'еднання мереж 100VG-аnyLAN, що використовують рiзнi формати кадрiв, потрiб-ний мiст або комутатор. Загальна структура тако! мереж зображена на рис. 1.
Аналiз публжацш
Мережа 100VG-anyLAN завжди включае кореневий концентратор, званий концентратором рiвня 1 (К1), як це показано на рис. 2. Ко-реневий концентратор мае зв'язки з кожним вузлом мереж^ утворюючи тополопю типу зiрка
Комутатор ~Г Г
1	J«
Шдмережа з	;
форматом Ethernet ;
у Ч
Шдмережа з	I
форматом TokenRing'
Рис. 1. Загальна структура мереж1 100VG-anyLAN
© В. М. Пахомова, Т. I. Скабалланович, Д. А. Ляхов, 2012
197
Рис. 2. Опитування порпв концентраторiв 100VG-anyLAN
Примтка: * - високий прюритет даних
Цей концентратор являе собою штелектуа-льний центральний контролер, який керуе доступом до мереж^ постшно виконуючи цикл «кругового» сканування сво!х порт1в i перев> ряючи наявнiсть запитiв на передачу кадрiв вiд приеднаних до них вузлiв. Концентратор при-ймае кадр вщ вузла, що видав запит, i передае його тiльки через той порт, до якого приедна-ний вузол з адресою, що збйаеться з адресою призначення, зазначених у кадрi [3].
Кожен концентратор мае один «висхщний» (up-link) порт i N «спадних» портiв (down-link). Так, наприклад, висхiдний порт концентратора 2-го рiвня (К2) зарезервований для приеднання до концентратора бiльш високого рiвня (К1). Спаднi 7-портiв служать для приеднання вузлiв, в тому чи^ i концентраторiв 3-го рiвня (К3).
Кожен порт концентратора може бути на-лаштований для роботи в нормальному режимi або в режимi моштора. Порт, сконфiгурований для роботи в нормальному режимi (за замовчу-ванням), передае тi кадри, якi призначеш вузлу, пiдключеного до даного порту. Порт, сконфйу-рований для роботи в режимi монiтора, передае вс кадри, оброблюванi концентратором. Дiаг-рами сташв роботи концентратора та станцй мережi в нормальному режимi розроблеш та представленi в [4].
Формулювання цшей CTaTTi
Вивчити алгоритм прозорого моста та за-пропонувати вщповщну формальну модель.
Розробити iмiтацiйну модель УО з комутато-ром, в основi яко! дiаграми станiв порту кому-татора за алгоритмом прозорого моста, а також дiаграми сташв концентратора та станцй мереж ЮОУО-апуЬЛК. На iмiтацiйнiй моделi УО провести дослщження впливу факторiв на час реакцй мережi.
Основна частина
1. Алгоритм прозорого моста
Мют або комутатор дie за алгоритмом прозорого моста, кожен порт якого працюе як кшцевий вузол свого сегменту за одним винят-ком - порт моста не мае власно! МАС-адреси. Порт моста працюе в так званому нерозбiрливому режимi захоплення кадрiв, за допомогою якого мiст стежить за вшм трафiком, який передаеться в приеднаних до нього сегментах, i використовуе вс кадри, якi проходять через нього, для вивчення складу мереж (етап «Навчання»). На цьому етапi мют передае будь-який захоплений та буферизований кадр на вс сво! порти за винятком того, вщ якого цей кадр отримано. Одночасно з передачею кадру на вс порти мют вивчае адресу дже-рела кадру i робить новий запис про його приналежнють до свое! адресно! таблиц [1]. Вщповщна дiаграма станiв представлена на рис. 3.
Пюля того як мют пройшов етап «Навчання», вш може працювати бiльш рацюнально.
Пюля появи кадру мют переходе в стан «Аналiз адресно! таблищ», в якому визначаеться наяв-нiсть в таблиц адреси призначення кадру. Як-що адреса призначення кадру невщома, то мiст
переходить в стан «Передача кадра» i кадр пе-редаеться на всi порти, ^м порта-джерела кадру. Мiст переходить в стан «Формування за-пису».
Рис. 3. Ддаграма сташв порта комутатора за алгоритмом прозорого моста
Якщо адреса призначення кадру вщома, то мiст переходить у стан «Анатз адрес», у якому перевiряе, чи знаходяться станци з адресою джерела та адресою призначення в одному ло-гiчному сегментi. Якщо станци належать одному лопчному сегменту, то кадр буде знищений з буфера (стан «Фiльтрацiя»). Якщо вони знаходяться в рiзних сегментах, то мют передае кадр на шший порт, заздалепдь отримавши доступ до iншого сегменту (стан «Просування кадру»). У обох випадках мiст заносить вщпо-вщний запис до адресно! таблицi (стан «Формування запису»).
2. 1м1тац1йна модель УС
Розроблена iмiтацiйна модель УО з комута-тором, в основу яко! покладена дiаграма сташв порта комутатора за алгоритмом прозорого моста, а також дiаграми сташв концентратора та станци мереж. На головнш формi моделi У О розмщеш кнопки: «Вхiднi параметри», «Структура мережи», «Вiдгук», «Дiаграми». Так, на-приклад, по натисканню кнопки «Структура мереж» з'являеться вщповщне вiкно для зав-дання кiлькостi рiвнiв iерархi! та кiлькостi станцiй на кожному рiвнi (рис. 4).
На вкладщ «Дiаграма» вiдображуеться мак-симальний час очшування заявки в черзi (сишм
кольором) та максимальна довжина черги (жов-тим кольором).
На рис. 5 показано приклад таких дiаграм для безпрюритетного режиму моделювання мережi ЮОУО-аиуЬЛК. Якщо ж обрано прю-ритетний режим, то вихiднi даш на дiаграмах зображуються двома кольорами: червоним в> дображаються данi по портам, на яю надсила-ються заявки з високим прiоритетом, а сишм i жовтим вiдображаються даш по портам, до яких шдключеш станцi!, для яких не встанов-лений високий прiоритет (рис. 6).
Порiвняемо дiаграми отриманi в безпрюри-тетному та прiоритетному режимах роботи iмi-тацiйно! моделi УО (рис. 5-6). Так, наприклад, на четвертому порту концентратора 3-го рiвня максимальний час очiкування заявки в черзi в безпрiоритетному режимi становить 9354 мкс, а в прюритетному режиш - 9840 мкс. Це поясню-еться тим, що для станци, яка шд'еднана до цього порту, встановлено низький режим заявок, тому !й приходиться очшувати поки не ви-конаються усi запити з високим прюритетом або не буде перевищено порiг очiкування заявки в черзь
Рис. 4. Завдання структури мереж1
Рис. 5. Результати роботи ÎMn^mTOï модел1 VG (безпрюритетний режим)
Риа б. Peзyльтaти poбoти 1мггацшно1 мoдeлi VG (пpiopитeтний peжим)
3. Дослвдження впливу факторш на час реакци мережi
Для пepeвipки cтeпeнi впливу кожного з чо-тиpьoх фaктopiв (iнтeнcивнicть нaдхoджeння зaпитiв на станщю X, довжина кaдpy D, кшь-кicть cтaнцiй мepeжi Nst, nopir oчiкyвaння низь-кoпpiopитeтних зaпитiв в чepзi P) на 4ac pea^iï мepeжi R пpoвeдeнe нacтyпнe дocлiджeння. БУ-
ли взятi чoтиpи до^дт точки (Ri, R2, R3, R4), в кoжнiй з яких один iз фaктopiв вcтaнoвлювaвcя на вepхньoмy piвнi, а тpи iншi - на нижньому. В кoжнiй з точок виконано запуот мoдeлi VG, тетя цього poзpaхoвaнo як кожний з фaктopiв (А, %) впливае на чac peaкцiï мepeжi. Peзyльтaтi дocлiджeння пpивeдeнi у табл. 1.
Таблиця 1
Дослщження впливу фaктoрiв на час реакци мережi
Ro	Ri	R2	R3	R4
X, запит/c	-	+	-	-	-
D, oктeт	-	-	+	-	-
-	-	-	+	-
P, мте	-	-	-	-	+
R, мкc	2582	26G9	2б18	2б81	279б
А, %		1,G5	1,39	3,83	8,29
У хoдi пpoвeдeння eкcпepимeнтy виявлeнo, що на чac peaкцiï мepeжi 1GGVG-anyLAN най-бiльшe впливае вeличинa nopory oчiкyвaння низькoпpiopитeтних зaпитiв в чepзi, а caмe пpи змiнi nopory очшування чac peaкцiï мepeжi зм> нюетьcя на 8,29 % npora 3,83 %, 1,39 % та 1,G5 % як в шших випадках. Нeзнaчний вплив на чac peaкцiï мepeжi зpoбили нacтyпнi rnpa-мeтpи: iнтeнcивнicть нaдхoджeння зaпитiв на станщю мepeжi та довжина ка^у.
Висновки
У зв'язку iз cтpaтeгiею iнфopмaтизaцiï зал> зничного тpaнcпopтy У^аши на пpoмiжнoмy eтaпi пpeдcтaвлeний один iз можливих вapiaн-тiв об'еднання мepeж piзних тeхнoлoгiй (Ethernet та Token Ring) з викopиcтaнням кон-цeнтpaтopiв та кoмyтaтopiв 1GGVG-anyLAN на piвнi лiнiйних пiдпpиемcтв. Poзpoблeнa iмiтa-цiйнa мoдeль VG, в оетову яко1' пoклaдeнa дiaг-
рама сташв порта комутатора за алгоритмом прозорого моста, а також дiаграми сташв концентратора та станци мережi ЮОУО-апуЬЛК. Модель УО праюе в прiоритетному та безпрю-ритетному режимах обробки даних. Встановле-ний вплив факторiв на час реакци мереж ЮОУО-апуЬЛК. Виявлено, що на час реакци мереж найбiльше впливае порiг очiкування запитiв в черз^ незначно впливають штенсив-нiсть надходження запитiв на станцiю та дов-жина кадру.
Б1БЛ1ОГРАФ1ЧНИЙ СПИСОК
1. Пахомова, В. Н. Разработка структуры локальной вычислительной сети АСУ парка прибытия [Текст] / В. Н. Пахомова, К. М. Рэу // 1нформ.-
керуючi системи на залiзн. трансп. - 2002. -№ 2. - С. 41-46.
2.	Пахомова, В. Н. О возможности использования технологии TOKEN RING в ЛВС на сортировочной горке [Текст] / В. Н. Пахомова, А. А. Пру-дко // Iнформ.-керуючi системи на залiзн. трансп. - 2004. - № 6. - С. 38-43.
3.	IEEE 802.12 - Demand Priority Access LAN, 100VG- anyLAN [Text].
4.	Пахомова, В. Н. Имитационная модель локальной вычислительной сети 100VG-AnyLAN [Текст] / В. Н. Пахомова, В. В. Черный // 1н-форм.-керуючi системи на залiзн. трансп. -2005. - № 6. - С. 67-73.
Надшшла до редколегп 09.11.2011.
Прийнята до друку 11.11.2011.
В. Н. ПАХОМОВА, Т. И. СКАБАЛЛАНОВИЧ, Д. А. ЛЯХОВ
ВОЗМОЖНОСТЬ ИСПОЛЬЗОВАНИЯ ТЕХНОЛОГИИ 100VG-ANYLAN В ИНФОРМАЦИОННЫХ СИСТЕМАХ ЖЕЛЕЗНОДОРОЖНОГО ТРАНСПОРТА
Представлен один из возможных вариантов объединения сетей разных технологий с использованием концентраторов и коммутаторов 100VG-аnyLAN на уровне линейных предприятий железнодорожного транспорта Украины. Разработана соответствующая имитационная модель сети с коммутатором, в основу которой положены диаграмма состояний порта коммутатора по алгоритму прозрачного моста и диаграммы состояний концентратора и станции 100VG-аnyLAN для определения характеристик сети в приоритетном и безприоритетном режимах обработки данных. Установлено, что на время реакции сети 100VG-anyLAN наибольшее влияние оказывает порог ожидания запросов в очереди.
Ключевые слова: восходящий и нисходящий порты, высокий и низкий приоритеты, алгоритм прозрачного моста, фильтрация и продвижение кадра
V. N. PAKHOMOVA, T. I. SKABALLANOVICH, D. A. LYAKHOV
POSSIBILITY OF THE USE OF TECHNOLOGY 100VG-ANYLAN IN THE INFORMATIVE SYSTEMS OF RAILWAY TRANSPORT
One of possible variants of association of networks of different technologies is presented with the use of concentrators and switchboards 100VG-anyLAN at the level of linear enterprises of railway transport of Ukraine. The corresponding simulation model of network is worked out with a switchboard, in basis of which fixed bubble of port of switchboard diagram on the algorithm of transparent bridge and bubble of concentrator and station diagram 100VG-anyLAN for determination of descriptions of network in priority and non-priority modes of processing of data. It is set that in a time of reaction of network 100VG-anyLAN most influence renders the threshold of expectation of queries in a turn.
Keywords: ascending and descending ports, high and subzero priorities, algorithm of transparent bridge, filtration and advancement of shot
      
      
    
  

=====

        


﻿Наука та прогрес транспорту. Вкник Дншропетровського нацюнального утверситету залiзничного транспорту, 2013, вип. 3 (45)
УДК 004.7-047.58
В. М. ПАХОМОВА1*
1 Каф. «Електронш обчислювальнi машини», Дншропетровський нацюнальний ушверситет з^зничного транспорту ÎMeHÎ академiка В. Лазаряна, вул. Лазаряна, 2, 49010, Дшпропетровськ, Украша, тел. +38 (056) 373 15 89, ел. пошта viknik.p1988@mail.ru
МЕТОДИКА ПОБУДОВИ РАЦIОНАЛЬНОÏ СТРУКТУРИ МЕРЕЖ1 П1ДПРИСМСТВА ЗА ДОПОМОГОЮ 1М1ТАЦ1ЙНИХ МОДЕЛЕЙ
Мета. Пошук нових варiантiв для переходу вщ технологiï Ethernet. Методика. Фiзична структуризащя мереж1 Fast Ethernet на основi хабiв i логiчне структурування мереж1 Fast Ethernet за допомогою комутато-рiв. Органiзацiя VLAN на основi групування мережi портiв i вщповщно до стандарту IEEE 802.1Q. Результата. Запропоновано можливi варiанти удосконалення мереж1 Ethernet: згiдно з технологиями Fast Ethernet i VLAN на iмiтацiйних моделях у пакетах NetCraker i Cisco Packet Tracer ввдповвдно. Наукова новизна. Запропоновано методику проектування локально! мереж1 за допомогою технологiï VLAN. Практична значимкть. Кожний з варiантiв удосконалення мереж1 «Днiпрозалiзничпроект» мае сво! переваги. Перехiд вщ технологiï Ethernet до технологи Fast Ethernet простий i економiчний, потребуе одного комутатора, а при оргашзаци VLAN - не менше двох. Однак технолопя VLAN мае так переваги: зменшен-ня навантаження на мережу, iзолювання широкомовного трафiка, змiна лопчно! структури мереж1 без змши Ф!зично! структури, збшьшення безпеки мереж1. Переход вщ технологи Ethernet до технологи VLAN дозво-ляе вщдшити Ф!зичну топологш вщ лопчно!', а формат ка^в за стандартом IEEE 802.1Q дае можливють спростити сам процес впровадження вiртуальних мереж у пiдприемства.
Ключовi слова: Ф!зичш та логiчна структуризащя мереж1 Fast Ethernet; вiртуальна локальна мережа; групування порпв; кадр стандарту 1ЕЕЕ 802.1Q
Вступ
У деяких випадках при проектуванш локальных мереж i3 збшьшенням кшькосп вузл1в та iнтенсивностi трафiка перехщ з Ethernet на Fast Ethernet здшснюеться замiною вщповщно-го комушкацшного обладнання та мережних карт, що значно простiше. Однак слiд урахува-ти й альтернативний варiант переходу, зокрема оргашзацда вiртуальних локальних мереж (Virtual Local Area network, VLAN). Порiвняeмо можливi варiанти переходу на прикладi проектування локально! мереж «Днiпрозалiзничпро-ект» для будiвлi Управлшня Приднiпровськоi залiзницi.
Мета
Вiдповiдно до варiанта переходу вiд технологи Ethernet до технологii Fast Ethernet вирь шити задачi фiзичноi та лопчно! структуризацii мережi Fast Ethernet. Зпдно з основними вимо-гами оцшити роботу мереж Fast Ethernet та Switched Fast Ethernet на вщповщних iмiтацiй-них моделях в пакет NetCraker. У вiдповiдностi до переходу вщ технологи Ethernet до техноло-
ги VLAN запропонувати Bapianrn органiзацiï вiртуальних локальних мереж: за групування порив та з використанням стандарту 1ЕЕЕ 802.1Q. Розглянути технолопю перетворення стандартного Ethernet-кадру в кадр за стандартом 1ЕЕЕ 802.1Q та навпаки на розробленш îmî-тацiйнiй мoделi VLAN в Cisco Packet Tracer.
Методика
Потреба у високошвидюснш та недорогш технoлoгiï для шдключення до мереж потуж-них робочих станцш привела до пошуку нового Ethernet. Саме такою виявилась технолопя Fast Ethernet [4], котра зберегла метод доступу CSMA/CD, часoвi параметри в бпових штерва-лах (сам бповий iнтеpвал зменшився в 10 раз) i формат кадру [1-3, 13-15, 17]. Однак викорис-тання загального подшюваного середовища можливо тшьки для меpежi невеликого poзмipу [9-10], тому застосування технoлoгiï Switched Fast Ethernet шдвищуе пpoдуктивнiсть, надш-нiсть, гнучкiсть побудови меpежi та керування нею [5-8, 16]. VLAN мае ri ж властивoстi, що й фiзична локальна мережа, але дозволяе кшце-вим станцiям групуватися разом, навiть якщо
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального утверситету залiзничного транспорту, 2013, вип. 3 (45)
МОДЕЛЮВАННЯ ЗАДАЧ ТРАНСПОРТУ ТА ЕКОНОМ1КИ
ф1зично1 структуризаци мереж на основ1 двох концентратор1в II класу з портами TX/FX, як ф1зичне середовище передач1 даних - UTP ка-тегорп 5. Вщповщну структуру мереж Fast Ethernet вщображено на рис. 1, вказано довжи-ни кожного кабелю та номер юмнати, до яко! вщноситься та чи шша робоча станщя. Оцшка конфпураци мереж1 проводиться за моделлю, що базуеться на обчисленш сумарного подвш-ного часу проходження сигналу мережею (PDV), який склав 340,72 bt; отже конфпуращя мереж Fast Ethernet коректна.
Рис. 1. Фiзична структуризацiя мереж1 Fast Ethernet
вони не знаходяться в однш ф1зичнш мереж [11-12]. Створення в1ртуальних мереж за стандартом 1ЕЕЕ 802.1Q передбачае введення мггки до звичайного Ethernet-кадру: двобайтове поле TPID (Tag Protocol Identifier) i двобайтове поле TCI (Tag Control Information), яке складаеться з полiв Priority (3 бга), CFI (Canonical Format Indicator, 1 бгг) i VID (VLAN ID, 12 бгг).
Результат
BapiaHT 1: перехiд з Ethernet на Fast Ethernet. На першому етапi вирiшена задача
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального утверситету залiзничного транспорту, 2013, вип. 3 (45)
На 1м1тацшнш модел1 мереж1 Fast Ethernet (пакет NetCraker) знайдений пор1г И працезда-тносп: 45 робочих станцш. Завантаження одного з концентратор1в (FastHub316T) у цш мереж склало 76,7 %, тому на другому етат виршена задача лопчно! структуризацп мереж Fast Ethernet для локатзацп мережного трафшу за-мшою двох концентратор1в на один комутатор. Вщповщну структуру мереж Fast Ethernet в> дображено на рис. 2, навантаження на комута-тор складае лише 5,8 %.
BapiaHT 2: оргашзащя VLAN. У зв'язку з структурою об'екта в розгляд введет п'ять в1р-туальних мереж: VLAN1 - мережа арх1тектур-
но-буд1вельного в1дщлу, до яко! входить голов-ний 1нженер та вщдш дослщжень (один сервер, 15 комп'ютер1в); VLAN2 - мережа бухгалтерп (один сервер, 3 комп'ютери); VLAN3 - вщдш управлшня затзнищ та електрифшацп (один сервер, 8 комп'ютер1в); VLAN4 - мережа за-гального призначення (5 комп'ютер1в); VLAN5 - вщдш кадр1в (3 комп'ютери). Основною перевагою технологИ в1ртуальних локальних мереж е створення повшстю ¡зольованих сегменпв мереж1 шляхом лопчного конфпуру-вання комутатор1в, не вдаючись до змши ф1зи-чно!структури.
Рис. 2. Лопчна структуризащя мереж1 Fast Ethernet
HayKa Ta nporpec TpaHcnopTy. BÎCHHK ^HinponeTpoBcbKoro Ha^oHanbHoro yHÎBepcHTeTy 3ani3HHHHoro TpaHcnopTy, 2013, BHn. 3 (45)
Po3po6Ka iMiTa^KHHx MogeneM VLAN «flmn-po3am3HHHnpoeKT» Benacb y Cisco Packet Tracer, aKHH go3Bonae HaM6inbm mnpoKo i geTanbHo npegcTaBHTH CTpyKTypy noKanbHHx Mepe^, y to-My HHcni h BipTya^bHHx, 3 Mo^nHBiciro ToHKoro HanamTyBaHHa MogeneM peanbHoro Mepe^Horo o6nagHaHHa Cisco.
Ha TpeTboMy eTani, 3rigHo 3 MexaHi3MoM rpy-nyBaHHa nopTiB, Ha o6'eKTi BcraHoBneHo gBa ko-MyTaropH Cisco2950-24, go ogHoro 3 akhx nig-KnroneHo Bci n'aTb BipTyanbHHx noKanbHHx Me-pe^, go gpyroro - Tpn (VLAN1, VLAN3, VLAN5). QcKinbKH MexaHi3M rpynyBaHHa nopTiB
nepeg6anae 3'egHaHHa KoMyTaTopiB 3a npннцн-noM «ogHa nigMepe^a - ogHe 3'egHaHHa», to Mœ KoMyTaTopaMH BcTaHoBneHo Tpn 3B'a3KH gna ko-^hoï VLAN1-VLAN3 (puc. 3).
Ha neTBepToMy eTani po3raaHyTa opram3a^a VLAN «^,Hinpo3ani3HHHnpoeKT» 3a craHgapTOM IEEE 802.1Q. Ha BigMiHy Big nonepegHboro Me-xaHi3My, BHKopHcraHHa цboгo cTaHgapTy cKopo-nye nac HanamTyBaHHa Mepe^i, a TaKo^ noner-mye ïï agMimcrpyBaHHa, ane noTpe6ye HaaBHocTi o6nagHaHHa nigTpHMyronoro ^opMar Kagpy 3a gaHHM cTaHgapToM/
-VLAN 1
-VLAN 2
- VLAN 3
-VLAN 4 ^p - VLAN 5
Puc. 3. Qpгaнiзaцia VLAN 3a MexaHi3MoM rpynyBaHHa nopTiB
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального утверситету залiзничного транспорту, 2013, вип. 3 (45)
Робоча станщя генеруе стандартний Ethernet-кадр (рис. 4 а), при надходженш до комутатору кадр перетворюеться в кадр формату 1ЕЕЕ 802.1Q (рис. 4 b) i посилаеться на iншi комутатори. На iнших комутаторах цей кадр розбираеться, знову перетворюеться в оригша-льний Ethernet-кадр та посилаеться тим станщ-ям, яю належать до тiеï ж VLAN, що й вщправ-ник. Даний мехашзм дозволяе зменшити кшь-юсть лiнiй мiж комутаторами з трьох до одше1", тому що спостерпаеться вiдповiднiсть МАС-адреси станцiï-приймальника з VLAN, а не номера порту з VLAN.
Наукова новизна та практична значимкть
Запропонована методика проектування ло-
кальних мереж за технолопею VLAN, яка мае вагомi переваги. Перехвд вiд технологiï Ethernet до технологи VLAN дозволяе вщдшити фiзич-ну топологiю вiд лопчно1", а формат кадрiв за стандартом 1ЕЕЕ 802.1Q дае можливiсть спро-стити сам процес впровадження вiртуальних мереж в органiзацiï. Мережа «Дншрозатзнич-проект» будiвлi Управлiння Приднiпровськоï затзнищ, що побудована за технологiею Ethernet, може бути удосконалена як за техно-лопею Fast Ethernet, так i за технолопею VLAN. При цьому активне обладнання мереж мае бути завантажене не бшьш шж на 50 % для подальшого розвитку мережц основш вимоги до трафiку: розмiр транзакцiï сягае вiд 800 до 1400 байт, час мiж транзакщями вiд 0,05 до 1 с.
Ethernet II G
14
13 Bytea
а
PREAMBLE: 101010. ..1011		DEST MAC: FFFF.FFFF.FFFF	SRC MAC: 000L.43B7.53E5
TYPE: 0x800	DATA (VARIABLE LENGTH)			FCS: 0x0
Ethernet S02.1q О	4
14
13 Bytea
b
PREAMBLE:		S	DEST ADDR:	SRC ADDR:
1010 1010		F □	FFFF.FFFF.FFFF	0001	■ 43B7.53E5
TPID :	TCI:	TYPE:		DATA (VARIABLE		FCS:
0x310	Oxa	0x1		LENGTH]		0x0
Рис. 4. Формат кадру: а - стандартного Ethernet; b - стандарту 1ЕЕЕ 802.1Q
Висновки
1.	При переход1 з технологи Ethernet на тех-нологда Fast Ethernet в мереж «Дншрозатзни-чпроект» недостатньо виршення задач1 И ф1зи-чно! структуризаци (конфиуращя мереж1 ви-значена коректною, знайдений пори мереж1), необхщно також виконати ршення задач1 И ло-пчно! структуризаци (замша двох концентра-тор1в на один комутатор). Моделювання на вщ-повщних 1м1тацшних моделях Fast Ethernet та Switched Fast Ethernet, як розроблеш в пакет NetCraker, вщповщае основним вимогам.
2.	При оргашзаци VLAN «Дшпрозатзничп-роект» використання стандарту 1ЕЕЕ 802.1Q,
на вщмшу вiд мехашзму групування nopTiB: скорочуе час налаштування мереж1, полегшуе ïï адмiнiстpyвання, дозволяе зменшити кшь-юсть лiнiй мiж комутаторами з трьох до одше].', але вимагае наявшсть обладнання шдтримую-чого формат кадру за даним стандартом. Кpiм того, вipтyальнi меpежi можуть перехрещува-тися, що дозволяе створювати пoдiлюванi ме-pежнi ресурси. Оргашзащя VLAN за piзними механiзмами представлена на вщповщних iмi-тацiйних моделях в Cisco Packet Tracer.
3. Кожен з ваpiантiв удосконалення мереж «Дншpoзалiзничпpoекг» мае сво'' переваги. Так перехщ з технoлoгiï Ethernet на технологда Fast Ethernet простий та найбшьш економний, по-
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального утверситету залiзничнoгo транспорту, 2013, вип. 3 (45)
требуе одного комутатора для забезпечення ос-новних вимог (при оргашзаци VLAN неменше двох кoмутатopiв). Але технолопя VLAN дае такi переваги: групування вузлiв в oкpемi вip-туальш меpежi з мoжливiстю створення правил для цих груп, зниження навантаження на мережу, iзoлювання широкомовного тpафiку, змша лoгiчнoï структури мереж1, не вдаючись до зм> ни фiзичнoï структури, а також тдвищення безпеки мережа
СПИСОК ВИКОРИСТАНИХ ДЖЕРЕЛ
1.	Андерсон, К. Локальные сети. Полное руководство / К. Андерсон, М. Минаси. - СПб. : КОРОНА принт, 1999. - 626 с.
2.	Берри, Н. Компьютерные сети / Н. Берри. - М. : БИНОМ, 1996. - 400 с.
3.	Бутаев, М. М. Моделирование сетей ЭВМ / М. М. Бутаев, Н. Н. Коннов. - Пенза : Изд-во Пенз. гос. ун-та, 2007. - 56 с.
4.	Куил, Л. Fast Ethernet Компьютерные сети / Л. Куил, Р. Рассел. - К. : BHV, 1998. - 448 с.
5.	Кулаков, Ю. А. Компьютерные сети / Ю. А. Кулаков, С. В. Омелянский. - К. : Юниор, 1999. - 544 с.
6.	Марк, А. Высокопроизводительные сети. Энциклопедия пользователя / А. Марк. - К. : ДиаСофт, 1998. - 432 с.
7.	Новиков, Ю. В. Локальные сети: архитектура, алгоритмы, проектирование / Ю. В. Новиков, С. В. Кондратенко. - М. : ЭКОМ, 2000. - 312 с.
8.	Олифер, В. Г. Компьютерные сети. Принципы, технологии, протоколы / В. Г. Олифер, Н. А. Олифер. - СПб. : Питер, 2001. - 672 с.
9.	Пахомова, В. Н. Анализ локальных вычислительных сетей сортировочных станций на основе имитационной модели TOKEN RING /
В. Н. ПАХОМОВА1*
В. Н. Пахомова, А. А. Прудко // Зб. наук. пр. Дшпропетр. держ. техн. ун-ту зал1зн. трансп. «Транспорт». - Д., 2002. - Вип. 12. - С. 131-136.
10.	Пахомова, В. М. Можливють використання технологи 100VG-AnyLAN в шформацшних системах зал1зничного транспорту / В. М. Пахомова, Т. I. Скабалланович, Д. А. Ляхов // В1сник Дшпропетр. нац. ун-ту за-л1зн. трансп. 1м. акад. В. Лазаряна. - Д., 2012. -Вип. 41. - С. 199-204.
11.	Пахомова, В. М. Демонстращя оргашзаци в1р-туальних локальних мереж на програмнш мо-дел1 / В. М. Пахомова, В. В. Заханевич // Зб. наук. пр. Донецького ш-ту зал1зн. трансп. - До-нецьк, 2012. - Вип. 31. - С. 85-94.
12.	Пахомов, С. Возможности современных коммутаторов по организации виртуальных сетей [Электронный ресурс] / С. Пахомов // М. : КомпьютерПресс. - 2005. - № 4. - Режим доступа: http://www.compress.ru/article.aspx?id=10522&iid =430. - Загл. с экрана.
13.	Семенов, А. Б. Проектирование и расчет структурированных кабельных систем и их компонентов / А. Б. Семенов. - М. : ДМК Пресс, 2003. -416 с.
14.	Таненбаум. Э. Компьютерные сети / Э. Танен-баум. - СПб. : Питер, 2007. - 992 с.
15.	Metcalfe, R. M. Ethernet: Distributed Packet Switching for Local Computer Networks / R. M. Metcalfe, D. R. Boggs // Communications of the ACM. - 1976. - Vol. 19. - P. 395-404.
16.	Nagle, J. On Packet Switches with Infinite Storage / J. Nagle // IEEE Transactions on Communications. - 1987. - Vol. COM-35. - P. 435-438.
17.	Sari, H. Extending the Capacity of Multiple Access Channels / H. Sari, F. Vanhaverbeke, M. Moeneclaey. - IEEE Communications Magazine. - 2000. - Vol. 38. - P. 74-82.
1 Каф. «Электронные вычислительные машины», Днепропетровский национальный университет железнодорожного транспорта имени академика В. Лазаряна, ул. Лазаряна, 2, 49010, Днепропетровск, Украина, тел. +38 (056) 373 15 89, эл. почта viknik.p1988@mail.ru
МЕТОДИКА ПОСТРОЕНИЯ РАЦИОНАЛЬНОЙ СТРУКТУРЫ СЕТИ ПРЕДПРИЯТИЯ С ПОМОЩЬЮ ИМИТАЦИОННЫХ МОДЕЛЕЙ
Цель. Поиск новых вариантов перехода от технологии Ethernet. Методика. Физическая структуризация сети Fast Ethernet на основе хабов и логическая структуризация сети Fast Ethernet с использованием коммутаторов. Организация VLAN на основе группировки сети портов и в соответствии со стандартом IEEE 802.1Q. Результаты. Предложены возможные варианты усовершенствования сети Ethernet: в соответствии с технологиями Fast Ethernet и VLAN на имитационных моделях в пакетах NetCraker и Cisco Packet Tracer соответственно. Научная новизна. Предложена методика проектирования локальной сети с использованием
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального утверситету залiзничного транспорту, 2013, вип. 3 (45)
МОДЕЛЮВАННЯ ЗАДАЧ ТРАНСПОРТУ ТА ЕКОНОМ1КИ
технологии VLAN. Практическая значимость. Каждый из вариантов усовершенствования сети «Днепро-железнпроект» имеет свои преимущества. Переход от технологии Ethernet на технологию Fast Ethernet простой и экономный, требует одного коммутатора, а при организации VLAN - не менее двух. Однако технология VLAN обладает следующими преимуществами: снижение нагрузки на сеть, изолирование широковещательного трафика, изменение логической структуры сети без изменения физической структуры, повышение безопасности сети. Переход от технологии Ethernet к технологии VLAN позволяет отделить физическую топологию от логической, а формат кадров стандарта IEEE 802.1Q дает возможность упростить сам процесс внедрения виртуальных сетей в предприятия.
Ключевые слова: физическая и логическая структуризация сети Fast Ethernet; виртуальная локальная сеть; группировка портов; кадр стандарта 1ЕЕЕ 802.1Q
V. N. PAKHOMOVA1*
1 Dep. «Electronic computers», Dnipropetrovsk National University of Railway Transport named after Academician V. Lazaryan, Lazaryan Str. 2, 49010, Dnipropetrovsk, Ukraine, tel. +38 (056) 373 15 89, e-mail viknik.p1988@mail.ru
METHOD OF CONSTRUCTION OF RATIONAL CORPORATE NETWORK USING THE SIMULATION MODEL
Purpose. Search for new options of the transition from Ethernet technology. Methodology. Physical structuring of the Fast Ethernet network based on hubs and logical structuring of Fast Ethernet network using commutators. Organization of VLAN based on ports grouping and in accordance with the standard IEEE 802 .1Q. Findings. The options for improving of the Ethernet network are proposed. According to the Fast Ethernet and VLAN technologies on the simulation models in packages NetCraker and Cisco Packet Tracer respectively. Origiality. The technique of designing of local area network using the VLAN technology is proposed. Practical value. Each of the options of "Dniprozaliznychproekt" network improving has its advantages. Transition from the Ethernet to Fast Ethernet technology is simple and economical, it requires only one commutator, when the VLAN organization requires at least two. VLAN technology, however, has the following advantages: reducing the load on the network, isolation of the broadcast traffic, change of the logical network structure without changing its physical structure, improving the network security. The transition from Ethernet to the VLAN technology allows you to separate the physical topology from the logical one, and the format of the iEEE 802.1Q standard frames allows you to simplify the process of virtual networks implementation to enterprises.
Keywords: physical and logical structuring of the network Fast Ethernet; virtual local area network; port grouping; iEEE 802.1Q standard frame
REFERENCES
1.	Anderson K., Minasi M. Lokalnyye seti. Polnoye rukovodstvo [Local area networks. Complete direction]. Saint Petersburg, KORONA print Publ., 1999. 626 p.
2.	Berri N. Kompyuternyye seti [Computer networks]. Moscow, BINOM Publ., 1996. 400 p.
3.	Butayev M.M., Konnov N.N. Modelirovaniye setey EVM [Modeling of the electronic computer networks]. Penza, Izd-vo Penz. gos. un-ta Publ., 2007. 56 p.
4.	Kuil L., Rassel R. Fast Ethernet Kompyuternyye seti [Fast Ethernet Computer systems]. Kyiv, BHV Publ., 1998. 448 p.
5.	Kulakov Yu.A., Omelyanskiy S.V. Kompyuternyye seti [Computer networks]. Kyiv, Yunior Publ., 1999. 544 p.
6.	Mark A. Vysokoproizvoditelnyye seti. Entsiklopediyapolzovatelya [High efficiency networks. User's guideline]. Kiv, DiaSoft Publ., 1998. 432 p.
7.	Novikov Yu.V., Kondratenko S.V. Lokalnyye seti: arkhitektura, algoritmy, proektirovaniye [Local area networks: architecture, algorithms, design]. Moscow, EKOM Publ., 2000. 312 p.
8.	Olifer V.G., Olifer N.A. Kompyuternyye seti. Printsipy, tekhnologii, protokoly [Computer networks. Principles, technologies, protocols]. Saint Petersburg, Piter Publ., 2001. 672 p.
9.	Pakhomova V.N., Prudko A.A. Analiz lokalnykh vychislitelnykh setey sortirovochnykh stantsiy na osnove imitatsionnoy modeli TOKEN RING [Analysis of the local computer networks of the railway yard on the basis of simulation model TOKEN RING]. Transport [Transport], 2002, issue 12, pp. 131-136.
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального утверситету залiзничного транспорту, 2013, вип. 3 (45)
МОДЕЛЮВАННЯ ЗАДАЧ ТРАНСПОРТУ ТА ЕКОНОМ1КИ
10.	Pakhomova V.M., Skaballanovych T.I., Liakhov D.A. Mozhlyvist vykorystannia tekhnolohii 100VG-AnyLAN v informatsiinykh systemakh zaliznychnoho transporta [The ability to use the technologies 100VG-AnyLAN in information systems of railway transport]. Visnyk Dnipropetrovskoho natsionalnoho universytetu zaliznychnoho transportu imeni akademika V. Lazariana [Bulletin of Dnipropetovsk National University named after Academician V. Lazaryan], 2012, issue 41. pp. 199-204.
11.	Pakhomova V.M., Zakhanevych V.V. Demonstratsiia orhanizatsii virtualnykh lokalnykh merezh na prohramnii modeli [Demonstration of the virtual local area networks organization on the program model]. Zbirnyk naukovykh prats Donetskoho instytutu zaliznychnoho transportu [Proceedings of the Donetsk Railway Transport Institute], 2012, issue 31, pp. 85-94.
12.	Pakhomov S. Vozmozhnosti sovremennykh kommutatorov po organizatsii virtualnykh setey (Possibilities of the modern commutators in modern networks organization). KompyuterPress - ComputerPress, 2005, no. 4. Available at: http://www.compress.ru/article.aspx?id=10522&iid=430 (Accessed 6 June 2013).
13.	Semenov A.B. Proyektirovaniye i raschet strukturirovannykh kabelnykh sistem i ikh komponentov [Engineering and design of structured cable systems and their components]. Moscow, DMK Press Publ., 2003. 416 p.
14.	Tanenbaum E. Kompyuternyye seti [Computer networks]. Saint Petersburg, Piter Publ., 2007. 992 p.
15.	Metcalfe R.M., Boggs D.R. Ethernet: Distributed Packet Switching for Local Computer Networks. Communications of the ACM, 1976, vol. 19, pp. 395-404.
16.	Nagle J. On Packet Switches with Infinite Storage. IEEE Transactions on Communications, 1987, vol. COM-35, pp. 435-438.
17.	Sari H., Vanhaverbeke F., Moeneclaey M. Extending the Capacity of Multiple Access Channels. IEEE Communications Magazine, 2000, vol. 38, pp. 74-82.
Стаття рекомендована до публ1кацИ' д.т.н., проф. О. I. Михальовим (Украгна); д.т.н., проф.
I. В. Жуковицьким (Украгна)
Надшшла до редколегп 08.04.2013
Прийнята до друку 21.06.2013
      
      
    
  

=====

        


﻿Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
МОДЕЛЮВАННЯ ЗАДАЧ ТРАНСПОРТУ ТА ЕКОНОМ1КИ
УДК 656.212.5-047.58
В. М. ПАХОМОВА1*, Л. В. СТРИБУЛЕВИЧ1
1 Каф. «Електронт обчислювальнi машини», Днiпропетровський нацюнальний утверситет з^зничного транспорту iменi академiка В. Лазаряна, вул. Лазаряна, 2, 49010, Дтпропетровськ, Укра!на, тел. +38 (056) 373 15 89, ел. пошта viknik.p1988@mail.ru
МОДИФ1КОВАНА 1М1ТАЦ1ЙНА МОДЕЛЬ ЛОКАЛЬНО? МЕРЕЖ1 З ВИКОРИСТАННЯМ МАРКЕРНОГО МЕТОДУ ДОСТУПУ ДО ШИНИ
Мета. Для дослщження характеристик локально! мереж1 з використанням маркерного методу доступу до шини розробити И модифiковану iмiтацiйну модель. Методика. Характеристики мереж1 визначаються на розробленiй iмiтацiйнiй моделi, в основу яко! покладено дiаграми сташв канального рiвня станци мереж1 з мехашзмом обробки прiоритетiв як у стшкому станi, так i пвд час виконання процедур керування: шщацп логiчного к1льця, входу та виходу станци мереж1 з логiчного шльця. Результати. Розроблено iмiтацiйну модель, використовуючи яку можна отримати залежностi максимального часу очжування заявки в черзi для рiзних класiв доступу, часу реакцп та корисно! пропускно! спроможност мереж1 вiд швидкостi передачi даних, кшькосп станцiй мереж1, iнтенсивностi генерацп заявок, кiлькостi кадрiв, що передаються за час утримання маркера, довжини кадру. Наукова новизна. Запропоновано методику iмiтацiйного моделювання локально! мереж1, яка ввдображае !! роботу як у стшкому сташ, так i з використанням процедур керування, мехашзму призначення й обробки прiоритетiв. Практична значимкть. Визначення характеристик мереж1 в системах реального часу на залiзничному транспорта на основi розроблено! iмiтацiйно! модель
Ключовi слова: маркерний метод доступу до шини; призначення прюритепв; класи доступу; процедури керування
Вступ
У системах реального часу на сортувальних станщях доцшьне використання локальних мереж, яю вщповщають вимогам обробки сиг-нал1в реального часу з наземного обладнання (на нижньому р1вш) [10, 14]. Таку можливють надають локальш мереж1 з використанням маркерного методу доступу до шини [4]. Цш проблем! присвячена низка наукових праць [1-3, 5-8, 13, 15-16]. Рашше була розроблена вщповщна ¿мггацшна модель, яка вщображае роботу мереж в стшкому сташ (без використання процедур керування, мехашзму призна-
чення й обробки прюритепв) [9]. На даному еташ виконано удосконалення первинно! iмiтацшноi моделi локально! мереж!.
Мета
Для дослiдження характеристик локально! мереж з використанням маркерного методу доступу до шини в системах реального часу на залiзничному транспорт розробити модиф> ковану iмiтацiйну модель «Token Bus» з мехашзмом призначення прюритеив, що вщображае роботу мереж як у стiйкому сташ, так i iз засто-суванням основних процедур керування: шща-
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
ци логiчного кiльця, входу та виходу станци мережi з логiчного кшьця.
Методика
Характеристики локально! мережi в системах реального часу на залiзничному транспорт визначаються на розробленш iмiтацiйнiй моделi мереж1, в основу яко! покладена не тiльки дiаграма станiв канального рiвня маркерного методу доступу до шини (стшкий стан) [9], а й запропонованi в [11] дiаграми станiв канального рiвня станци локально! мережi з використанням мехашзму призначення та об-робки даних за класами доступу й основних процедур керування: iнiцiацi! логiчного кiльця, входу та виходу робочо! станцi! мереж з логiчного маркерного кiльця.
Результати
В основу первинно! iмiтацiйно! моделi покладена дiаграма канального рiвня станцi! локально! мережi з використанням маркерного методу доступу до шини в стшкому сташ (без використання процедур керування та без при-значення й обробки прюритеив) [9]. Основою модифшовано! iмiтацiйно! моделi «Token Bus» е дiаграми станiв канального рiвня станцi! локально! мережi з використанням маркерного методу доступу до шини з мехашзмом призначення й обробки прюрите^в та застосуванням основних процедур керування: шщаци лопчного кiльця, входу та виходу станци мережi з логiчного кiльця, тобто в нш бiльш ефективно реалiзовано iмiтацiйне моделюван-ня. Особливiстю та складшстю маркерного методу доступу е наявшсть процедур керування. Детальш дiаграми станiв з !х використанням, що були задiянi в модифшованш iмiтацiйнiй моделi, розробленi та описаш в [11].
Так, у модифшованш iмiтацiйнiй моделi, як i в [9], демонструеться модель процесiв передач^прийому маркера та даних, але метод маркерного доступу до шини забезпечуе мехашзм призначення прiоритетiв, який при-значае кадрам даних, що чекають передачi, р!з-нi «класи обслуговування», якi класифiкуються за бажаною прюритетнютю передачi [4]. Класи обслуговування 0 i 1 вiдповiдають класу досту-
пу 0, класи обслуговування 2 i 3 - класу доступу 2, класи обслуговування 4 i 5 - класу доступу 4 i класи обслуговування 6 i 7 - класу доступу 6. На рис. 1 наведена дiаграма сташв канального рiвня з використанням маркерного методу доступу до шини з класами доступу обслуговування кадрiв.
Для кожного класу доступу е черга кадрiв, що шдлягають передача Коли станщя приймае маркер, вона спочатку обслуговуе чергу най-вищого класу доступу. Для шостого класу доступу призначаеться час утримання маркера (Token Holding Time, THT), для клаав доступу 4, 2 та 0 - бажаний час оберту маркера (Token Rotation Time, TRTn, де n = 4, 2 або 0). Тому кожна станщя мережi повинна мати таймер утримання маркера та три таймери оберту маркера для трьох нижчих клашв доступу. Для кожного класу доступу станщя вимiрюе час, який витрачае !! маркер на циркулящю по логiчному
кiльцю TRTфnакт. На вщм^ вiд [9] у модифшо-
ванiй iмiтацiйнiй моделi додаються вiдповiднi стани «Аналiз класу доступу» та «Аналiз TRT,фПакт». Якщо маркер повертаеться на стан-цiю за менший час, шж бажаний час оберту маркера TRTj^ < TRTn (див. рис. 1), то станщя
може передавати кадри цього класу доступу доти, поки не вичерпаеться цей час. Якщо ж маркер повертаеться тсля бажаного часу його повернення TRT^^ > TRTn (див. рис. 1) - станщя не може передавати кадри цього прюритету за такого часу передачi маркера. Тшьки тсля передачi всiх кадрiв вищого прюритету станщя приступае до обслуговування таймерiв оберту маркера й черг, переходячи вщ вищих до нижчих клашв доступу.
Пiд час iмiтацiйного моделювання локально! мереж! використана схема з фшсованим кроком зсуву системного часу; програмна реа-лiзацiя iмiтацiйно! моделi виконана за допомо-гою мови об'ектно-орiентованого програму-вання Delphi. Структура вщповщно! програмно! iмiтацiйно! моделi локально! мереж1 зображена на рис. 2.
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
TRT факт > TRT п
Рис. 1. Д1аграма сташв канального р1вня станцй' мереж з мехашзмом обробки прюритепв
Форма «Дгалог» призначена для задання характеристик мережi для моделювання. С мож-ливiсть запускати модель зi значеннями за про-мовчанням або зi значеннями, як перебувають у допустимому дiапазонi, що вводить користу-вач, пiсля чого виконусться автоматичний роз-рахунок необхщних констант. Функцiя «1шща-лiзацiя початкових значень» виконуе скидання змiнних та встановлення за промовчанням характеристик мережа Функцiя «Введення даних користувача» надае користувачу можливiсть змiни будь-яких iз запропонованих характеристик мережа За допомогою функци «Пщтвер-дження введених даних» здiйснюеться запис у змш даних, якi розташованi в полях введення. Функщя «Розрахунок та виведення констант» на основi введених даних виконуе розрахунок констант для роботи мереж та 1х виведення. Функщя «Перехщ до моделювання» закривае дiалогове вiкно та запускае вiкно моделювання.
Форма «Моделювання» призначена для в> дображення процесу моделювання мережi iз заданими характеристиками. Надае користувачу можливють змiни деяких характеристик мереж та вiдображае стан основних параметрiв мереж в процесi моделювання. Функщя «1шщ-алiзацiя початкових умов» на основi введених користувачем даних встановлюе лiчильники та параметри мережi в первинний стан. Функцiя «Генеращя заявок» забезпечуе генерацiю заявок на основi введених користувачем даних. Функщя «Передача даних» здшснюе передачу даних та маркера на основi розрахованих констант. Функцiя «Ощнка стану моделi, створення вiдгукiв» розраховуе вщгуки на даний момент часу та перевiряе внесенi користувачем налаш-тування на формi моделювання. Функщя «В> дображення стану моделi» оргашзовуе виведення характеристик мереж та 11 елементiв.
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
1нМал1зацт початкових значень
Пщтвердження введених даних
Розрахунок та виведення констант
Перехщ до моделювання
1н1ц1ал1зац1я початкових умов
Запуск моделювання
ЗмЫа системного часу
Оцшка стану модели створення вщгугав
Вщображення стану модел!
Завершения моделювання
Виведення вщгуюв
Завершения роботи
Рис. 2. Структура програмно! модел 1мтацшно1 модел «Token Bus»
Форма «Результати» призначена для виведення вихщних характеристик мережа Функцiя «Виведення вщгуюв» вщображае вiдгуки, що розрахованi на момент завершення моделювання. Пщ час запуску iмiтацшноl моделi «Token Bus» з'являсться форма «Дiалог». Вона призначена для введення параметрiв користувачем для подальшого моделювання роботи мережа G можливiсть ввести таю параметри: швидюсть передачi даних (2, 10, 15 або 20 Мбгг/с), юль-кiсть робочих станцiй мережi (3..20), штенсив-нiсть генераци заявок (50.. 5 00 заявок/с), юль-кiсть кадрiв, якi передае станцiя за час утри-мання маркера, довжина полiв «Адреса отри-мувача» (АО) та «Адреса вщправника» (АВ) (2 або 6 октет), довжина кадру даних (2 676...8 195 октет). Пюля визначення з конф> гурацiею мережi користувач пiдтверджуе введення та переходить до наступних даних: вхщ-
ний пот1к, процент появи заявки кожного класу доступу та тип модел1 (стшкий стан мереж або з тдключенням процедур керування: «1шщащя лопчного юльця», «Вхщ станци в лопчне юль-це» та «Вихщ станци з лопчного юльця»). У пол1 «Константи» значення розраховуються автоматично за формулами
THT=ml, V
TRT4 = N ■ THT + THT, TRT2 = N ■ THT + 2 ■ THT TRT0 = N ■ THT + 3 ■ THT .
(1)
(2)
(3)
(4)
де THT - час утримання маркера станщею мереж для шостого класу доступу; m - юльюсть кадр1в; l - довжина кадру; V - швидюсть пере-
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
дачi даних; N - кiлькiсть станцш мережц TRT4 - час оберту маркера 4-го класу доступу; TRT2 - час оберту маркера 2-го класу доступу; TRT0 - час оберту маркера 0-го класу доступу.
Користувач переходить до моделювання. На рис. 3 наведено форму <^алог» iмiтацiйноl моделi «Token Bus» з визначеними параметрами.
Диалог
Конфигурации сети
Скорость передачи данный (Мбит/сек)
I
Количество рабочих станций (шг.)
10
Интенсивность генерации заявок
1300
Количество кадров [шт.]
31
Длины полей "AG" и"АП" (байт)
31
Длина кадра данным [байт]
Iwl
31
Подтвердить ввод
Входной поток
Равномерный Г" Пуассоноеский
Появление заявки
Ё-го класса доступа	5 ^
4-ГО Класса ДОСТупа	-|р
2-ГО класса доступа	15
0-го класса доступа	70 %
Тип модели
(* Только устойчивое состояние Г" С управляющими процедурами
Константы ТНТ
8750
TRT4 96270
МКС МКС
TRT2 105020 мкс
TRT0 113770 мкс
Моделирование
Рис. 3. Вхвдна форма «Ддалог» ш1тацшно1 модел1 «Token Bus»
Результуючi характеристики: максимальний час очiкування заявки в черзi для всiх клашв доступу; час реакци та корисна пропускна спроможнiсть мережi (швидкiсть передачi ко-рисно! шформаци)
Ck =
lбд k
(5)
де Ск - корисна пропускна спрошожшсть мереж^ Iбд - розмiр блоку даних; к - кшьюсть переданих кадрiв; tшод - час моделювання.
Пюля натиснення кнопки «Моделювання» з'являеться однойшенна форма, де на графшу шожна спостерiгати генеращю заявок кожного класу доступу на кожнш станци шережi. Нижче
у вшш вiдображаються поди в певш моменти часу. За бажанням користувач може зупинити процес моделювання у вказанш точцi: пiсля передачi кадру, тсля кола (маркер повернувся на станщю), пiсля генераци заявок та у вказанш точщ (вказуеться час). Щд час роботи моделi е можливiсть змiнювати iнтенсивнiсть генераци заявок окремо на кожнш станци мережг
У лiвому нижньому кутi вшна користувач може спостерiгати рух маркера вщ станци до станци мережц час передачi кадрiв даних стан-цiею, яка володiе маркером; фактичний час оберту маркера (час оберту маркера, який зт-маеться з таймера на попередньому колт' час завершення попереднього кола та час початку поточного кола). Якщо користувач помилився або хоче змшити початковi параметри, то за допомогою кнопки RESET можна повернутися на форму <^алог».
Якщо на формi «Дiалог» обрати тип моде-лювання з процедурами керування, то форма «Моделювання» змiнить свш вигляд: на нiй з'являться три додаткових вiконця: «Iнiцiацiя логiчного кшьця», «Вхщ станци до логiчного кшьця» та «Вихiд станци з лопчного кiльця». На рис. 4 наведена форма «Моделювання» iмi-тацшно1 моделi «Token Bus» з використанням процедур керування.
Натиснувши кнопку «Результати» з'являеться вщповщна форма, яка вiдображае такi характеристики мережг максимальний час оч> кування заявки в черзi для кожного класу доступу, час реакци та корисну пропускну спро-можнють мережг
Виходячи з результатiв моделювання, можна отримати залежносп максимального часу очшування заявки в черзi для рiзних класiв доступу (6, 4, 2 i 0), часу реакци та корисно1 пропускное' спроможностi мережi вiд швидкосп передачi даних, кiлькостi станцiй мереж1, ште-нсивностi генераци заявок, кшькосп кадрiв, що передаються за час утримання маркера, довжи-ни кадру.
t
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
Рис. 4. Форма «Моделювання» iмiтацшноi моделi
Наукова новизна та практична значимкть
Запропоновано методику ¿мгацшного моделювання локально! мереж^ яка вщображае 11 роботу як у стшкому сташ, так { з використан-ням процедур керування та мехашзму призна-чення й обробки прюритет1в, для визначення вщповщних характеристик мереж! в системах реального часу на затзничному транспорт!.
Висновки
1. Для дослщження характеристик локально! мережi з використанням маркерного методу доступу запропоновано методику ¿мгацшного моделювання мереж^ що вщображае 11 роботу як у стшкому сташ, так ! ¿з застосуванням мехашзму призначення й обробки прюритет1в, а також процедур керування: шщаци лопчного кшьця, входу та виходу станцп мережi з лопч-ного кшьця.
Token Bus» з використанням процедур керування
2.	Розроблено в Delphi модиф!ковану !м!та-цiйну модель локально! мереж! «Token Bus», вхщш параметри яко!: швидюсть передач! да-них, к!льк!сть робочих станцш локально! мереж!, штенсившсть генераци заявок, кшьюсть кадр!в, що передаються за час утримання маркера, довжина кадру даних; результуюч! характеристики: максимальний час оч!кування заявки в черз! для клас!в доступу 6, 4, 2 та 0, час реакци та корисна пропускна спроможшсть мереж!. На основ! даних !м!тац!йного моделювання можна одержати вщповщн! залежност!.
3.	На шдстав! результапв !м!тац!йного мо-делювання можливо надати в!дпов!дн! рекоме-ндаци щодо модершзаци !снуючих та впрова-дження нових комп'ютерних мереж у системах реального часу на зал!зничному транспорт!.
4.	Розроблена модиф!кована !м!тац!йна модель локально! мереж! може бути використана як демонстрац!йна в навчальному процес! з ди-сципл!ни «Комп'ютерн! мереж!».
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
СПИСОК ВИКОРИСТАНИХ ДЖЕРЕЛ
1.	Андерсон, К. Локальные сети. Полное руководство / К. Андерсон, М. Минаси. - СПб. : КОРОНА принт, 1999. - 626 с.
2.	Берри, Н. Компьютерные сети / Н. Берри. -М. : БИНОМ, 1996. - 400 с.
3.	Бутаев, М. М. Моделирование сетей ЭВМ / М. М. Бутаев, Н. Н. Коннов. - Пенза : Изд-во Пензенского гос. ун-та, 2007. - 56 с.
4.	ГОСТ 34.913.4-91. Информационная технология. Локальные вычислительные сети. Метод маркерного доступа к шине и спецификация физического уровня. - Введ. 1992-07-01. -М. : Изд-во стандартов, 1992. - 303 с.
5.	Кулаков, Ю. А. Компьютерные сети / Ю. А. Кулаков, С. В. Омелянский. - К. : Юниор, 1999. - 544 с.
6.	Марк, А. Высокопроизводительные сети. Энциклопедия пользователя / А. Марк. - К. : ДиаСофт, 1998. - 432 с.
7.	Новиков, Ю. В. Локальные сети: архитектура, алгоритмы, проектирование / Ю. В. Новиков, С. В. Кондратенко. - М. : ЭКОМ, 2000. - 312 с.
8.	Олифер, В. Г. Компьютерные сети. Принципы, технологии, протоколы / В. Г. Олифер, Н. А. Олифер. - СПб. : Питер, 2001. - 672 с.
9.	Пахомова, В. М. Удосконалення технологи роботи систем управлшня сортувальним про-цесом на основ1 рацюнально! оргашзацп шфо-рмацшних потоков на станщях : автореф. дис. ... канд. техн. наук : 05.22.20 / Пахомова Вжго-р1я Миколавна ; Дшпропетр. держ. техн. ун-т
В. Н. ПАХОМОВА1*, Л. В. СТРИБУЛЕВИЧ1*
1 Каф. «Электронные вычислительные машины», Днепропетровский национальный университет железнодорожного транспорта имени академика В. Лазаряна, ул. Лазаряна, 2, 49010, Днепропетровск, Украина, тел. +38 (056) 373 15 89, эл. почта viknik.p1988@mail.ru
МОДИФИЦИРОВАННАЯ ИМИТАЦИОННАЯ МОДЕЛЬ ЛОКАЛЬНОЙ СЕТИ ПРИ МАРКЕРНОМ МЕТОДЕ ДОСТУПА К ШИНЕ
Цель. Для исследования характеристик локальной сети при маркерном методе доступа к шине разработана ее модифицированная имитационная модель. Методика. Определение характеристик сети осуществляется на разработанной имитационной модели, в основу которой положены диаграммы состояний канального уровня станции сети с механизмом обработки приоритетов как в устойчивом состоянии, так и при выполнении управляющих процедур: инициации логического кольца, входе и выходе станции сети с логического кольца. Результаты. Разработана имитационная модель, на основе которой можно получить зависимости максимального времени ожидания заявки в очереди для разных классов доступа, времени реакции и полезной пропускной способности сети от скорости передачи данных, числа станций сети, интенсивности генерации заявок, количества кадров, передаваемых за время удержания маркера, длины кадра. Научная новизна. Предложена методика имитационного моделирования локальной сети, отражающая ее работу как в устойчивом состоянии, так и при выполнении управляющих процедур, механизма назначения и
залiзн. трансп. îm. акад. В. Лазаряна. - Д., 2000.
-	20 с.
10.	Пахомова, В. Н. Анализ локальных вычислительных сетей сортировочных станций на основе имитационной модели TOKEN RING / В. Н. Пахомова, А. А. Прудко // Транспорт : зб. наук. пр. - Д., 2002. - Вип. 12. - С. 131-136.
11.	Пахомова, В. М. Обробка клаав доступу за маркерним методом доступу до шини в мережах систем реального часу на сортувальних станщях / Iнформ.-керуючi системи на залiзн. транспорта - 2013. - № 3. - С. 65-70.
12.	Пахомова, В. М. Методика побудови рацюнально! структури мереж пвдприемства за допо-могою iмiтацiйних моделей / В. М. Пахомова // Наука та прогрес трансп. Вюник Дншропетр. нац. ун-ту залiзн. трансп. îm. акад. В. Лазаряна.
-	Д., 2013. - Вип. 3 (45). - С. 94-102.
13.	Таненбаум, Э. Компьютерные сети / Э. Таненбаум. - СПб. : Питер, 2007. - 992 с.
14.	Техническое задание на автоматизированную систему управления расформированием составов на сортировочной станции : научн.-техн. отчет 99.01. / рук. Е. М. Шафит. - Д., 2000. -179 с.
15.	Saltzer, J. H. A star-shaped ring with high maintainability / J. H. Saltzer, K. T. Pogran. -Proc. of the Local Area Communications Network Symposium. - Boston, 1979. - P. 179-189.
16.	Thurber, K. J. The many faces of local networking / K. J. Thurber, H. A. Freeman // Data Communications. - 1981. - P. 62-70.
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
обработки приоритетов. Практическая значимость. Определение характеристик сети в системах реального времени на железнодорожном транспорте на основе разработанной имитационной модели.
Ключевые слова: маркерный метод доступа к шине; назначение приоритетов; классы доступа; управляющие процедуры
V. N. РЛХИОМОУА1*, L.V. STRIBULEVICH1*
1 Dep. «Electronic Computing Machines», Dnipropetrovsk National University of Railway Transport named after Academician V. Lazaryan, Lazaryan Str., 2, 49010, Dnipropetrovsk, Ukraine, tel. +38 (056) 373 15 89, e-mail viknik.p1988@mail.ru
MODIFIED NETWORK SIMULATION MODEL WITH TOKEN METHOD OF BUS ACCESS
Purpose. To study the characteristics of the local network with the marker method of access to the bus its modified simulation model was developed. Methodology. Defining characteristics of the network is carried out on the developed simulation model, which is based on the state diagram-layer network station with the mechanism of processing priorities, both in steady state and in the performance of control procedures: the initiation of a logical ring, the entrance and exit of the station network with a logical ring. Findings. Л simulation model, on the basis of which can be obtained the dependencies of the application the maximum waiting time in the queue for different classes of access, and the reaction time usable bandwidth on the data rate, the number of network stations, the generation rate applications, the number of frames transmitted per token holding time, frame length was developed. Originality. The technique of network simulation reflecting its work in the steady condition and during the control procedures, the mechanism of priority ranking and handling was proposed. Practical value. Defining network characteristics in the real-time systems on railway transport based on the developed simulation model.
Keywords: marker bus access method; priority ranking; access classes; control procedures
REFERENCES
1.	Anderson K., Minasi M. Lokalnyye seti. Polnoye rukovodstvo [Local networks. Complete guide]. Saint Petersburg, KORONA print Publ., 1999. 626 p.
2.	Berri N. Kompyuternyye seti [Computer networks]. Moscow, BINOM Publ., 1996. 400 p.
3.	Butayev M.M., Konnov N.N. Modelirovaniye setey EVM [Electronic computer network modeling]. Penza, Izd-vo Penzenskogo gos. un-ta Publ., 2007. 56 p.
4.	GOST 34.913.4-91. Lokalnyye vychislitelnyye seti. Metod markernogo dostupa k shine i spetsifikatsiya fizicheskogo urovnya [State Standard 34.913.4-91. Local area networks. Token method of bus access and the physical level specification]. Mocsow, Standartinform Publ., 1992. 303 p.
5.	Kulakov Yu.A., Omelyanskiy S.V. Kompyuternyye seti [Computer networks]. Kyiv, Yunior Publ., 1999. 544 p.
6.	Mark A. Vysokoproizvoditelnyye seti. Entsiklopediya polzovatelya [High performance networks. User encyclopedia]. Kyiv, DiaSoft Publ., 1998. 432 p.
7.	Novikov Yu.V, Kondratenko S.V. Lokalnyye seti: arkhitektura, algoritmy, proyektirovaniye [Local networks. Architecture, algorithm, designing]. Moscow, EKOM Publ., 2000. 312 p.
8.	Olifer V.G., Olifer N.A. Kompyuternyye seti. Printsipy, tekhnologii, protokoly [Computer networks. Principles, technologies, protocols]. Saint Petersburg, Piter Publ., 2001. 672 p.
9.	Pakhomova V.M. Udoskonalennia tekhnolohii roboty system upravlinnia sortuvalnym protsesom na osnovi ratsionalnoi orhanizatsii informatsiinykh potokiv na stantsiiakh. Avtoreferat. Diss. [Technology improvement of the control system operation of sorting process based on the rational organization of data flows at stations. Author's abstract.]. Dnipropetrovsk, 2000. 20 p.
10.	Pakhomova V.N., Prudko A.A. Analiz lokalnykh vychislitelnykh setey sortirovochnykh stantsiy na osnove imitatsionnoy modeli TOKEN RING [Local area network analysis of sorting stations on the basis of simulation model TOKEN RING]. Transport [Transport], 2002, issue 12, pp. 131-136.
11.	Pakhomova V.M. Obrobka klasiv dostupu za markernym metodom dostupu do shyny v merezhakh system realnoho chasu na sortuvalnykh stantsiiakh [Handling of access classes according to marker method of access to the bus in the real-time networks on the sorting stations]. Informatsiino-keruiuchi systemy na
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 4 (46)
zaliznychnychnomu transporti - Information and control systems on the railway transport, 2013, no. 3, pp. 65-70.
12.	Pakhomova V.M. Metodyka pobudovy ratsionalnoi struktury merezhi pidpryiemstva za dopomohoiu imitatsiinykh modelei [Methodology of constructing of the enterprise network rational structure using the simulation model]. Nauka ta prohres transportu. Visnyk Dnipropetrovskho natsionalnoho universitetu zaliznychnoho transportu imeni akademika V. Lazariana - Science and Transport Progress. Bulletin of Dni-propetrovsk National University of Railway Transport named after Academician V. Lazaryan, 2013, no. 3 (45), pp. 94-102.
13.	Tanenbaum E. Kompyuternyye seti [Computer networks]. Saint Petersburg, Piter Publ., 2007. 992 p.
14.	Shafit Ye.M. Tekhnicheskoye zadaniye na avtomatizirovannuyu sistemu upravleniya rasformirovaniyem sostavov na sortirovochnoy stantsii [Technical specifications for the automated control system of train splitting on the sorting stations]. Dnipropetrovsk, 2000. 179 p.
15.	Saltzer J.H., Pogran K.T. A star-shaped ring with high maintainability. Proc. of the Local Area Communications Network Symposium. Boston, 1979, pp. 179-189.
16.	Thurber K.J., Freeman H.A. The many faces of local networking. Data Communications, 1981, pp. 62-70.
Стаття рекомендована до публтацп д.т.н., проф. В. В. Гнатушенком (Украта); д.т.н.,
проф. I. В. Жуковицьким (Украта)
Надшшла до редколегп 04.06.2013.
Прийнята до друку 08.08.2013.
      
      
    
  



=====

        


﻿Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 5 (47)
АВТОМАТИЗОВАН1 СИСТЕМИ УПРАВЛ1ННЯ НА ТРАНСПОРТ1
УДК 656.259.12 : 656.256.3
А. М. БЕЗНАРИТНИЙ1*, В. I. ГАВРИЛЮК1
1 Каф. «Автоматика, телемеханжа та зв'язок», Дтпропетровський нащональний утверситет затзничного транспорту 1мет академжа В. Лазаряна, вул. Лазаряна, 2, Дтпропетровськ, Укра!на, 49010, тел. +38 (056) 373 15 04, факс +38 (0562) 471 866, ел. пошта beznarytny.am@gmail.com
'Каф. «Автоматика, телемеханжа та зв'язок», Дтпропетровський нащональний утверситет затзничного транспорту ш. академжа. В. Лазаряна, вул. Лазаряна, 2, Дтпропетровськ, Украша, 49010, тел. +38 (056) 373 15 04,
АНАЛ1З 1СНУЮЧИХ ТА ПЕРСПЕКТИВНИХ ЗАСОБ1В ТЕХН1ЧНОГО КОНТРОЛЮ СИСТЕМ ЧИСЛОВОГО КОДОВОГО АВТОБЛОКУВАННЯ
Мета. Виявлення характерних особливостей роботи засоб1в технчного контролю системи числового кодового автоблокування, к переваг та недолшв, анал1з можливосп !х використання для д1агностування стану пристрош автоблокування та постановка завдань для розробки нових дагностичних комплекав. Методика. Для досягнення поставлено! мети було використано теоретико-аналтгичний метод та метод функционального анал1зу. Результати. Анал1з юнуючих та перспективних засоб1в вщдаленого контролю та техшчного д1агностування пристро!в автоблокування показав, що 1снуюч1 системи мають недостатню шформатившсть, спрямован здебшьшого на контроль дискретних параметр1в, що у свою чергу не дозволяе побудувати на !х основ1 тдсистеми тдтримки прийняття ршень. Запропоновано тд час розробки нових систем техшчного д1агностування використовувати централ1зовано-розподшений принцип обробки д1агностичних даних, включити до !х складу пвдсистему пвдтримки прийняття ршень, що дозволить зменшити кшьшсть працевтрат на обслуговування пристро!в автоблокування та скоротити час на вщновлення шсля виникнення пошкодження. Наукова новизна. У результат! дослвджень виявлено, що юнуюч1 засоби технчного контролю автоблокування не можуть надати повну оцшку стану перепнних пристро!в сигнал1зацп та блокування, запропоновано критерп для розробки нових систем техшчного д1агностування з1 зб1льшеною кшьшстю д1агностично! шформацп та Н автоматичним анал1зом. Практична значимiсть. Результати анал1зу можуть бути використан на практищ для вибору засобу техтчного контролю пристро!в автоблокування, а також для подальшо! розробки систем д1агностування автоблокування, що дозволяе здшснити по-ступовий перехвд ввд планово-профшактично! модел1 обслуговування до обслуговування за фактичним станом контрольованих пристро!в.
Ключовi слова: автоблокування; системи диспетчерського контролю; д1агностування; мониторинг; апара-тно-програмш засоби; передввдмовний стан; об'екти д1агностування
Вступ
У сучасних умовах роботи затзничного транспорту Укра!ни, для яких характерна його конкуренщя з шшими видами транспорту, очевидною е необхвдшсть шдвищення конкуренто-
спроможност та ефективносп роботи затз-ниць, розвитку !х транзитного та експортного потенщалу, пропускно! спроможносп, збшь-шення швидкосп руху, покращення якост обслуговування тощо. Ефектившсть перев1зного процесу напряму пов'язана з надшнютю при© А. М. Безнаритний, В. I. Гаврилюк, 2013
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 5 (47)
стро!в керування рухом поfздiв та оргашзащею !х технiчного обслуговування. Основним на-прямком пiдвищення ефективностi обслуговування систем сигнатзацп та блокування е роз-робка автоматичних i автоматизованих систем контролю та керування [1, 7]. Значна кшьюсть вщмов систем сигнатзаци, централiзаци та блокування (СЦБ) припадае на рейковi кола та систему числового кодового автоблокування, якою обладнано бiльше половини мапстраль-них колiй в Укра!ш. Складшсть розробки пристрой контролю та дiагностування системи числового кодового автоблокування (ЧК АБ) пов'язана з !х автономнiстю та розмiщенням апаратури на значних вiдстанях вздовж перегону.
Мета
Метою роботи е визначення основних на-прямюв розробки сучасно! автоматизовано! системи дiагностування пристро!в ЧК АБ на ос-новi аналiтичного огляду iснуючих та перспек-тивних засобiв технiчного контролю систем, а також ефективност впровадження непере-рвного дiагностування технiчного стану пристрой на перегонi.
Методика
Для досягнення поставлено! мети було ви-користано теоретико-аналггичний метод та метод функцюнального аналiзу об'екта досл> джень.
Аналiз роботи системи частотного диспет-черського контролю. Система частотного дис-петчерського контролю (ЧДК) використовуеть-ся на залiзницях Укра!ни з 1966 року та набула виликого поширення.
Система дозволила полному диспетчеру в> зуально контролювати показання станцiйних свiтлофорiв i рух поlздiв на дшянщ, а черговим по станцп - рух по]дщв на перегонах. Одночас-но з И допомогою забезпечуеться дистанцшне диспетчерське керування другорядними транс-портними об'ектами, такими як прилади зв'язку та освiтлення посадкових платформ, роз'еднувачi високовольтних лiнiй i т.д., а також автоматичний контроль стану найбшьш вiдповiдальних елементiв перегшних пристро!в АБ i пере1зно1 сигналiзацil [2].
У системi ЧДК передбачена трирiвнева система контролю. !нформащя вiд сигнальних
i пере!зних установок автоблокування й автоматично! пере!зно! сигналiзацi! (нижнiй рiвень) безперервно надходить на промiжнi станци (се-реднш рiвень). Пiсля обробки вона передаеться на центральний пост по!зному диспетчеру й диспетчеру ШЧ (верхнiй рiвень).
Як датчик зайнятостi блок-дiльниць i стан-цiйних колiй у системi ЧДК використовуються контакти колiйних реле. При числовому кодовому автоблокуванш колшне реле працюе в iмпульсному режимi, тому в систему диспет-черського контролю включаються контакти сигнального реле Ж, яке залежить вiд колiйного реле i перебувае тд струмом, якщо блок-дшьниця вiльна й у знеструмленому - якщо за-йнята. Коли блок-дшьниця вiльна, у лiнiю по-силаеться сигнал тонально! частоти, який сприймаеться вщповщним приймачем на станци. Спрацьовуе реле на його виходi, контакти якого включають iндикацiю на табло в чергово-го по промiжнiй станци. Iнформацiя про стан по!здiв передаеться з перегонiв на прилем станци по лiнi! подвшного зниження напруги вiд камертонних генераторiв (ГК), що розм> щуються в шафах автоблокування, i вузькосму-гових приймачiв, встановлених на станцiях.
Частотш сигнали на промiжних станцiях гостя ввiдного щитка посилаються широкосмуго-вим пiдсилювачем УПДК-2 i надходять на входи восьми приймачiв - ПК5-1...ПК5-8. Кожен приймач мае два вузькосмугових пiдсилювачi iз швидкоддачими рееструвальними реле, контакти яких керують режимами увiмкнення ламп табло чергового по станци (ДСП) i пiдключенi до входiв розподiльника РДК-2. Кожен вузько-смуговий пiдсилювач мае один двоконтурний камертонний фшьтр типу ПФ1-1... ПФ1-16. Передача шформацп на центральний пост здшс-нюеться циктчно за допомогою 32-тактного розподiльника типу РДК-2, лшшного генератора однiе! з модифшацш (ГЛ3-1.. .ГЛ3-15), блока керування роботою розподшьника типу БУР, блока передачi шформацп типу БП1 [7].
Прилади ЧДК також забезпечують безпере-рвний контроль справносп апаратури перегш-них i пере!зних пристро!в СЦБ. У разi виник-нення пошкодження генератор диспетчерського контролю посилае в лшю кодований сигнал, що сприймаеться на однш з прилеглих станцiй. Вщповщна лампа на табло в чергового починае блимати в такт з кодом, що передаеться, заго-© А. М. Безнаритний, В. I. Гаврилюк, 2013
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 5 (47)
ряючись в штервалах i згасаючи в iмпульсах. Розшифровка повiдомлень про характер по-шкоджень виконуеться ДСП вiзуально за режимом горiння контрольних ламп табло.
Система ЧДК часто використовуеться на за-лiзницях Укра!ни, але в !! роботi можна видши-ти низку суттевих недолiкiв. До них можна вщ-нести застаршу елементну базу, що потребуе ретельного контролю, точно! настройки та пе-рюдичного ремонту. Обсяг дiагностичних да-них, який можна отримати за допомогою ще! системи, е недостатшм для повного аналiзу стану пристро!в автоблокування. Також сприйнят-тя шформаци, що надаеться системою ЧДК, е досидить незручним процесом, що потребуе додаткових знань вщ електромеханiка та не га-рантуе !! однозначного розшифрування, а як наслiдок можливi помилки пiд час аналiзу дiаг-ностично! iнформацi!, що призводить до зайвих втрат у часi в ходi пошуку та усунення неспра-вностей. Система здатна передавати лише дис-кретну шформащю про стан обмежено! кшько-стi об'ектiв дiагностування, що звужуе можли-востi аналiзу стану пристро!в автоблокування та зменшуе вiрогiднiсть прийняття правильного рiшення про необхщшсть ремонту. До того ж спорадичний принцип передачi iнформацi! не забезпечуе достатньо! швидкостi роботи систе-ми, що стае особливо важливим, враховуючи сучасну тенденцiю до збiльшення швидкостi руху потяпв.
У результатi виконаного аналiзу можна зро-бити висновок, що система частотного диспет-черського контролю не е системою техшчного дiагностування в сучасному розумшш цього термiну та не здатна яюсно виконувати сво! функцп в умовах подальшого розвитку швидю-сного руху.
Тому вважаемо, що подальший розвиток щ-е! системи в завданнi дiагностування пристро!в автоблокування не е рацiональним. Необхщно шукати новi пiдходи до процесу збору та пере-дачi дiагностично! iнформацi!, знаходити засо-би, що дозволяють аналiзувати не лише дискре-тнi, а й неперервнi параметри сигнально! установки, вносити функцп автоматичного аналiзу та прийняття попереднього ршення.
Аналiз роботи системи автоматизованого диспетчерського контролю. Бшьш сучасною, з позици обладнання, що використовуеться, та обсягу дiагностичних функцiй, порiвняно iз
системою ЧДК е автоматизована система диспетчерського контролю (АСДК), яка е апарат-но-програмним комплексом, що забезпечуе ди-спетчерський контроль стану окремих вузл1в та пристро!в автоматики, телемехашки та зв'язку, по!зних пересувань, вшьносп та зайнятосп приймально-вщправних колш, рейкових кш та блок-дшьниць перегону, стану пере!зд1в, вхщ-них i вихвдних св1тлофор1в на станци та шш! функцп [4]. Система АСДК виконуе зб!р, обро-бку та передачу у власну мережу цифрово! та аналогово! шформаци з пристро!в СЦБ на ста-нщях та перегонах, виявлення !х передвщмов-них сташв та реестращю вщмов у режим! реального часу.
Система техшчного д!агностування та мош-торингу АСДК являю собою багатор!вневу ш-формацшну мережу. Техшчш та програмш за-соби нижнього р!вня призначеш для збору, пе-рвинно! обробки шформацп про стан пристро!в на станщях та перегонах, а також !! концентра-ци на лшшних пунктах системи, що розташо-ваш на постах електрично! централ!заци. Вони складаються з електричних датчиюв стану кон-трольованих техшчних засоб!в i контролер!в диспетчерського контролю.
Апаратно-програмш засоби верхнього р!вня являють собою автоматизоваш робоч! мюця (АРМ), для оперативного та техшчного персоналу, а також локальш обчислювальш мереж! на станщях та центральних постах. На цьому р!вш виконуеться приймання та маршрутизащя потоюв шформацп вщ контролер!в диспетчер-ського контролю, !! обробка та виведення на вщповщне АРМ мереж! АСДК. Також на цьому р!вш здшснюеться !! зв'язок ¡з зовшшшми об-числювальними системами, зокрема автомати-зованою системою оперативного керування (АСОУП), та автоматизованою системою слу-жби СЦБ.
Як канал зв'язку використовуються ф!зичш волоконно-оптичш лши зв'язку.
Керування системою та в!дображення д!аг-ностично! шформаци виконуеться за допомо-гою автоматизованих робочих м!сць в!дпов!д-них пращвниюв. Кожне АРМ реал!зуе певш загальносистемш функцп, так! як: граф!чне в> дображення на екран! мон!тора у вигляд! мне-мосхеми !нформац!! про реальний стан при-стро!в СЦБ, ведення системних протокол!в, протокол!в роботи пристро!в СЦБ та д!й персо-
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 5 (47)
налу, стан зв'язку м1ж елементами системи, вщображення шформаци в раз1 виникнення по-заштатних ситуацш, налаштування та коректу-вання системних параметр1в [9, 10].
АРМ кожного конкретного типу користува-ч1в мае певн1 особливост1, що пов'язат з характером роботи користувача та доповнюються характерними програмними засобами та шдси-стемами.
Отже, можна зробити висновки, що система АСДК являе собою сучасну багатофункцюна-льну систему д1агностики та мошторингу, вщ-повщае вс1м вимогам до систем такого класу та виконуе р1зномаштт функци, пов'язат з автоматизащею керування рухом по!зд1в та збором, збереженням та вщображенням д1агно-стично! шформаци, яка використовуеться тд час прийняття ршень вщповщними пращвни-ками.
Однак водночас у систем1 АСДК можна ви-дшити низку недолшв, до яких слщ вщнести недостатньо повний зб1р шформаци про стан пристро!в автоблокування, малу кшьюсть ана-логово! шформаци, що не дозволяе визначити вс можлив1 вар1анти вщмов в системах автоблокування. Вщсутнють грунтовного автоматичного анатзу д1агностично! шформаци не дае змоги визначати мюце та тип вщмов у робот пристро!в СЦБ та перекладае завдання анал1зу на 1нженерний та експлуатацшно-техшчний персонал дистанци сигнал1заци та зв'язку.
Систему АСДК можна брати за основу тд час розробки нових систем техшчно! д1агнос-тики пристро!в автоблокування, враховуючи виявлеш И недолши.
Огляд роботи апаратно-програмного комплексу диспетчерського контролю. Апаратно-програмний комплекс диспетчерського контролю (АПК-ДК) призначений для центратзовано-го контролю, д1агностики техтчного стану автоблокування, а також оргатзаци керування рухом по!зд1в у рамках диспетчерського кола [11].
На вщм1ну вщ вищеназваних систем, у АПК-ДК широко використовуються засоби сучасно! обчислювально! техшки, що дозволило значно розширити функцюнальт можливос-т системи в завданнях як реестрацп стану об'екпв д1агностування, так { анатзу та про-гнозування стану апаратури сигнальних установок. Це значний крок у переход1 вщ планово-профшактичного методу обслуговування при-
стро!в автоблокування, який загальноприйня-тий на затзницях Укра!ни, до обслуговування за фактичним станом об'екпв контролю.
Таким чином, система АПК-ДК виконуе таю головш функци: оперативне зшмання шформаци про стан блок-дшьниць перегону, рейкових кш, св1тлофор1в та шших засоб1в автоматики й передавання li на лшшш пункти системи, що розташоваш на станщях; передача шформаци для И використання по!зним диспетчером, диспетчером ШЧ та шшими вщповщальними пра-щвниками як на р1вн1 вщдшення затзнищ, так i на р1вн1 управлшня вщповщних служб.
Д1агностичн1 функци системи виражеш в можливостях логiчного визначення хибно! вiльностi блок-дiльницi та попарного зближен-ня потягiв, аналiзу роботи пристро!в, виявлення !х передвiдмовного стану, ошташзаци пошуку та усунення вiдмови, можливосп архiвацil та вiдновлення	подiй,
а також ведення облшу ресурсу пристро!в за !х фактичним напрацюванням [5, 8].
Структура системи АПК-ДК включае три шдсистеми, що реатзоваш з використанням програмованих контролерiв, промислових комп'ютерiв та спецiального програмного забез-печення, а також каналiв зв'язку мiж ними, що дозволяе органiзувати обчислювальну мережу та автоматизованi робочi мюця користувачiв.
На нижньому рiвнi виконуеться збирання, перетворення та концентрацiя шформаци про стан перегшних та станцшних пристро!в СЦБ. Вона вiдображаеться на АРМ чергового по ста-нцп та чергового електромеханiка, а також пе-редаеться на другий рiвень системи та на АРМ по!зного диспетчера та диспетчера ШЧ.
1нформащю про стан перегiнних пристро!в отримують за допомогою автоматики контролю сигнальних точок (АКСТ), що виконана на базi спецiалiзованих контролерiв. Найбiльше поши-рення мае блок АКСТ-СЧМ, який являе собою генератор частоти, що формуе циклiчнi восьми-iмпульснi частотнi посилання в лшю зв'язку вiдповiдно до стану контрольованих об'ектiв. При восьми вихщних iмпульсах завдяки маш-пуляцп за тривалютю iмпульсiв та iнтервалiв виникае можливють контролювати стан семи дискретних i двох порогових датчикiв. 1нфор-мацiя про стан станцiйних пристро!в вводиться в систему за допомогою програмованих iндуст-рiальних контролерiв ПИК-10 та ПИК-120.
Наука та прогрес транспорту. В!сник Дн!пропетровського нацюнального ушверситету затзничного транспорту, 2013, вип. 5 (47)
Зiбрана шформащя далi надходить до тдсис-теми середнього рiвня двома послiдовними л> нiями типу потокова петля або конвертором КБ-485 [6, 12].
Пщсистема середнього рiвня складаеться з концентраторiв лiнiйного поста, якi збирають шформащю вiд пiдсистеми нижнього рiвня, та забезпечують !! обробку, зберiгання, архiвацiю та передачу iншим концентраторам центрального поста. Концентратори, що виконаш на базi промислових комп'ютерiв, об'еднуються в мережу передачi даних, яка забезпечуе обмiн ш-формащею з пiдсистемою верхнього рiвня.
Верхнш рiвень системи складаеться з шфо-рмацiйного та програмного забезпечення верхнього рiвня, яке дозволяе реалiзувати виконан-ня спецiальних технологiчних функцш та орга-нiзувати рiзноманiтнi види АРМ вщповщаль-них працiвникiв: по!зного диспетчера, диспетчера ШЧ, диспетчера залiзничного вузла, оператора облiку вагонiв та шших, а також забезпечуе обмш iнформацiею з iншими шфор-мацiйними системами та АРМ пращвниюв рiв-ня управлiння залiзницi та вщповщних служб.
З усього вищеперелiченого можна зробити висновок, що система АПК-ДК е сучасним комплексом технiчно! дiагностики та мошто-рингу роботи пристро!в СЦБ, що виконуе широкий спектр завдань, яю висуваються до су-часних систем дiагностики. Завдяки модульнш структурi системи весь комплекс програмного забезпечення е бшьш гнучким щодо можливос-тi додавання нових завдань, без змши всього комплексу. Використання АПК-ДК дозволяе модершзувати процес керування рухом по!здiв, автоматизувати велику кшьюсть рутинно! роботи з обслуговування пристро!в автоблоку-вання, пришвидшити процес пошуку несправ-ностей та зменшити !х загальну кшьюсть за ра-хунок виявлення передвщмовних ситуацiй.
З урахуванням усiх названих переваг цiе! системи в нш все ж таки можна виявити деяю недолiки, серед яких: недостатня кшьюсть ви-мiрювальних параметрiв сигнально! установки автоблокування, що не дае можливост повшс-тю автоматизувати роботу з перевiрки парамет-рiв системи, також вщсутнш вибiр дiагностич-но! iнформацi! за !! якiстю, не повною мiрою виконанi функци прогнозування стану апарату-ри автоблокування.
Таким чином, систему АПК-ДК можна ви-
користати як основу для подальших розробок систем дiагностування пристро!в автоблокування, враховуючи вказанi недолши.
Аналiз роботи системи технiчно! дiагнос-тики пристро!в автоблокування та автоматично! пере!зно! сигналiзацi!. Система технiчно! дiаг-ностики пристро!в автоблокування та автоматично! пере!зно! сигналiзацi! (СДТС-АПС) при-значена для автоматизаци функци контролю та дiагностування стану сигнальних точок числового кодового автоблокування та автоматично! пере!зно! сигналiзацi! [12].
Основш стратегiчнi завдання, що виконуе система СДТС-АПС, це: збiр i первинна оброб-ка iнформацi! для систем вщдаленого мошто-рингу технiчного стану сигнально! точки автоблокування, шдвищення надшносп функцiону-вання системи автоблокування за рахунок про-гнозування технiчного стану пристро!в залiзнично! автоматики та оперативного виявлення факту та причини вщмови, впровадження технологiй обслуговування з мшмальною кiль-кiстю персоналу, завдяки автоматичному вико-нанню графiка роботи з обслуговування сигнально! точки, замша генераторiв i станцiйного обладнання ЧДК.
Система СДТС-АПС побудована за iерархi-чним принципом та включае лшшш пункти дi-агностування, що подшяються на станцiйний та перегшний рiвнi, i центральний пост дiагносту-вання i монiторингу. Перегiнний рiвень мiстить лiнiйне перегiнне обладнання, а саме функцю-нальнi контролери типу КДСТ-ДС, за допомо-гою яких здшснюють збирання дискретно! iн-формаци про стан пристро!в сигнально! установки, вимiрювання часових характеристик ко-дово! апаратури. Напругу в контрольних точках вимiрюе контролер типу КДСТ-АС, за яюстю електроживлення на основному та резервному фiдерах стежить контролер КДСТ-ФД. Взаемо-зв'язана робота цих контролерiв дозволяе вияв-ляти передвiдмовнi стани апаратури й вщхи-лення параметрiв вiд встановлених норм, фор-муе передачу дiагностично! iнформацi! на стан-цiйний рiвень по лiнi! ДСН або видшенш фiзичнiй лiнi! зi швидкiстю 9 600 Бод.
1нформащя вiд усiх сигнальних установок надходить на концентратор КДСТ-СВ, який увiмкнений у локальну мережу з штерфейсом Я8-485 з лiнiйним концентратором шформаци ЛКИ, який керуе лампами на пульт-табло чер-
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету затзничного транспорту, 2013, вип. 5 (47)
гового по станци та автоматизованого робочого мюця електромехашка.
Д1агностична шформащя збер1гаеться та в1-дображаеться на АРМ електромехашка у ви-гляд1 мнемосхем, таблиць та графшв. Дал1 д1а-гностична шформащя про стан сигнальних установок та результати вим1рювань передаеть-ся на вищий р1вень центрального поста д1агно-стики та мошторингу. Час доставки шформаци вщ перегшного обладнання до АРМ електромехашка становить не бшьше 5 с. Для анал1зу вщмов передбачене програмне забезпечення для протоколювання передвщмовних { вщмов-них сташв вщповщно до необхщних параметр1в
[7, 3]-
Проанатзована система мае велик функщ-ональш можливосп та можливост з д1агносту-вання стану пристро!в автоблокування та автоматично! пере!зно! сигнатзаци, використовуе сучасну елементну базу та використовуеться як основний функщональний вузол для центр1в д1агностування та мошторингу.
Попри це процеси анатзу та вщображення д1агностично! шформаци все-таки потребують удосконалення.
Результати
На основ1 анатзу юнуючих та перспектив-них засоб1в техшчного контролю систем числового кодового автоблокування визначено, що основним недолгом юнуючих систем е недо-статня кшьюсть контрольованих параметр1в, зокрема це стосуеться рейкових кш. Обмеже-шсть шформаци, яка передаеться на станщю, суттево зменшуе ефектившсть контролю, що зводиться практично тшьки до працездатносп пристро!в.
Збшьшення параметр1в (дискретних та ана-логових), що контролюються та передаються на станщю, суттево ускладнюе та збшьшуе вар-тють системи. Розв'язати цю суперечшсть мо-жливо через розробку центратзовано-розпо-дшено! системи з розмщенням АРМ електромехашка на станци { локальних контролер1в на сигнальних точках [13, 14].
З урахуванням неповно! шформаци, що передаеться на центральний комп'ютер, велико! кшькост випадкових фактор1в, що ддать на рейков1 кола та на систему ЧК АБ в цшому, а також розмитосп критерив працездатного
стану окремих вузлiв ЧК АБ система мае вклю-чати штелектуальну пiдтримку прийняття pi-шення в умовах неповно! шформаци та неч№ ких умов.
Наукова новизна та практична значимкть
У pезультатi аналiзу виявлено, що iснуючi засоби техшчного контрою автоблокування не можуть надати повну оцiнку стану пеpегiнних пристро!в сигналiзацiï та блокування, запропо-новано критери до розробки нових систем техшчного дiагностування 3i збшьшеною кшьюс-тю дiагностичноï iнфоpмацiï та ïï автоматичним аналiзом.
Результати анатзу можуть бути викоpистанi на практищ для вибору засобу технiчного контролю пристро1'в автоблокування, а також для подальшо1' розробки систем дiагностування автоблокування, що дозволяе здшснити поступо-вий перехвд вiд планово-профшактично1' моделi обслуговування до обслуговування за фактич-ним станом контрольованих пристро1'в.
Висновки
Iснуючi засоби технiчного контролю при-стро1'в автоблокування не можуть надати повно1' iнфоpмацiï про стан пристро1'в ЧК АБ. У зв'язку з цим виникае необхщшсть розробки нових дiа-гностичних комплексiв з урахуванням розши-рення обсягу дiагностичноï iнфоpмацiï та впро-вадженням функци ïï автоматичного аналiзу з метою автоматичного встановлення ситуацш-ного дiагнозу стану пpистpоïв ЧК АБ та, в pазi виникнення вiдмови, автоматичноï локалiзацiï ïï причини.
СПИСОК ВИКОРИСТАНИХ ДЖЕРЕЛ
1.	Биргер, И. А. Техническая диагностика / И. А. Биргер. - М. : Машиностроение, 1978. -240 с.
2.	Бойник, А. Б. Диагностирование устройств автоматики и агрегатных единиц / под ред. А. Б. Бойника и др. - Х. : ЧП Изд-во «Новое слово», 2008. - 304 с.
3.	Бондаренко, Б. М. Повышение безопасности движения поездов путем усовершенствования процесса диагностики приборов железнодорожной автоматики / Б. М. Бондаренко // Вюн.
Наука та прогрес транспорту. В!сник Дн!пропетровського нацюнального ушверситету з&тзничного транспорту, 2013, вип. 5 (47)
Днiпропетр. нац. ун-ту залiзн. трансп. iм. акад. В. Лазаряна. - Д., 2012. - Вип. 42. - С. 7-11.
4.	Газов, О. К. Системы диспетчерской централизации / О. К. Газов, В. А. Кононов, А. Б. Никитин. - М. : Маршрут, 2002. - 407 с.
5.	Дмитренко, И. Е. Техническая диагностика и автоконтроль систем железнодорожной автоматики и телемеханики / И. Е. Дмитренко. -М. : Транспорт, 1986. - 144 с.
6.	Дунаев, Д. В. Анализ отказов и методы контроля рельсовых цепей / Д. В. Дунаев, И. О. Романцев, В. И. Гаврилюк // Вюн. Дншропетр. нац. ун-ту залiзн. трансп. iм. акад. В. Лазаряна. - Д., 2010. - Вип. 32. - С. 212-217.
7.	Протопов, О. В. Система диагностики технических средств автоблокировки и переездной сигнализации / О. В. Протопов, А. Б. Мозжеви-лов // Автоматика, связь и информатика. -2008. - № 12. - С. 5-8.
8.	Сапожников, В. В. Основы технической диагностики / В. В. Сапожников, Вл. В. Сапожников. - М. : Маршрут, 2004. - 318 с.
9.	Сапожников, Вл. В. Системы диспетчерской централизации / под ред. Вл. В. Сапожникова. - М. : Маршрут, 2002. - 407 с.
А. М. БЕЗНАРЫТНЫЙ1*, В. И. ГАВРИЛЮК1
1 Каф. «Автоматика, телемеханика и связь», Днепропетровский национальный университет железнодорожного транспорта имени академика В. Лазаряна, ул. Лазаряна, 2, Днепропетровск, Украина, 49010, тел +38 (056) 373 15 04, факс +38 (0562) 471 866, эл. почта beznarytny.am@gmail.com
'Каф. «Автоматика, телемеханика и связь», Днепропетровский национальный университет железнодорожного транспорта имени акдемика В. Лазаряна, ул. Лазаряна, 2, Днепропетровск, Украина, 49010, тел +38 (056) 373 15 04
АНАЛИЗ СУЩЕСТВУЮЩИХ И ПЕРСПЕКТИВНЫХ СРЕДСТВ ТЕХНИЧЕСКОГО КОНТРОЛЯ СИСТЕМЫ ЧИСЛОВОЙ КОДОВОЙ АВТОБЛОКИРОВКИ
Цель. Выявление характерных особенностей работы средств технического контроля системы числовой кодовой автоблокировки, их преимуществ и недостатков, анализ возможности их использования для диагностирования состояния устройств автоблокировки и постановка задач для разработки новых диагностических комплексов. Методика. Для достижения поставленной цели были использованы теоретико-аналитический метод и метод функционального анализа. Результаты. Анализ существующих и перспективных средств удаленного контроля и технического диагностирования устройств автоблокировки показал, что существующие системы имеют недостаточную информативность, направлены в основном на контроль дискретных параметров, что, в свою очередь, не позволяет построить на их основе подсистемы поддержки принятия решений. Предложено при разработке новых систем технического диагностирования использовать централизованно-распределенный принцип обработки диагностических данных, включить в их состав подсистему поддержки принятия решений, что позволит уменьшить количество трудозатрат на обслуживание устройств автоблокировки и сократить время на восстановление после возникновения повреждения. Научная новизна. В результате исследований выявлено, что существующие средства технического контроля автоблокировки не могут предоставить полную оценку состояния перегонных устройств сигнализации и блокировки, предложены критерии для разработки новых систем технического диагностирования с увеличением количества диагностической информации и ее автоматическим анализом. Практическая значимость. Результаты анализа могут быть использованы на практике для выбора средства технического контроля устройств автобло-
10.	Сфарбаков, А. М. Основы технической диагностики / А. М. Сфарбаков, А. В. Лукьянов, С. В. Пахомов. - Иркутск : Изд-во ИрГУПС, 2006. - 216 с.
11.	Федорчук, А. Е. Новые информационные технологии: автоматизация технического диагностирования и мониторинга устройств ЖАТ / А. Е. Федорчук, А. А. Сепетий, В. Н. Иванченко. - Ростов : Изд-во РостГУПС, 2008. - 443 с.
12.	Шаблин, А. Н. Центр технической диагностики и мониторинга на Октябрьской дороге / А. Н. Шаблин, Г. Ф. Наносов, П. А. Капуста // Автоматика, связь и информатика. - 2007. -№ 5. - С. 23-25.
13.	Mascardi, V. Monitoring and diagnosis railway signaling / V. Mascardi, D. Briola, M. Martelli // Intern. Workshop on Computational Intelligence in Security for Information Systems. - Genova : University of Genova, 2008. - P. 23-31.
14.	Zoetewij, P. Automated fault diagnosis in embedded systems / P. Zoetewij, J. Pietersma, R. Abreu // Proc. of the 2nd IEEE Intern. Conf. on Secure Systems Integration and Reliability Improvement. - Yokohama : IEEE, 2008. -P. 103-110.
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 5 (47)
кировки, а также при дальнейшей разработке систем диагностирования автоблокировки, что позволяет провести постепенный переход от планово-профилактической модели обслуживания к обслуживанию по фактическому состоянию контролируемых устройств.
Ключевые слова: автоблокировка; системы диспетчерского контроля; диагностирование; мониторинг; аппаратно-программные средства; предотказное состояние; объекты диагностирования
А. М. BEZNARYTNYY1*, V. I. GAVRILYUK1
1 Dep. «Automation, Telemechanics and Communications», Dnipropetrovsk National University of Railway Transport named after Academician V. Lazaryan, Lazaryan St., 2, Dnipropetrovsk, Ukraine, 49010, tel +38 (056) 373 15 04, fax +38 (0562) 471 866, e-mail beznarytny.am@gmail.com.
'Dep. «Automation, Telemechanics and Communications», Dnipropetrovsk National University of Railway Transport named after Academician V. Lazaryan, Lazaryan St., 2, Dnipropetrovsk, Ukraine, 49010, tel +38 (056) 373 15 04
ANALYSIS OF EXISTING AND PROSPECTIVE TECHNICAL CONTROL SYSTEMS OF NUMERIC CODES AUTOMATIC BLOCKING
Purpose. To identify the characteristic features of the engineering control measures system of automatic block of numeric code, identifying their advantages and disadvantages, to analyze the possibility of their use in the problems of diagnosing status of the devices automatic block and setting targets for the development of new diagnostic systems. Methodology. In order to achieve targets the objective theoretical and analytical method and the method of functional analysis have been used. Findings. The analysis of existing and future facilities of the remote control and diagnostics automatic block devices had shown that the existing systems of diagnosis were not sufficiently informative, designed primarily to control the discrete parameters, which in turn did not allow them to construct a decision support subsystem. In developing of new systems of technical diagnostics it was proposed to use the principle of centralized distributed processing of diagnostic data, to include a subsystem support decision-making in to the diagnostics system, it will reduce the amount of work to maintain the devices blocking and reduce recovery time after the occurrence injury. Originality. As a result, the currently existing engineering controls facilities of automatic block can not provide a full assessment of the state distillation alarms and locks. Criteria for the development of new systems of technical diagnostics with increasing amounts of diagnostic information and its automatic analysis were proposed. Practical value. These results of the analysis can be used in practice in order to select the technical control of automatic block devices, as well as the further development of diagnostic systems automatic block that allows for a gradual transition from a planned preventive maintenance service model to the actual state of the monitored devices.
Keywords: automatic block systems; dispatcher control; diagnosis; monitoring; hardware and software; state before failure; objects of diagnosis
REFERENCES
1.	Birger I.A. Tekhnicheskaya diagnostika [Technical diagnostics]. Moscow, Mashinostroeniye Publ., 1978, 240 p.
2.	Boynik A.B. Diagnostirovaniye ustroystv avtomatiki i agregatnykh yedinits [Diagnosis of automatic devices and modular units]. ChP Izd-vo «Novoye slovo», 2008. 304 p.
3.	Bondarenko B.M. Povysheniye bezopasnosti dvizheniya poyezdov putem usovershenstvovaniya protsessa diagnostiki priborov zheleznodorozhnoy avtomatiki [Improving of trains movement safety with the way of process enhancement of railway automation diagnosis devices]. VisnykDnipropetrovskoho natsionalnoho uni-versytetu zaliznychnoho transportu imeni akademika V. Lazariana [Bulletin of Dniproperovsk National University named after Academician V. Lazaryan], 2012, issue 42, pp. 7-11.
4.	Gazov O.K., Kononov V.A., Nikitin A.B. Sistemy dispetcherskoy tsentralizatsii [Centralized dispatching systems]. Moscow, Marshrut Publ., 2002. 407 p.
5.	Dmitrenko I.Ye. Tekhnicheskaya diagnostika i avtokontrol sistem zheleznodorozhnoy avtomatiki i telemek-haniki [Technical diagnostics and auto control of railway automation and telemechanics systems]. Moscow, Transport Publ., 1986. 144 p.
6.	Dunayev D.V., Romantsev I.O., Gavrilyuk V.I. Analiz otkazov i metody kontrolya relsovykh tsepey [Failure analysis techniques and controlled the middle of track circuits]. Visnyk Dnipropetrovskoho natsionalnoho uni-
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2013, вип. 5 (47)
versytetu zaliznychnoho transportu imeni akademika V. Lazariana [Bulletin of Dniproperovsk National University named after Academician V. Lazaryan], 2010, issue 32, pp. 212-217.
7.	Protopov O.V., Mozzhevilov A.B. Sistema diagnostiki tekhnicheskikh sredstv avtoblokirovki i pereyezdnoy signalizatsii [Diagnosis technical means of blocking and level crossing signalization]. Avtomatika, svyaz i in-formatika - Automation, communications and computer science, 2008, no. 12, pp. 5-8.
8.	Sapozhnikov V.V., Sapozhnikov Vl.V. Osnovy tekhnicheskoy diagnostiki [Basics of technical diagnostic]. Moscow, Marshrut Publ., 2004. 318 p.
9.	Sapozhnikov Vl.V. Sistemy dispetcherskoy tsentralizatsii [Systems of centralized traffic control]. Moscow, Marshrut Publ., 2002. 407 p.
10.	Sfarbakov A.M., Lukyanov A.V., Pakhomov S.V. Osnovy tekhnicheskoy diagnostiki [Basics of technical diagnostic]. Irkutsk, Izd-vo IrGUPS Publ., 2006. 216 p.
11.	Fedorchuk A.Ye., Sepetiy A.A., Ivanchenko V.N. Novyye informatsionnyye tekhnologii: avtomatizatsiya tekhnicheskogo diagnostirovaniya i monitoringa ustroystv ZhAT [New information technology: the automation of technical diagnostics and monitoring devices]. Rostov, Izd-vo RostGUPS Publ., 2008. 443 p.
12.	Shablin A.N., Nanosov G.F., Kapusta P.A. Tsentr tekhnicheskoy diagnostiki i monitoringa na Oktyabrskoy doroge [Center of technical diagnostics and monitoring on in the October road]. Avtomatika, svyaz i infor-matika - Automation, Communications and Informatics, 2007, no. 5, pp. 23-25.
13.	Mascardi V., Briola D., Martelli M. Monitoring and diagnosis railway signaling. International Workshop on Computational Intelligence in Security for Information Systems. Genova, 2008, pp. 23-31.
14.	Zoetewij P., Pietersma J., Abreu R. Automated fault diagnosis in embedded systems. Proc. of the 2nd IEEE Intern. Conf. on Secure Systems Integration and Reliability Improvement. Yokohama, IEEE Publ., 2008, pp. 103-110.
Стаття рекомендована до публ^кацИ д.ф!з.-мат.н., проф. О. В. Коваленком (Украта); к.т.н,
доц. О. М. Самковим (Украта)
Надшшла до редколегп 02.09.2013
Прийнята до друку 10.09.2013
      
      
    
  



=====

        


﻿Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2015, № 1 (55)
УДК 004.7-047.58:656.2
В. М. ПАХОМОВА1*
1 Каф. «Електронш обчислювальнi машини», Дншропетровський нацюнальний ушверситет з^зничного транспорту iMem академiка В. Лазаряна, вул. Лазаряна, 2, Дшпропетровськ, Укра!на, 49010, тел. +38 (056) 373 15 89, ел. пошта viknik.p1988@mail.ru, ORCID 0000-0001-8346-0405
ДОСЛ1ДЖЕННЯ 1НЖИН1РИНГУ ТРАФ1КА В КОМП'ЮТЕРН1Й МЕРЕЖ1 УКРЗАЛ1ЗНИЦ1 ЗА ТЕХНОЛОГИЮ MPLS TE
Мета. На залiзничному транспорт Укра1ни необхщним е використання комп'ютерних мереж рiзних тeхнологiй: Ethernet, Token Bus, Token Ring, FDDI та шших. В об'еднаннях комп'ютерних мереж на з^зни-чному транспортi доцшьним е використання технологи швидко! комутаци пакeтiв у багатопротокольних мережах MPLS (Multiprotocol Label Switching), що заснована на використанш мiток. Мeрeжi з комутащею пакeтiв повиннi передавати рiзнi види трафiку iз заданою яшстю обслуговування. Метою дослiджeня е роз-робка методики визначення послiдовностi призначення потокiв для розглянутого фрагменту комп'ютерно! мeрeжi Укрзалiзницi (УЗ). Методика. При оптимiзацii управлiння трафiком в мережах MPLS важливу роль вiдiграе технолопя iнжинiрингу трафiка (Traffic Engineering, TE). Основний мехашзм TE в MPLS - використання односпрямованих тунeлiв (MPLS TE tunnel) для завдання шляху проходження певного трафiку. Скла-дена математична модель задачi шжишрингу трафiка в комп'ютeрнiй мeрeжi УЗ за технолопею MPLS TE. Комп'ютерна мережа УЗ представлена зваженим орiентованим графом, вершинами якого е маршрутизатори комп'ютерно! мeрeжi, а кожна дуга моделюе зв'язок мiж вузлами. В якосл критeрiю оптимiзацii виступае мшмальне значення максимального коeфiцiенту використання ТЕ-тунeлiв. Результати. Знайдено шiсть варiантiв призначення потошв, визначена рацiональна послiдовнiсть потошв, при якiй значення максимального коефщенту використання ТЕ-тунeлiв розглянутого спрощеного фрагменту комп'ютерно! мeрeжi УЗ не перевищуе 0,5. Наукова новизна. Запропоновано методику рiшeння задачi iнжинiрингу трафша в бага-топротокольнiй комп'ютeрнiй мереж! УЗ за технолопею MPLS ТЕ; для рiзних клаав будуеться свш шлях у залeжностi в!д смуги пропускання та завантаження каналу. Практична значимкть. Встановлена можли-вють визначення значення максимального коефщента використання ТЕ-тунетв у комп'ютерних мережах УЗ на основ! розроблено! програмно! модeлi «TraffEng». Вхвдт параметри модeлi: шльшсть маршрутизато-р!в, пропускна здатнiсть каналiв, шльшсть поток1в, середня швидк1сть поток1в. В якосп результату роботи модeлi «TraffEng» подаються варiанти вибору ТЕ-тунeлiв вщповщними значеннями максимальних коефь щенпв !х використання.
Ключовi слова: технолопя MPLS ТЕ; шжишринг трафiку; швидшсть потоку; пропускна здатнiсть; ко-ефщент використання; ТЕ-тунель
BcTyn
CborogHi Ha 3ani3HHHHoMy TpaHcnopT YKpai-hh 6e3nepenHa HaaBHicTb KoMn'roTepHHx Mepe^ pi3HHx TexHonoriM (Ethernet, Token Bus, Token Ring, FDDI Ta iHmi) [7-9], TOMy b CKnageHHx Me-pe^ax go^nbHHM e BHKopucraHHa TexHonorii mBugKOi KOMyTa^i' naKeTiB y 6araronpoTOKonb-hhx Mepe^ax MPLS (Multiprotocol Label Switching), aKa 6a3yeTbca Ha BHKopHcraHHi MiTOK. KpiM Toro, Mepe^i 3 KOMyTa^ero naKeTiB noBHHHi nepegaBara pi3Hi Bugu Tpa^iKa i3 3agaHoro aKicrro o6cnyroByBaHHa, MaKCHManbHo BHKopucTOByroHH Mo^nHBocTi CBoi'x pecypciB [1-5]. OgHaK, gna ubo-ro i'M noTpi6Ho 3MiHHTH geaKi nigxogu go Bu6opy MapmpyTiB, ^o cranH B^e Tpagu^HHHMH. Ochob-hhm пpннцнпoм po6oTH npoToKoniB MapmpyTH3a-
цii в мережах з комутацieю пакетiв ось вже дов-гий час е вибiр маршруту на основi топологii мереж без урахування iнформацii про ii поточне завантаження. Для кожно' пари «адреса джерела - адреса призначення» таю протоколи вибира-ють единий маршрут [6], не беручи до уваги ш-формацшш потоки, що протшають через мережу. У результат всi потоки мiж парами кшцевих вузлiв мереж йдуть за найкоротшим маршрутом (вiдповiдно до деякоi метрики).
Мета
Розробити методику визначення послщов-носп призначення потокiв для розглянутого фрагмента комп'ютерноi мереж УЗ.
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2015, № 1 (55)
Методика
У технологи MPLS будь-який переданий пакет асощюеться з тим чи шшим класом мереж-ного piBM (Forwarding Equivalence Class, FEC) [10-13], кожен з яких щентифшуеться певною мiткою. Значення мiтки ушкально лише для д> лянки шляху мiж сусiднiми вузлами мереж MPLS, яю називаються маршрутизаторами з ко-мутацieю по мiтках (Label Switching Router, LSR) [6]. Розподш мгток мiж LSR призводить до встановлення всерединi домену MPLS шляхiв з комутащею по мiтках (Label Switching Path, LSP). Уа функцн класифкацп пакетiв за рiзни-ми FEC, а також реалiзацiю таких додаткових сервiсiв, як фiльтрацiя, явна маршрутизащя, ви-рiвнювання навантаження та керування траф> ком беруть на себе граничш LSR [6]. Кожен з клашв FEC обробляеться окремо вщ iнших. Оскiльки для рiзних клаав будуеться свiй шлях залежно вщ смуги пропускання та завантаження каналу, то пакети, що приходять на один маршрутизатор, але мають рiзний клас обслуговуван-ня, шдуть по рiзних шляхах [3].
При оптимiзацiI управлiння трафiком в мережах MPLS важливу роль вдаграе технологiя iнжинiрингу трафiка (Traffic Engineering, TE) [6], ефективнiсть яко1 шдтверджуеться тим, що багато мережних засобiв управлiння трафiком удосконалюються на II принципах, шдтвер-дженням тому е протоколи резервування ресур-сiв RSVP-TE, LDP-TE, протоколи маршрутиза-цл IS-IS-TE, OSPF-TE. Можливосп управлiння трафiком в мережi MPLS реалiзовуються за до-помогою технологiI TE за рахунок вибору оптимального маршруту проходження трафша, використання процедур розподiлу завантаження мереж та балансування трафiка [1-4]. Осно-вний механiзм TE в MPLS - використання од-носпрямованих тунелiв (MPLS TE tunnel) для завдання шляху проходження певного трафша, оскiльки тунелi односпрямованi, то зворотний шлях може бути зовшм шшим [2].
У технологи MPLS ТЕ шляхи LSP прийнято називати ТЕ-тунелями, що прокладаються вщ-повiдно з техшкою маршрутизацiI вiд джерела, коли централiзовано задаються промiжнi вузли маршруту. 1шщатором завдання маршруту для ТЕ-тунелю виступае початковий вузол тунелю, а розраховуватися такий маршрут може як цим же початковим вузлом, так i зовшшньою, сто-совно мережi, програмною системою або адм>
шстратором. MPLS ТЕ шдтримуе тунелi двох типiв [6]: суворий ТЕ-тунель (визначае всi про-мiжнi вузли мiж двома граничними пристроя-ми); вiльний ТЕ-тунель (визначае тшьки части-ну промiжних вузлiв вiд одного граничного пристрою до шшого, а iншi промiжнi вузли ви-бираються пристроем LSR самостшно).
У цiй роботi складена математична модель задачi iнжинiрингу трафiка в комп'ютернш мережi УЗ за технолопею MPLS ТЕ, як крите-рш оптимiзацii виступае мiнiмальне значення максимального коефщенту використання ТЕ-тунелiв.
Постановка задач1. Комп'ютерна мережа УЗ може бути подана зваженим орiентованим графом G = (R, L), де R - множина вершин графа, кшьюсть яких дорiвнюе N, причому кожна вершина моделюе собою вузол (маршрутизатор) комп'ютерноi мережц L - множина дуг графа, кожна дуга моделюе зв'язок мiж вузлами, кшь-кiсть дуг графа дорiвнюе M. Розглянутий спро-щений фрагмент комп'ютерноi мережi УЗ та наведений на рис. 1. Кожному ребру графа при-своюеться певна вага, яка вщповщае пропускнш спроможностi (максимальний обсяг даних, пе-реданий мережею в одиницю часу):
С = {cj},
(1)
де cij - пропускна спроможшсть каналу мiж i та j
вузлами комп'ютерноi мережi УЗ. Обмеженнями, що поданi у виглядi рiвнянь, виступають умови зберiгання потоку в кожному вузлi мережi, якi для структури комп'ютерноi мережi УЗ, що зо-бражена на рис. 1, мають такий вигляд:
1,2
-X = bs • 1,4 '
X1,2 + X2,3 + X2,6 = 0;
—X2,3 + X3,10 = 0; X1 4 + X4 5 0;
- X
4,5 1 X5,6 = 0;
X5,6 X2,6 + X6,7 = 0;
X7,8 + X8,9 = 0;
—X8,9 + X9,10 = 0;
X3,10 X9,10 = b ;
(2)
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2015, № 1 (55)
Рис. 1. Спрощений фрагмент комп'ютерно! мереж1 УЗ Fig. 1. A simplified fragment of a computer network of UZ
де xij - штенсивнють трафша, що передаеться
в мереж м1ж i-м та j-м вузлами; bs - середня швидкють s-потоку трафша м1ж вузлами 1 i 10 в комп'ютернiй мережi УЗ (Киевом i Донець-ком). Повинно виповнюватися важливе обме-ження - середня швидкють потоку трафша не мае перевищувати пропускну спроможнють ТЕ-тунелю, через який проходить s-поток:
Вибiр ТЕ-тунелю визначаеться як K = max {ks j,
(5)
bs < cl
(3)
де bs - середня швидкють s-потоку трафiка;
cl - пропускна спроможнють ТЕ-тунелю. Не-виконання такого обмеження неприпустимо, бо iнакше неможливо пропустити потiк трафiка по тунелю.
Коефщент використання ресурсiв обчислю-еться за формулою
де Ks = ^ Ц , крiм того, Ks < 0,65 ; K - макси-
мальний коефiцiент використання ТЕ-тунелю.
Щд час вирiшення задачi шжишрингу тра-фiка необхiдно знайти рацюнальне рiшення -максимальний коефiцiент використання ТЕ-тунелю (за вшма можливими варiантами посл> довностi призначення потоюв) повинен бути мiнiмальний
min
{K j .
(6)
ks = kj =
bs
(4)
де kS - коефiцiент використання (i, j)-го каналу
s-м потоком; bs - середня швидкiсть s-го потоку трафша; cij - пропускна спроможнють (i, j)-ro
каналу зв'язку.
Программа модель. В середовищi Borland Delphi розроблена модель «TraffEng», що вщо-бражае залежнiсть якостi рiшення задачi шжи-нiрингу трафiка вiд послiдовностi призначення потокiв. Вхщш данi моделi: кiлькiсть марш-рутизаторiв; пропускна здатнiсть каналiв (Мбiт/с); кшькють потокiв; середня швидкiсть потокiв (Мб^/с). Пiсля завдання кiлькостi ма-ршрутизаторiв у вiкнi «Топологiя мережЪ> з'явиться вщповщне вiдображення. Коли всi параметри вказаш, слiд нажати кнопку «Розра-хувати коефiцiенти навантаження каналiв».
C
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2015, № 1 (55)
Рис. 2 Вихщна форма програмно! моделi «TraffEng» Fig. 2. The original form of software models «TraffEng»
Пюля чого у вщповщному полi вiдображаeться iнформацiя щодо потоюв, коефiцieнтiв викорис-тання кожного каналу зв'язку, задiяного потоком, та рекомендацп («можливо»/«неможливо») до визначення маршруту потокiв. Для демон-страцп роботи моделi «TraffEng» нехай кшькють маршрутизаторiв складае 5, кiлькiсть потоюв дорiвнюe 3; iншi вхiднi дат та результат роботи моделi наведено на рис. 2.
У вшонщ «Коефщенти навантаження кана-лГв» надано варiанти завдання тунелiв. Варiант 1 передбачае, що для потокiв 1, 2 обрано маршрут Я1-К2-Ю (верхня частина мереж1), а для потоку 3 - маршрут Я1-К5-Я4-К3; коефщент викорис-тання складае 0,6. Варiант 2 передбачае, що потiк 1 пройде маршрутом Я1-К5-Я4-К3 (нижня частина мереж1), а потоки 2, 3 маршрутом Я1-К2-И3; коефiцiент використання складае 0,5. Найкращим варiантом е варiант з найменшим значенням кое-фiцiента використання, тобто варiант 2.
Результати
Ефективнють використання ТЕ-тунелiв ви-значаеться послiдовнiстю призначення потокiв, що тдвищуе ефективнiсть само! комп'ютерно!
мережi; це можливо показати на простому приклада Розглянемо дшянку MPLS-мережi, що зображено на рис. 3 (пропускнi спроможност каналiв представленi в Мбiт/с).
Результати дослщження залежностi якостi рь шення задачi ТЕ вщ послiдовностi призначення трьох потоюв: потiк 1, середня швидюсть якого Ь1 = 0,5 Мбгг/с; потiк 2, середня швидюсть якого Ь2 = 0,4 Мбгг/с; потiк 3, середня швидюсть якого Ь3 = 0,3 Мбгт/с наведет в табл. 1.
Так, наприклад, у варiантi 1 ршення знай-дено при такiй послщовносп призначення потоюв: 1, 2, 3. Для першого потоку обраний шлях 2 ^ 3 ^ 10, в цьому випадку коефщГент використання ТЕ-тунелю складае 0,5/1,5 = 0,33. Для другого потоку також обраний шлях 2 ^ 3 ^ 10, результуючий коефiцiент використання ТЕ-тунелю виявляеться рГвним 0,33 + + 0,4/1,5 = 0,6. Третш потш прямуе по шляху 2 ^ 6 ^ 7 ^ 8 ^ 9 ^ 10 г завантажуе ресурси каналiв 2 ^ 6, 6 ^ 7, 7 ^ 8, 8 ^ 9 Г 9 ^ 10 на 0,3/1. Ршення 1 можна назвати задовшьним, осюльки максимальний коефщГент використан-ня досягае 0,6.
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету залiзничного транспорту, 2015, № 1 (55)
Рис. 3. Ддлянка мереж LSR1-LSR7 для визначення тунел1в Fig. 3. Section of the network LSR1-LSR7 for the determination of tunnels
Таблиця 1
Яккть piliiciiiiu задачi TE вiд послiдовностi призначення потошв
Table 1
The quality of TE problem solutions from sequences of destination flows
Послщовшсть	Середня	Коефщент використання ТБ-тунелш		Максимальний
BapiaHT	призначення	швидкють	через вузли мережг		коефщент
потокв	потоку, M6im/c	2 ^ 3 ^ 10	2 ^ 6 ^ 7 ^ 8 ^ 9 ^ 10	використання
1	0,5	0,33
1	2	0,4	0,6		0,6
3	0,3		0,3
1	0,5	0,33
2	3	0,3	0,53		0,53
2	0,4		0,4
2	0,4	0,27
3	1	0,5	0,6		0,6
3	0,3		0,3
2	0,4	0,27
4	3	0,3	0,47		0,5
1	0,5		0,5
Наука та прогрес транспорту. Вкник Дншропетровоького нацюнального ушвероитету залiзничного транспорту, 2015, № 1 (55)
Заынчення табл. 1
Послщовшсть	Середня	Коефщент використання ТБ-тунел1в		Максимальний
Вар1ант	призначення	швидюсть	через вузли мереж!:		коефщент
потокв	потоку, M6im/c	2 ^ 3 ^ 10	2 ^ 6 ^ 7 ^ 8 ^ 9 ^ 10	використання
3	0,3	0,2
5	1	0,5	0,53		0,53
2	0,4		0,4
3	0,3	0,2
6	2	0,4	0,47		0,5
1	0,5		0,5
Мал. 4. Найкращий BapiaHT визначення тунелiв для дмнки MPLS-мереж на LSR1-LSR7
Fig. 4 The best option for the tunnels definitions for site MPLS of network on LSR1-LSR7
Однак юнуе кращий cnoci6, наведений у ва- бшьш р1вном1рне завантаження ресурав, а мак-р1ант1 4. Тут потоки 2 i 3 спрямоваш по верх- симальний коефiцiент використання вшх ресур-ньому шляху 2 ^ 3 ^ 10, а потш 1 - по ниж- сiв мережi не перевищуе 0,5.
ньому (2 ^ 6 ^ 7
10) шляху. Для Цей вар1ант або вар1ант 6, що отримаш при
другого потоку ресурси верхнього ТЕ-тунелю	одночасному розгляд1 boix трьох поток1в та зо-
виявляються завантаженими на 0,4/1,5 = 0,27,	бражеш на рис. 4, надають мммальне значення
для третього потоку - 0,27 + 0,3/1,5 = 0,47,	максимального коефщента використання. а для першого потоку завантаження нижнього ТЕ-тунелю на 0,5/1 = 0,5; тобто в наявносп
Наука та прогрес транспорту. BicHHK Дншропетровського нацюнального ушверситету залiзничного транспорту, 2015, № 1 (55)
Наукова новизна та практична значимкть
Запропоновано методику виршення задачi iнжинiрингу трафша в комп'ютернiй мережi УЗ за технолопею MPLS ТЕ. Як критерш оптим> зацп виступае мiнiмальне значення максимального коефiцiента використання ТЕ-тунелiв. На оcновi розроблено! програмно! моделi можли-ве визначення значень максимальних коеф> цiентiв використання ТЕ-тунелiв в комп'ютер-них мережах УЗ.
Висновки
1.	У складених комп'ютерних мережах на залiзничному транcпортi доцiльним е використання технологи MPLS, що базуеться на вико-риcтаннi мггок. Можливоcтi управлiння траф> ком в мереж MPLS реалiзовуютьcя за допомо-гою технологи iнжинiрингу трафiка, основний мехашзм якого використання односпрямованих тунелiв (MPLS TE tunnel). Складена математи-чна модель задачi iнжинiрингу трафша в ком-п'ютернiй мереж УЗ.
2.	Для вщображення залежноcтi якост ви-рiшення задачi iнжинiрингу трафша вiд посл> довноcтi призначення потоюв в комп'ютернiй мереж УЗ розроблено в Delphi програмну модель «TraffEng». Вхiднi параметри моделi: кшь-кicть маршрутизаторiв та пропуски спромож-ноcтi каналiв зв'язку, кшьюсть та середня шви-дюсть потокiв; як результат роботи моделi по-даються варiанти вибору ТЕ-тунелiв з вщповщ-ними значеннями максимальних коефшдент1в використання.
3.	Виконано доcлiдження залежносп якоcтi вирiшення задачi iнжинiрингу трафша MPLS ТЕ вщ поcлiдовноcтi призначення потоюв для спро-щеного фрагмента комп'ютерно! мереж1 УЗ; значення максимального коефщента використання тунелiв найкращого варiанта не перевищуе 0,5.
СПИСОК ВИКОРИСТАНИХ ДЖЕРЕЛ
1.	Будылдина, Н. В. Телекоммуникационные сети с многопротокольной коммутацией по меткам. Построение и оптимизация : моногр. / Н. В. Будылдина, В. П. Шувалов. - Екатеринбург, - 2006. - 287 с.
2.	Гольдштейн, А. Б. Механизм эффективного тун-нелирования в сети MPLS / А. Б. Гольдштейн. -Вестн. связи. - 2004. - № 2. - С. 48-54.
3.	Зайченко, Ю. П. Задача распределения потоков различных классов в сети с технологией MPLS / Ю. П. Зайченко, А. А. М. Шарадка. - Вюн. НТУУ «КП1». - Сер. 1нформатика, управлшня та обчислювальна техшка. - 2005. - № 43. -С. 113-123.
4.	Кучерявый, Е. А. Управление трафиком и качество обслуживания в сети Интернет / Е. А. Кучерявый. - Санкт-Петербург : Наука и техника, - 2004. - 336 с.
5.	Олвейн, В. Структура и реализация современной технологии MPLS / В. Олвейн. - Санкт-Петербург : Питер, 2004. - 480 с.
6.	Олифер, В. Г. Компьютерные сети. Принципы, технологии, протоколы / В. Г. Олифер, Н. А. Олифер. - Санкт-Петербург : Питер, 2010. - 944 с.
7.	Пахомова, В. М. Лопчна структуризащя шфо-рмацшних мереж залiзничного транспорту на оcновi комутаторiв Ethernet / В. М. Пахомова, В. В. Повод // Зб. наук. пр. Дон. ш.-ту залiзн. трансп. - 2012. - Вип. 29. - С. 11-18.
8.	Пахомова, В. М. Можливють використання технологи 100VG-AnyLAN в шформацшних системах залiзничного транспорту / В. М. Пахомова, Т. I. Скабалланович, Д. А. Ляхов // Вюн. Дншропетр. нац. ун-ту залiзн. трансп. iм. акад. В. Лазаряна. - Дшпропетровськ, 2012. -Вип. 2 (41). - С. 199-204.
9.	Пахомова, В. М. Модифшована iмiтацiйна модель локально! мережi за маркерним методом доступу до шини / В. М. Пахомова, Л. В. Стри-булевич // Наука та прогрес транспорту. Вюн. Дншропетр. нац. ун-ту залiзн. трансп. - 2013. -№. 4 (46). - С. 90-98.
10.	Столингс, В. Современные компьютерные сети / В. Столингс. - Санкт-Петербург : Питер, 2003. - 783 с.
11.	Хандецький, В. С. Ефективнють обмшу марш-рутною шформащею в iерархiчних структурах OSPF-мереж / В. С. Хандецький, В. М. Гри-гор'ев, П. В. Хандецький.// Сучасш проблеми i досягнення в галузi телекомушкацш та шфо-рмац. технологш (19.09-21.09. 2012) : тез. доп. VI мiжн. наук.-практ. конф. - Запорiжжя. -2012. - С. 280-281.
12.	Fiche, G. The Tunneling Technique and the Tandem Queue Effect / G. Fiche, Y. Veillard // In International Workshop on Future Service, Alcatel, France 2000.
13.	Le Gall, P. Single server queuing networks with varying service times and renewal input / P. Le Gall. // J. of Appl. Mathematics and Stochastic Analysis. - 2000. - № 13. - P. 429-450. doi: 10.1155/s1048953300000368.
Наука та прогрес транспорту. BicHHK Дншропетровського нацюнального ушверситету залiзничного транспорту, 2015, № 1 (55)
МОДЕЛЮВАННЯ ЗАДАЧ ТРАНСПОРТУ ТА ЕКОНОМ1КИ
В. Н. ПАХОМОВА1*
1 Каф. «Электронные вычислительные машины», Днепропетровский национальный университет железнодорожного транспорта имени академика В. Лазаряна, ул. Лазаряна, 2, Днепропетровск, Украина, 49010, тел. +38 (056) 373 15 89, эл. почта viknik.p1988@mail.ru, ORCID 0000-0001-8346-0405
ИССЛЕДОВАНИЕ ИНЖИНИРИНГА ТРАФИКА В КОМПЬЮТЕРНОЙ СЕТИ УКРЗАЛИЗНЫЦИ ТЕХНОЛОГИИ MPLS TE
Цель. На железнодорожном транспорте Украины необходимым является применение компьютерных сетей различных технологий: Ethernet, Token Bus, Token Ring, FDDI и других. В объединенных компьютерных сетях на железнодорожном транспорте рациональным является использование технологии коммутации пакетов в многопротокольных сетях MPLS (Multiprotocol Label Switching), которая основана на использовании меток. Сети с коммутацией пакетов должны передавать различные виды трафика с заданным качеством обслуживания. Целью исследования является разработка методики определения последовательности назначения потоков для рассмотренного фрагмента компьютерной сети Укрзализныци (УЗ). Методика. При оптимизации управления трафиком в сетях MPLS важную роль оказывает технология инжиниринга трафика (Traffic Engineering, TE). Основной механизм TE в MPLS - использование однонаправленных туннелей (MPLS TE tunnel) для задания пути прохождения определенного трафика. Составлена математическая модель задачи инжиниринга трафика в компьютерной сети УЗ технологии MPLS TE. Компьютерная сеть УЗ представлена ориентированным графом, вершинами которого являются маршрутизаторы компьютерной сети, а каждая дуга моделирует связь между узлами. В качестве критерия оптимизации выступает минимальное значение максимального коэффициента использования ТЕ-туннелей. Результаты. Определены шесть вариантов назначения потоков; найдена рациональная последовательность потоков, при которой значение максимального коэффициента использования ТЕ-туннелей рассмотренного упрощенного фрагмента компьютерной сети УЗ не превышает 0,5. Научная новизна. Предложена методика решения задачи инжиниринга трафика в многопротокольной компьютерной сети УЗ технологии MPLS ТЕ; для разных классов прокладывается свой путь в зависимости от полосы пропускания и загрузки канала. Практическая значимость. Установлена возможность определения значений максимальных коэффициентов использования ТЕ-туннелей в компьютерных сетях УЗ на основе разработанной программной модели «TraffEng». Входные параметры модели: количество маршрутизаторов, пропускная способность каналов, количество потоков, средняя скорость потоков. В качестве результата работы модели «TraffEng» представляются варианты выбора ТЕ-туннелей с соответствующими значениями максимальных коэффициентов их использования.
Ключевые слова: технология MPLS ТЕ; инжиниринг трафика; скорость потока; пропускная способность; коэффициент использования; ТЕ-туннель
V. N. PAKHOMOVА1*
1 Dep. «Electronic Computing Machines», Dnipropetrovsk National University of Railway Transport named after Academician V. Lazaryan, Lazaryan St., 2, Dnipropetrovsk, Ukraine, 49010, tel. +38 (056) 373 15 89, e-mail viknik.p1988@mail.ru, ORCID 0000-0001-8346-0405
RESEARCH OF ENGINEERING TRAFFIC IN COMPUTER OF UKRZALIZNYTSIA NETWORK USING MPLS TE TECHNOLOGY
Purpose. In railway transport of Ukraine one requires the use of computer networks of different technologies: Ethernet, Token Bus, Token Ring, FDDI and others. In combined computer networks on the railway transport it is necessary to use packet switching technology in multiprotocol networks MPLS (MultiProtocol Label Switching) more effectively. They are based on the use of tags. Packet network must transmit different types of traffic with a given quality of service. The purpose of the research is development a methodology for determining the sequence of destination flows for the considered fragment of computer network of UZ. Methodology. When optimizing traffic management in MPLS networks has the important role of technology traffic engineering (Traffic Engineering, TE). The main mechanism of TE in MPLS is the use of unidirectional tunnels (MPLS TE tunnel) to specify the path of the specified traffic. The mathematical model of the problem of traffic engineering in computer network of UZ technology MPLS TE was made. Computer UZ network is represented with the directed graph, their vertices are routers of computer network, and
Наука та прогрес транспорту. Вкник Дншропетровського нацюнального ушверситету зaлiзничного транспорту, 2015, № 1 (55)
each arc simulates communication between nodes. As an optimization criterion serves the minimum value of the maximum utilization of the TE-tunnel. Findings. The six options destination flows were determined; rational sequence of flows was found, at which the maximum utilization of TE-tunnels considered a simplified fragment of a computer UZ network does not exceed 0.5. Originality. The method of solving the problem of traffic engineering in Multiprotocol network UZ technology MPLS TE was proposed; for different classes its own way is laid, depending on the bandwidth and channel loading. Practical value. Ability to determine the values of the maximum coefficient of use of TE-tunnels in computer UZ networks based on developed software model «TrafEng». The input parameters of the model: number of routers, channel capacity, the number of streams, the average flow velocity. As a result of the model «TrafEng» choices variants of TE-tunnels with the corresponding values of the maximum coefficient of their use are presented.
Keywords: MPLS TE technology; traffic engineering; flow rate; bandwidth utilization; TE-tunnel
REFERENCES
1.	Budyldina N.V., Shuvalov V.P Telekommunikatsionnyye seti s mnogoprotokolnoy kommutatsiey po metkam. Postroeniye i optimizatsiya [Telecommunication network with multiprotocol switched labels. Design and optimization]. Ekaterinburg Publ., 2006. 287 p.
2.	Goldshteyn A.B. Mekhanizm effektivnogo tunnelirovaniya v seti MPLS [The mechanism of effective tunneling in MPLS network]. Vestnik svyazi - Bulletin of communication, 2004, no. 2, 12 p.
3.	Zaychenko Yu.P., Sharadka A.A.M. Zadacha raspredeleniya potokov razlichnykh klassov v seti s tekhnologiey MPLS [The task of distribution of different classes in the network with MPLS technology]. Visnyk NTUU «KPI» - Bulletin of NTUU «KPI», 2005, no. 43, pp. 113-23.
4.	KucheryavyyYe.A. Upravleniye trafkom i kachestvo obsluzhivaniya v seti Internet [Traffic management and quality of service in the Internet]. Sant-Petersburg, Nauka i Tekhnika Publ., 2004. 336 p.
5.	Olveyn V. Struktura i realizatsiya sovremennoy tekhnologii MPLS [The design and implementation of modern technologies MPLS]. Sant-Petersburg, Piter Publ., 2004. 480 p.
6.	Olifer, V.G., Olifer N.A. Kompyuternye seti. Printsipy, tekhnologii, protokoly [Computer network. Principles, technologies and protocols]. Sant-Peterburg, Piter Publ., 2010. 944 p.
7.	Pakhomova V.M., Povod V.V. Lohichna strukturyzatsiia informatsiinykh merezh zaliznychnoho transportu na osnovi komutatoriv Ethernet [Logical structuring of information networks of railway transport on the basis of Ethernet switches]. Zbirnyknaukovykhprats Donetskoho instytutu zaliznychnoho transportu [Proc. of Donetsk Institute of Railway Transport], 2012, no. 29, pp. 11-18.
8.	Pakhomova V.M., Skaballanovych T.I., Liakhov D.A. Mozhlyvist vykorystannia tekhnolohii 100VG-AnyLAN v informatsiinykh systemakh zaliznychnoho transportu [The possibility of the use of technology 100VG-AnyLAN in the information systems of railway transport]. Visnyk Dnipropetrovskoho natsionalnoho universytetu zaliznichnoho transportu imeni akademika V. Lazariana [Bulletin of Dniproperovsk National University named after Academician V. Lazaryan], 2012, issue 2 (41), pp. 199-204.
9.	Pakhomova V.M., Strybulevych L.V. Modyfikovana imitatsiina model lokalnoi merezhi za markernym metodom dostupu do shyny [Modified network simulation model with token method of bus access]. Nauka ta prohres transportu. Visnyk Dnipropetrovskoho natsionalnoho universytetu zaliznichnoho transportu imeni akademika V. Laza-riana - Science and Transport Progress. Bulletin of Dniproperovsk National University, 2013, no. 4 (46), pp. 90-98.
10.	Stolings V. Sovremennyye kompyuternyye seti [Modern computer networks]. Sant-Petersburg, Piter Publ., 2003. 783 p.
11.	Khandetskyi V.S., Hryhoriev V.M., Khandetskyi P.V. Efektyvnist obminu marshrutnoiu informatsiieiu v iierarkhichnykh strukturakh OSPF-merezh [The efficiency of the exchange of routing information in the hierarchical structures of OSPF networks]. Tezy dopovidi VI mizhnarodnoi naukovoi-praktychnoi konferentsii. «Suchasni problemy i dosiahnennia v haluzi telekomunikatsii ta informatsiinykh tekhnolohii» [Proc. of the VI Intern. Sci and Pract. Conf. «Modern problems and achievements in the field of telecommunications and information technologies»]. Zaporizhia, 2012, pp. 280-281.
12.	Fiche G., Veillard Y. The Tunneling Technique and the Tandem Queue Effect. In International Workshop on Future Service, Alcatel, France 2000.
13.	Le Gall P. Single server queuing networks with varying service times and renewal input. Journal of Appl. Mathematics and Stochastic Analysis, 2000, no. 13, pp. 429-450. doi: 10.1155/s1048953300000368.
Стаття рекомендована до публтацп д.т.н., проф. О. I. Мiхальовим (Украта); д.т.н., проф. А. А. Косолаповим (Украта)
Надшшла до редколегп 04.11.2014
Прийнята до друку 23.12.2014
      
      
    
  
=====

        


﻿НЕЙРО1НФОРМАТИКА ТА ШТЕЛЕКТУАЛЬШ СИСТЕМИ
НЕЙРОИНФОРМАТИКА И ИНТЕЛЛЕКТУАЛЬНЫЕ СИСТЕМЫ
NEUROINFORMATICS AND INTELLIGENT SYSTEMS
УДК 004.93
Зайко Т. А.1, Олшник А. О.2, Cy66oTiH С. О.3
Астрантка, Запор1зький нацюнальний техн1чний ушверситет, Украна 2Канд. техн. наук, доцент, Запор1зький нац1ональний техн1чний ушверситет, Украна, E-mail: olejnikaa@gmail.com
3Д-р техн. наук, професор, Запор1зький нац/ональний техн1чний ун1верситет, Украна
СКОРОЧЕННЯ РОЗМ1РНОСТ1 НАВЧАЛЬНОТ ВИБ1РКИ НА ОСНОВ1
АСОЦ1АТИВНИХ ПРАВИЛ
Розглянуто задачу скорочення навчально! вибiрки. Розроблено метод редукци даних на основi асоцiативних правил. Створено програмне забезпечення на основi запропонованого методу. Проведено експерименти з виршення практичних задач, що дозволило дослiдити ефективнiсть запропонованого методу.
Ключовi слова: асоцiативне правило, вiрогiднiсть, модель, пiдтримка, скорочення, навчальна вибiрка, терм.
ВСТУП
Виб1рки даних, що використовуються для побудови д1агностичних моделей складних об'екпв 1 процеав, м1стягь, як правило, надлишкову шформащю [1, 2], пред-ставлену ознаками, що не впливають на вихщний параметр, 1 множиною подабних екземпляр1в. Використання надлишкових даних при синтез! д1агностичних моделей може привести до побудови моделей, яш характеризуются низькими узагальнювальними властивостями, а також високою структурною та параметричною склад-тстю, що призводить до зб1льшення витрат пам'ягi ЕОМ на збертання моделей 1 збшьшення часу обчислень при обробщ великих масив1в даних. Кр1м того, так1 модел1, як правило, характеризуються низьким р1внем !нтерпрета-бельносп, а також не завжди забезпечують прийнятну точшсть розтзнавання, що ускладнюе або унеможлив-люе !хне застосування на практищ. Отже, перед здшснен-ням синтезу д1агностичних моделей доцшьним е скорочення навчально! виб1рки шляхом виключення з не! над-лишково! шформацп.
В1дом1 методи редукци даних [1-5], як правило, при-значеш або для вщбору ознак, або для вщбору екземп-ляр1в 1 часто не враховують взаемозв'язки комбшацш
© Зайко Т. А., Олшник А. О., Субботш С. О., 2014
деяких значень ознак, як1 також можуть бути виключеш з вихщно! виб1рки. Тому актуальною е розробка нового методу скорочення навчально! виб1рки, який дозволяе виконувати редукцш ознак, екземпляр1в, терм1в ознак 1 формувати множину даних з меншою шльшстю еле-менпв у пор!внянш з вихщною виб1ркою, а також буду-вати на !! основ! даагностичш модел1 з високими значениями показник1в узагальнення й !нтерпретабельност1
Для редукци навчально! виб!рки в ц!й робот! пропо-нуеться використовувати асоц!ативн! правила [6-10], ос-к!льки видобування таких правил з виб!рок даних дозволяе суттево скорочувати обсяги !нформац!!' та виконува-ти узагальнення даних, перетворювати значення ознак у деяк! д!апазони значень, оцшювати ступ!нь впливу ознак на вихщний параметр, а також р!вень !х взаемозв'язку м!ж собою, у т.ч. взаемозв'язки деяких значень ознак.
Метою роботи е створення методу скорочення розм!р-ност! навчально! виб!рки на основ! асощативних правил.
1 ПОСТАНОВКА ЗАДАЧ1 СКОРОЧЕННЯ РОЗМ1РНОСП НАВЧАЛЬНО! ВИБ1РКИ
Нехай задана навчальна виб!рка Б (1):
Б = {ТЪТ2,...,ТЫв	(1)
106 DOI 10.15588/1607-3274-2014-1-15
у якш кожний елемент Tj, j = 1,2,..., Nd мгстить шфор-мащю про деяк1 об'екти або процеси, де ND = |d| -кшьшсть екземпляр1в (елеменпв) у набор1 даних D.
Елементи Tj являють собою множину значень вигля-ДУ (2):
Tj = (t1j,т 2 j,...,т NtJ, yj j,	(2)
де Taj = Vaj min; Taj max J - значення a-! ознаки та для еле-менту Tj; та - а-та ознака множини I = {т1,Т2,...,тNj}, a = 1,2,..., Nj; j - множина ознак, якими описуються елементи Tj , j = 1,2,..., Nd набору даних D; Nj = |l| - кiлькiсгъ ознак у вибiрцi D; Taj min та Taj max - мЫмальне та макси-мальне значення з дапазону можливих значень ознаки т a; yj - значення вихвдного параметра для елементу Tj.
Тодi задача скорочення розмiрностi навчально! вибь рки D ^ D полягае в зменшент кiлькостi ii екземплярiв N'd < Nd та ознак Nj < Nj, що !х описують, зi збережен-ням можливосп побудови дiагностичних моделей з прий-нятними здатностями до апроксимацй' дослвджуваних за-лежностей.
2 МЕТОД СКОРОЧЕННЯ РОЗМРНОСТ1 НАВЧАЛЬНО! ВИБ1РКИ НА ОСНОВ1 АСОЩАГИВНИХ ПРАВИЛ
Для виявлення й усунення надлишково! iнформацü' у вибiрцi пропонуеться метод скорочення розмiрностi навчально! вибiрки, що реалiзуе послiдовно етапи редукцй екземплярiв, редукцй' ознак i скорочення надлиш-кових термiв.
У розробленому методi скорочення розмiрностi навчально' вибiрки для редукцй даних пропонуеться вияв-ляти асоцiативнi правила. 1нформащя про цiкавiсть ви-явлених правил використовуеться для ощнювання сту-пеню впливу ознак на вихвдний параметр, а також взаемозв'язк1в деяких значень ознак м1ж собою.
На початковому етапi для задано'' вибiрки D виконуеть-ся редукцiя и екземплярiв. Для цього дискретизуються значення числових ознак (дiапазон значень
Aa = [min; Tamax J кожно! ознаки Ta розбиваеться на
Nint. a iнтервалiв). Величина Nint a може задаватися ко-ристувачем як параметр методу та бути единою для вах ознак вибiрки D. Крiм того, кшьшсть Nint. a iнтервалiв дискретизацп a-' ознаки Ta може бути визначена шляхом кластеризацл вибiрки D i проектування границь кла-стерiв на координатнi осi в просторi ознак.
Пiсля дискретизацп виконуеться перетворення D ^ D1, у результат якого значення вихiдних ознак Ta замiняються номерами iнгервалiв значень ознак, видше-них у процеа дискретизацй' (3):
Taj п(тaj ),
(3)
де т aj та т 'aj - значення a-' ознаки для j-го екземпляру у вибiрках D та D1, вщповщно; n(zaj) - номер штервалу
значень ознаки Ta, у який попадае И значення Taj дляj-го екземпляру.
Отримаш в результат перетворення D ^ D1 екземп-ляри Tj та Tk з однаковими значеннями ознак T'aj та т ' ak, a = 1,2,..., Nj вважаються е^валентними й надлишкови-ми. Тому у вибiрцi D1 послiдовно для кожних двох еквь валентних екземплярiв Tj й Tk слiд залишити один ек-земпляр Tj, а iнший - виключити (4):
D1 = D1\Tk.
(4)
Пiсля виконання етапу редукцй екземплярiв вщбу-ваеться виявлення нешформативних ознак з наступним !х виключенням з вибiрки. Для редукцй' ознак Ta з вибiр-ки D1 будемо витягати асоцiативнi правила АП/ е БП (БП - база правил), ощнювати !х цiкавiсть та щкашсть кожного терму ознак, на основi чого будемо робити вис-новок про iнформативнiсть кожно! ознаки. Для цього спочатку видобуваються чисельш асоцiативнi правила АП/ : X/ ^ Y/ [8, 11], поим виконуеться ощнювання щка-востi jап кожного з виявлених правил. У якосп оцiнок цiкавостi правил можна використовувати критерй' (5)-(9) [6-10]:
jап/ = supp(X/ ^ Y/)+ supp(X^ ^ Y/)
' АП/
1 АП/
supp(X/ ^ Y/) , supp(X/ )supp(Y/)'
conf (X/ ^ Y/
conf
^ Yi
sui
' АП/
ipp(X/ ^ Y/ >uppX ^ Y/
supp(X/ ^ Y/ )supp(X/ ^ Y/ j
(5)
(6)
(7)
(8)
jап/ = supp(X/ ^ Y/)- supp(X/)supp((/), (9)
де supp(A) - шдтримка множини A, обчислена як вщно-шення кiлькостi елеменпв Tj , що мютять A, до загально!
кiлькостi екземплярiв Nd у наборi даних D; conf (a) -вiрогiд нiсть множини A, що розраховуеться як ввдношен-ня пiдтримки iмплiкацii A (X ^ Y) до тдтримки И лiвоi частини X.
Використовуючи iнформацiю про цiкавостi j ап ви-тягнутих асоцiативних правил, виконуеться ощнювання щкавосп термiв At ak, k = 1,2,..., Nint a кожно! ознаки Ta, a = 1,2,..., Nj. Щкашсть термiв Atak пропонуеться виз-начати за однiею з наступних формул (10)-(12):
1
j AT ak = N £ jAn/ N At ak /:АП/ еБП,
AT ak еАП/
(10)
1Атак = min САП,
ак 1:АП, еБП, ''
Ат ак еАП,
(11)
(12)
iAxak = max Iiап, j'
ак ,:АП, еБП, 1
AT ак еАП,
де NАТак - к1льк1сть асощативних правил АП, е БП, що м1стять терм Атак: Ат ак е АП,.
1нформатившсть 1а ознак та будемо ощнювати, вихо-дячи з ощнок щкавостей терм1в, що входять у ввдповвдну ознаку (13)-(15):
1 Nint. а
1а = N 11 АТак
int. а к=1
1а = max 11 Ат j' к=1,2'...' Nint./ ак
1 а = min 11 Атак j.
к=1,2'...' Nint. а ак
(13)
(14)
(15)
З метою приведення значень ощнок шформативносп ознак до одного штервалу [0;1] виюнаемо ïx нормування (16):
1а -
1а =-
min
a=1'2'...'NI '
{1а j
max
а=1'2'...^
{1а j-
min
а=1'2,...^1 '
{1а j
(16)
Ознаки та з низькими значеннями шформативносп 1а < Ip ( Ip - мшмально прийнятне значення шформативносп) виключаються з виб1рки Д. У результап вик-лючення з виб1рки D[ нешформативних ознак можли-вою е поява надлишкових екземпляр1в, що м1стять одна-ков1 значення ознак i вих1дного параметру. Так1 екземпляри також виключаються. У результат! видален-ня нешформативних ознак i надлишкових екземпляр1в виконуеться перетворення D1 ^ D\ й скорочення роз-м1рносп навчально1 виб1рки.
З метою виконання етапу скорочення надлишкових терм1в з виб1рки D2 витягаються асощативш правила та виявляються взаемозв'язки м1ж р1зними штервалами Ат ак й АтЪш ознак.
У результат! видобування асощативних правил з ви-
б1рки D2 синтезуеться база правил БП2 виду АП, : X , ^ Y, з р1внем в1ропдносп conf ((, ^ Y, ), не нижче мшмально прийнятного minconfidence.
Тому з транзакцш (екземпляр1в) T2 j виб1рки D2 мож-на виключити терми Ат ак е X, при наявносп в цих ж транзакщях терм1в Атът е Y,, що входять у консеквенти Y i правил АП, бази БП 2(17):
T3 j = T2 j \ U (та е Атак )
Ат ак еХ1 ' \
з(Атът cT2 j ) ' (Х , ^Y, )еБП2
Шляхом виключення надлишкових терм1в з виб1рки D2 виконуеться перетворення D2 ^ D3 та формування виб1рки D3 скорочено1 розм1рност! У такий споаб отри -мане розбиття простору ознак D3 м1стить суттево мен-шу юльшсть елеменпв Ат ак у пор1внянш з вихвдною ви-б1ркою D' характеризуеться бшьш високими узагальню-ючими властивостями й дозволяе понизити структурну та параметричну складшсть синтезованих д1агностичних моделей.
Запропонований метод скорочення розм1рносп на-вчальноï виб1рки на основ1 асощативних правил перед-бачае виконання етатв редукци екземпляр1в, ознак i надлишкових терм1в, для ощнювання шформативносп ознак використовуе шформащю про витягнуп асощативш правила й дозволяе формувати розбиття простору ознак з меншою к1льк1стю екземпляр1в у пор1внянш з вихвдною виб1ркою, що у свою чергу дозволяе синтезувати бшьш просп та зручш для сприйняття д1агностичт модел1. 3 АНАЛЗ ОБЧИСЛЮВАЛЬНОÏ СКЛАДНОСТ1
Обчислювальну складшсть методу скорочення роз-м1рност1 навчальноï виб1рки визначимо як
ОЕ = О
( з ^
I ог
V /=1
, де кожний доданок Ot характеризуе об-
числювальну складн1сть в1дпов1дного /-го етапу методу, а O() - оператор нотацп Ландау «о велике».
На етат редукци екземпляр1в виконуеться дискрети-
защя Ni = |l| ознак з наступним пошуком для кожного елемента Tj (j = 1,2,...,Nd) екв1валентних екземпляр1в (таких, у яких значення вщповщних ознак належить одна-ковим 1нтервалам тау, а = 1,2'..., 11 ). Отже, складнюгь пер-шого етапу може бути визначена в такий споаб (18):
о = o(Nd
(18)
Етап редукци ознак передбачае видобування чисель-них асощативних правил з наступним використанням вiдповiдноï iнформацiï для виключення нешформативних ознак. На обчислення ощнок шформативносп кож-
но1' з |l| ознак буде потр1бно Ои ( l| ) елементарних опе-
рацш. Оск1льки обчислювальна складн1сть виявлення чисельних асощативних правил може бути оцшена як
Оап I • Nd log2 (Nd )+|l|2 ^ ' величину О 2 визначимо за формулою (19):
О2 = Ои (I)+оап i|I • Nd log2 (nd )
= о(| I| • Nd log2 (Nd )+|l|:
(19)
Для виключення надлишкових терм1в необх1дно про-анал1зувати кожний з Nd екземпляр1в на наявн1сть у ньо-му терм1в Атак'а = 1,2'..., I, яш можуть бути виключен1.
2
Враховуючи також необхвдшсть видобування асоц1атив- рочення навчально! виб1рки (зменшення шлькосп ознак, них правил на цьому етат, одержуемо наступну оцшку екземпляр1в), а також характеристики модели побудова-
обчислювально! складносп (20):
О3 = От (оИ)+0Ап У/| • 1см2 (о )+| I21_
но! на основ1 скорочено! виб1рки:
-	к1льк1сть екземпляр1в у виб1рщ тсля скорочення N0;
-	коефщент скорочення шлькосп екземпляр1в (22):
= О(| I • 1СЕ2 (Ыо ) + | 12 1.
(20)
Отже, загальна оцшка обчислювально! складносп методу скорочення розм1рносп навчально! виб1рки може бути визначена за формулою (21):
а ыо _
N0
(2)
-	кшьшсть ознак у виб1рщ тсля скорочення |
-	коефщенг скорочення шлькосп ознак (23):
ОЕ = О (ои)+ О2 Г |/| • Ыо 10В2 (Ыо) +11\
121+
(23)
+ Оз уИ| • Ы0 1ов2 (Ыо )+ И ) _ О[И1 • ЫО 1082 (ЫО ) + И ) .(21) Як видно, оцшка Ое запропонованого методу е про-
- коефщент скорочення розм1рносп виб1рки (24):
порцшною до величини Ыр 1082 (о ) та квадратично залежить в1д шлькосп ознак у виб1рщ О. Це дозволяе зро-бити висновок про те, що розроблений метод скорочення розм1рносп навчально! виб1рки на основ1 асощатив-них правил е обчислювально ефективним. 4 ЕКСПЕРИМЕНТИ Й РЕЗУЛЬТАТИ Для виконання експериментального дослщження запропонованого методу скорочення розм1рносп навчально! виб1рки на основ1 асощативних правил вш був про-грамно реал1зований мовою С#. Навчальна виб1рка для проведения експерименпв м1стила шформацш про характеристики сировини й параметри технолопчного про-цесу виготовлення кондитерсько!' продукци для 3284 парий вироб1в (спостережень), що описуються за допомогою 43 ознак. Дал1 ця виб1рка скорочувалася шляхом засто-сування запропонованого методу, а також р1зних метода скорочення навчальних множин (методи вщбору ознак [2, 4, 5, 12] 1 методи ввдбору екземпляр1в [1-3, 13, 14]).
Для пор1вняння розробленого методу з аналогами використовувалися критерп, що враховують стушнь ско-
Таблиця 1. Результата скорочення навчально! вибiрки
_ Ы'о\!'| _
0 _ ЫОЙ=а ыос
(24)
-	помилка модел1, побудовано! на основ1 навчально! виб1рки е0;
-	помилка модел1, побудовано! на основ1 тестово! виб1рки
-	структурна складшсть синтезовано! модел1 в я;
-	параметрична складшсть синтезовано! модел в р.
У якосп модел1, синтезовано! на основ1 вихщно! та
скорочених виб1рок, була обрана нейро-нечика мережа Мамдаш [5, 15], яка будувалася шляхом вщображення множини екземпляр1в у правила, використовувалася П-под1бна функщя належносп [5, 10, 15]. Структурна складшсть в я тако! модел визначалася як шльшсть вико-ристовуваних нейроелеменпв, параметрична в р - як загальна кшьшсть параметр1в модел (вагових коефщенпв, параметр1в функцл належносп).
Результати експерименпв з1 скорочення навчально! виб1рки для синтезу д1агностично! модел1 якосп кондитерсько!' продукци наведено в табл. 1.
аы _
Метод	N0	а ЫО	I'	а и	а О			вя	в р
1. Вих1дна виб1рка (скорочення виб1рки не виконувалося)	3284	1	43	1	1	0	0,13	3510	4369
2. Методи вщбору ознак 2.1. В1дб1р з додаванням ознак [4, 5, 12]	3284	1	34	0,79	0,79	0,037	0,054	3465	4144
2.2. В1дб1р з видаленням ознак [4, 5, 12]	3284	1	31	0,72	0,72	0,042	0,061	3450	4069
2.3. Еволюцшний метод вщбору ознак [12]	3284	1	25	0,58	0,58	0,036	0,045	3420	3919
3. Методи вщбору екземпляргв 3.1. Випадковий ввдб1р [1, 2]	1642	0,50	43	1	0,50	0,041	0,059	1868	2727
3.2. Метод на основ! переборного пошуку [13]	1193	0,36	43	1	0,36	0,036	0,056	1419	2278
3.3. Метод на основ! еволюцшного пошуку [14]	981	0,30	43	1	0,30	0,031	0,046	1207	2066
4. Метод скорочення навчально! виб1рки на основ! асощативних правил	956	0,29	27	0,63	0,18	0,035	0,044	1102	1641
Як видно з табл. 1, нейро-нечгтка мережа, побудована на основi вих1дно1 (не скорочежя) вибiрки, характеризуеть-ся високими значеннями показник1в струкгурно1 та пара-метрично1 складност (ßs = 3510, ß p = 4369), оскшьки в мереж1 мiститься велика кшьшсть правил i термiв. Це, з одного боку, дозволяе досягнути нульово1 помилки мо-делi, визначено1 на основ! навчально1 вибiрки, а з iншого боку, не дозволяе забезпечити прийнятне значення помилки, розраховано1 на основi тестово1 вибiрки (st = 0,13). Крiм того, висок значення критерiïв ß s, ß p та st характе-ризують таку нейро-нечiтку мережу як модель з низьки-ми показниками iнтерпретабельносгi й узагальнення.
Використання методiв ввдбору ознак [4, 5, 12] дозволило незначно скоротити структурну та параметричну складнiсть моделi, пiдвищивши ïï iнтерпретабельнiсть, i збiльшити ïï узагальнюючi здатносп ( значення критерiю st для рiзних методiв становило 0,054, 0,061, i 0,045, що е прийнятним для даноï' предметжл областi).
Методи ввдбору екземплярiв [1, 2, 13, 14] дозволили зменшити навчальну вибiрку на 50-70 % (значення кое-фiцiенту a d для рiзних методiв склало 0,3-0,5). Скорочення екземплярiв забезпечило зменшення кiлькостi правил у синтезованоï нейро-нечiткоï мереж!, що у свою чергу дозволило скоротити структурну й параметричну складнiсть (для еволющйного методу скорочення екзем-пляр!в ßs = 1207, ß p = 2066), забезпечивши при цьому прийнятш значення показника (ввд 0,046 до 0,059).
Запропонований метод скорочення навчальноï виб!р-ки на основ! асощативних правил дозволив суттево зменшити розм!ршсть навчальноï виб!рки (a D = 0,018), що забезпечуеться за рахунок виконання еташв редукци ек-земпляр!в, редукцiï ознак i скорочення надлишкових термш. Синтезована на основ! виб!рки, скороченоï' за допомогою розробленого методу, нейро-нечгтка модель характеризуемся прийнятними значеннями показнишв so та st ( s o = 0,035, st = 0,044), а отже, i прийнятними апрокси-мащйними й узагальнюючими властивостями. Низью значення показниюв ßs та ß (ßs = 1102, ßp = 1641) дося-
гаються за рахунок суттевого скорочення шлькосп правил i ознак у синтезованш нейро-нечитай мереж!. Так! значення критерив ß s i ß p показують, що модел!, побудо-
ваш на основ! виб!рок, скорочених за допомогою запропонованого методу, е бшьш простими та зручними для сприйняття ( тобто е б!льш !нтерпретабельними).
Таким чином, результати експерименпв показали, що запропонований метод скорочення розм!рност навчаль-ноï' виб!рки на основ! асощативних правил дозволяе фор-мувати множину даних з меншою кшьюстю елеменпв у пор!внянш з вихвдною виб!ркою, а також будувати на ïï основ! д!агностичш модел! з високими значеннями по-казниюв узагальнення й !нтерпретабельност1
ВИСНОВКИ
У робот! виршено актуальну задачу редукци навчаль-них виб!рок для побудови д!агностичних моделей.
Наукова новизна роботи полягае в тому, що запро-поновано метод скорочення розм!рносп навчальноï' ви-б!рки на основ! асощативних правил, який передбачае виконання еташв редукци екземпляр!в, ознак i надлишкових терм!в, для ощнювання шформативносп ознак ви-користовуе шформащю про витягнуп асощативш правила та дозволяе формувати розбиття простору ознак з меншою шльшстю екземпляр!в у пор!внянш з вихвдною виб!ркою, що, у свою чергу, дозволяе синтезувати бшьш прост! та зручш для сприйняття д!агностичш моделт
Практична цттсть отриманих результапв полягае в тому, що на основ! запропонованого методу виршено практичну задачу скорочення навчальжл виб!рки для синтезу даагностичжй модел якосп кондитерськоï' продукци.
Роботу виконано в рамках держбюджетноï науково-дослiдноï теми Запор!зького нащонального техшчного ушверситету «1нтелектуальш шформацшш технологiï автоматизаци проектування, моделювання, керування й д!агностування виробничих процеав i систем» (номер державноï реестрацiï 0112U005350) за щдтримки проекту «Centers of Excellence for young Researchers (CERES)» (N544137-TEMPUS-1-2013-1-SK-TEMPUS-JPHES) програ-ми «Темпус» Cвропейськоï Комши.
СПИСОК ЛГГЕРАТУРИ
1.	Chaudhuri, A. Survey sampling theory and methods / A. Chaudhuri, H. Stenger. - New York : Chapman & Hall, 2005. - 416 p.
2.	Encyclopedia of survey research methods / ed. P. J. Lavrakas. -Thousand Oaks : Sage Publications, 2008. - Vol. 1-2. - 968 p.
3.	Кокрен, У. Методы выборочного исследования / У. Кок-рен ; пер. с англ. И. М. Сонина ; под ред. А. Г. Волкова, Н. К. Дружинина. - М. : Статистика, 1976. - 440 с.
4.	Jensen R. Computational intelligence and feature selection: rough and fuzzy approaches / R. Jensen, Q. Shen. - Hoboken: John Wiley & Sons, 2008. - 339 p.
5.	Интеллектуальные информационные технологии проектирования автоматизированных систем диагностирования и распознавания образов : монография / [С. А. Субботин, Ан. А. Олейник, Е. А. Гофман, С. А. Зайцев, Ал. А. Олей-ник ; под ред. С. А. Субботина]. - Харьков : ООО «Компания Смит», 2012. - 317 с.
6.	Gkoulalas-Divanis, A. Association Rule Hiding for Data Mining / A. Gkoulalas-Divanis,V. S. Verykios. - New York : Springer-Verlag, 2010. - 150 p.
7.	Koh, Y. S. Rare Association Rule Mining and Knowledge Discovery / Y. S. Koh, N. Rountree. - New York : Information Science Reference, 2009. - 320 p.
8.	Zhang, C. Association rule mining: models and algorithms / C. Zhang, S. Zhang. - Berlin : Springer-Verlag. - 2002. - 238 p.
9.	Zhao, Y. Post-mining of association rules: techniques for effective knowledge extraction / Y. Zhao, C. Zhang, L. Cao. -New York : Information Science Reference, 2009. - 372 p.
10.	Encyclopedia of artificial intelligence / Eds.: J. R. Dopico, J. D. de la Calle, A. P. Sierra. - New York : Information Science Reference, 2009. - Vol. 1-3. - 1677 p.
11.	Зайко, Т. А. Извлечение численных ассоциативных правил с учетом значимости признаков / Т. А. Зайко, А. А. Олейник, С. А. Субботин // Схщно-Свропейський журнал передових технологш. - 2013. - N° 5/4 (65). -С. 28-34.
12.	Олшник, А. О. 1нтелектуальний анаиз даних / А. О. Олшник, С. О. Субботш, О. О. Олiйник : навчальний посiбник. - За-портжжя : ЗНТУ, 2012. - 271 с.
13.	Субботин, С. А. Критерии индивидуальной информативности и методы отбора экземпляров для построения диагностических и распознающих моделей / С. А. Субботин // Бюнжа штелекту. - 2010. - № 1. - С. 38-42.
14.	Субботин, С. А. Методы формирования выборок для построения диагностических моделей по прецедентам / С. А. Субботин // Вюник Национального техшчного уш-
верситету «Харювський полтехшчний шститут» : зб. наук. праць. - Харюв : НТУ «ХП1», 2011. - № 17. -C. 149-156.
15. Гибридные нейро-фаззи модели и мультиагентные технологии в сложных системах : монография / [В. А. Филатов, Е. В. Бодянский, В. Е. Кучеренко и др. ; под общ. ред. Е. В. Бодянского]. - Дншропетровськ : Системш технологи, 2008. - 403 с.
Стаття надшшла до редакци 10.12.2013.
Шсля доробки 11.03.2014.
Зайко Т. А.1, Олейник А. А.2, Субботин С. А.3
'Аспирантка, Запорожский национальный технический университет, Украина
2Канд. техн. наук, доцент, Запорожский национальный технический университет, Украина
3Д-р техн. наук, профессор, Запорожский национальный технический университет, Украина
СОКРАЩЕНИЕ РАЗМЕРНОСТИ ОБУЧАЮЩЕЙ ВЫБОРКИ НА ОСНОВЕ АССОЦИАТИВНЫХ ПРАВИЛ
Рассмотрена задача сокращения обучающей выборки. Разработан метод редукции данных на основе ассоциативных правил. Создано программное обеспечение на основе предложенного метода. Проведены эксперименты по решению практических задач, что позволило исследовать эффективность предложенного метода.
Ключевые слова: ассоциативное правило, достоверность, модель, поддержка, сокращение, обучающая выборка, терм.
Zayko T.1, Oliinyk A.2, Subbotin S.3
'Postgraduate student, Zaporizhzhya National Technical University, Ukraine 2Ph.D., Associate Professor, Zaporizhzhya National Technical University, Ukraine 3Doctor of Science, Professor, Zaporizhzhya National Technical University, Ukraine TRAINING SAMPLE DIMENSION REDUCTION BASED ON ASSOCIATION RULES
The problem of training sample reduction is considered. A method for data reduction based on association rules is developed. The proposed method of training sample dimensionality reduction includes stages of reduction of instances, features and redundant terms, to evaluate the informativety of features uses the information about the extracted association rules. The developed method allows to create a partition of the feature space with less examples than in the original sample, which in turn allows the synthesis of simpler and more convenient for the perception of the diagnostic model. The practical value of these results is that on the basis of the proposed method the practical problem of reducing the training sample for the synthesis of the diagnostic model of quality confectionery products is solved. Keywords: association rule, confidence, model, support, reduction, training sample, term.
REFERENCES
1.	Chaudhuri A., Stenger H. Survey sampling theory and methods. New York, Chapman & Hall, 2005, 416 p.
2.	Encyclopedia of survey research methods / ed. P. J. Lavrakas. Thousand Oaks, Sage Publications, 2008, Vol. 1-2, 968 p.
3.	Kokren U. per. s angl. I. M. Sonina ; pod red. A. G. Volkova, N. K. Druzhinina. Metody vyborochnogo issledovanija. Moscow, Statistika, 1976, 440 p.
4.	Jensen R., Shen Q. Computational intelligence and feature selection: rough and fuzzy approaches. Hoboken, John Wiley & Sons, 2008, 339 p.
5.	Subbotin S. A., Olejnik An. A., Gofman E. A., Zajcev S. A., Olejnik Al. A.; pod red. Subbotina S. A. Intellektual'nye informacionnye	tehnologii	proektirovanija avtomatizirovannyh sistem diagnostirovanija i raspoznavanija obrazov : monografija. Har'kov, OOO «Kompanija Smit», 2012, 317 p.
6.	Gkoulalas-Divanis A., Verykios V. S. Association Rule Hiding for Data Mining. New York, Springer-Verlag, 2010, 150 p.
7.	Koh Y. S., Rountree N. Rare Association Rule Mining and Knowledge Discovery. New York, Information Science Reference, 2009, 320 p.
8.	Zhang C., Zhang S. Association rule mining: models and algorithms. Berlin, Springer-Verlag, 2002, 238 p.
9.	Zhao Y., Zhang C., Cao L. Post-mining of association rules: techniques for effective knowledge extraction. New York, Information Science Reference, 2009, 372 p.
10.	Encyclopedia of artificial intelligence, Eds.: J. R. Dopico, J. D. de la Calle, A. P. Sierra. New York : Information Science Reference, 2009, Vol. 1-3, 1677 p.
11.	Zajko T. A., Olejnik A. A., Subbotin S. A. Izvlechenie chislennyh associativnyh pravil s uchetom znachimosti priznakov, Shidno-Cvropejs 'kij zhurnalperedovih tehnologij, 2013, No. 5/4 (65), pp. 28-34.
12.	Olijnik A. O., Subbotin S. O., Olijnik O. O. Intelektual'nij analiz danih: navchal'nij posibnik. Zaporizhzhja, ZNTU, 2012, 271 p.
13.	Subbotin S. A. Kriterii individual'noj informativnosti i metody otbora jekzempljarov dlja postroenija diagnosticheskih i raspoznajushhih modelej, Bionika intelektu, 2010, No. 1, pp. 38-42.
14.	Subbotin S. A. Metody formirovanija vyborok dlja postroenija diagnosticheskih modelej po precedentam, Visnik Nacional'nogo tehnichnogo universitetu «Harkivs'kij politehnichnij institut» : zb. nauk. prac'. Harkiv, NTU «HPI», 2011, No. 17, pp. 149-156.
15.	Filatov V. A., Bodjanskij E. V., Kucherenko V. E. i dr. ; pod obshh. red. E. V. Bodjanskogo Gibridnye nejro-fazzi modeli i mul'tiagentnye tehnologii v slozhnyh sistemah : monografija. Dnipropetrovs'k, Sistemni tehnologiï, 2008, 403 p.
      
      
    
  



